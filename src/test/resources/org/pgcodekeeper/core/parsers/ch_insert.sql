insert into "/t0" values (0, 0);
insert into "/t1" values (0, 1);
INSERT INTO /* test 01413, query 1 */ rows_events_test VALUES (1,1);
INSERT INTO /* test 01413, query 2 */ rows_events_test VALUES (2,2), (3,3);
INSERT INTO 01154_test VALUES (1), (2), (3);
INSERT INTO 01154_test VALUES (toUUID('00000000-0000-0000-0000-000000000001')), (toUUID('00000000-0000-0000-0000-000000000002')), (toUUID('00000000-0000-0000-0000-000000000003'));
INSERT INTO 01504_test SELECT '1_1', number FROM numbers(10000);
INSERT INTO 01504_test SELECT concat(toString(number), '_1'), number FROM numbers(10000);
INSERT INTO 01504_test SELECT number % 77 AS k, SUM(number) AS value, (1, 1.2), bitmapBuild(groupArray(number)) FROM numbers(10000000) group by k;
INSERT INTO 01504_test_memory SELECT number % 77 AS k, SUM(number) AS value, (1, 1.2), bitmapBuild(groupArray(number)) FROM numbers(10000000) group by k;
INSERT INTO 01681_database_for_cache_dictionary.simple_key_complex_attributes_source_table VALUES(0, 'value_0', 'value_second_0');
INSERT INTO 01681_database_for_cache_dictionary.simple_key_complex_attributes_source_table VALUES(1, 'value_1', NULL);
INSERT INTO 01681_database_for_cache_dictionary.simple_key_complex_attributes_source_table VALUES(2, 'value_2', 'value_second_2');
INSERT INTO 01681_database_for_cache_dictionary.simple_key_hierarchy_table VALUES (1, 0);
INSERT INTO 01681_database_for_cache_dictionary.simple_key_hierarchy_table VALUES (2, 1);
INSERT INTO 01681_database_for_flat_dictionary.simple_key_complex_attributes_source_table VALUES(1, 'value_1', NULL);
INSERT INTO 01681_database_for_flat_dictionary.simple_key_complex_attributes_source_table VALUES(2, 'value_2', 'value_second_2');
INSERT INTO agg_func_col (k, d) SELECT 1 AS k, arrayReduce('sumState', [toUInt64(100)]) AS d;
INSERT INTO agg_over_nullable(partition, timestamp, user_id, description) VALUES(now(), now(), 1, 'aa');
INSERT INTO agg_over_nullable(partition, timestamp, user_id, description) VALUES(now(), now(), 1, 'ss');
INSERT INTO agg_over_nullable(partition, timestamp, user_id, description) VALUES(now(), now(), 1, NULL);
INSERT INTO agg_table SELECT toDateTime('2020-10-01 19:20:30'), 'hello', ([any(number)], sum(number)), sum(number),   sumMap((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))) FROM numbers(10);
insert into aggr select 1, maxState('');
insert into aggr select 2, maxState('\0');
insert into aggr select 3, maxState('\0\0\0\0');
insert into aggr select 4, maxState('abrac\0dabra\0');
INSERT INTO aggregate_functions_null_for_empty SELECT number, number * 2 FROM numbers(8192 * 10) SETTINGS aggregate_functions_null_for_empty = true;
INSERT INTO aggregates   SELECT toDate('2016-10-31') AS d, uniqState(toUInt64(arrayJoin(range(100)))) AS s   UNION ALL   SELECT toDate('2016-11-01') AS d, uniqState(toUInt64(arrayJoin(range(100)))) AS s;
INSERT INTO aggregating_00191 (k, u) SELECT intDiv(number, 100) AS k, uniqState(toUInt64(number % 100)) AS u FROM (SELECT * FROM system.numbers LIMIT 1000) GROUP BY k;
INSERT INTO aggregating_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO aggregating_merge_tree VALUES (1, 1, '2020-01-01'), (2, 1, '2020-01-02'), (1, 5, '2020-01-01'), (2, 5, '2020-01-02');
INSERT INTO aggregating_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
insert into alias_1 (dt, col, col2, col3) values ('2020-02-02', 1, 2, 3);
insert into alias_2 (dt, col, col2, col3) values ('2020-02-01', 1, 2, 3);
insert into alias_2__fuzz_25 (dt, col, col2, col3) values ('2020-02-01', 1, 2, 3);
insert into alias_key_condition values (1, 2), (3, 4);
INSERT INTO alias_local10 (Id, EventDate, field1, field2) VALUES (1, '2000-01-01', 1, '12345'), (2, '2000-01-01', 2, '54321'), (3, '2000-01-01', 0, '');
insert into aliases_test (id) values (0);
INSERT INTO all_valid VALUES (1, 'SELECT 1'), (2, 'SeLeCt 22'), (3, 'InSerT into TAB values (\'\')');
INSERT INTO Alpha VALUES ('a', 1);
INSERT INTO alter_00061 VALUES ('2015-01-01', 10, 42);
INSERT INTO alter_00061 VALUES ('2015-01-01', 6,38,[10,20,30],['asd','qwe','qwe'],['2000-01-01','2000-01-01','2000-01-03'],'100500');
INSERT INTO alter_00061 VALUES ('2015-01-01', 7, 39, [10,20,30], ['120','130','140'],['2000-01-01','2000-01-01','2000-01-03']);
INSERT INTO alter_00061 VALUES ('2015-01-01', 8, 40, [1,2,3], ['12','13','14']);
INSERT INTO alter_00121 VALUES ('2014-01-01');
INSERT INTO alter_00121 VALUES ('2014-01-01', 1);
INSERT INTO alter_00121 VALUES ('2014-02-01', 1);
INSERT INTO alter_00147 (`n.x`) VALUES (['Hello', 'World']);
INSERT INTO alter_00147 (`n.x`) VALUES (['Hello2', 'World2']);
INSERT INTO alter_00394 VALUES ('2015-01-01', 1, 10, [1], ['1']);
INSERT INTO alter_00394 VALUES ('2015-01-01', 2, 20, [1,2], ['1','12']);
INSERT INTO Bin_at_test VALUES ('2018-02-24T15:14:01',3), ('2018-02-23T16:14:01',4), ('2018-02-26T15:14:01',5);
INSERT INTO binary_op_mono1 VALUES (toUnixTimestamp('2020-09-01 00:00:00') * 1000, 1), (toUnixTimestamp('2020-09-01 00:00:00') * 1000, 2);
INSERT INTO cast_enums VALUES ('wrong_value', '2017-01-02', 7);
insert into cc values (2, 'World');
INSERT INTO cdp_orders VALUES ('hello', 'world', '2020-01-02 03:04:05');
INSERT INTO check_codec SELECT number, number * 2 FROM numbers(1000);
INSERT INTO check_query_log VALUES (1, 'A'), (2, 'B'), (3, 'C');
INSERT INTO check_query_test_non_adaptive SELECT number, toString(number) FROM system.numbers LIMIT 77;
INSERT INTO check_query_test_non_adaptive SELECT number, toString(number) FROM system.numbers LIMIT 81920;
INSERT INTO check_query_tiny_log VALUES (1, 'A'), (2, 'B'), (3, 'C');
INSERT INTO check_system_tables SELECT * FROM numbers(1) SETTINGS prefer_localhost_replica=0;
INSERT INTO check_system_tables SELECT * FROM numbers_mt(101);
INSERT INTO check_system_tables SELECT * FROM numbers_mt(50);
INSERT INTO check_system_tables SELECT number+50 FROM numbers(50);
INSERT INTO check_system_tables VALUES (1);
INSERT INTO check_system_tables VALUES (1, 1, 1);
INSERT INTO check_system_tables VALUES (1, 2, 1);
INSERT INTO check_table_test (value1) SELECT value FROM system.events WHERE event = 'Merge';
INSERT INTO check_table_test (value2) SELECT value FROM system.events WHERE event = 'Merge';
INSERT INTO check_table_with_indices VALUES (0, 'test'), (1, 'test2');
INSERT INTO checkouts SELECT number as id, '2000-01-01 10:00:00' from numbers(50000);
INSERT INTO checkouts SELECT number as id, '2000-01-01 11:10:00' from numbers(1000);
INSERT INTO checkouts SELECT number+2 as id, '2001-01-01 11:10:02' from numbers(1);
INSERT INTO checksums_r1 VALUES (1, 'hello');
INSERT INTO checksums_r3 VALUES (1, 'hello');
insert into children (id, childName) values ('1', 'Robert'), ('1', 'Susan'), ('3', 'Sarah'), ('4', 'David'), ('4', 'Joseph'), ('5', 'Robert');
INSERT INTO clear_column VALUES ('2016-12-12', 1, 'a'), ('2016-11-12', 2, 'b');
INSERT INTO clear_column VALUES (1, 1), (2, 3);
INSERT INTO clear_column1 (d) VALUES ('2000-01-01'), ('2000-02-01');
INSERT INTO clear_column1 VALUES ('2000-01-01', 1, 'a'), ('2000-02-01', 2, 'b');
INSERT INTO clear_column1 VALUES ('2000-01-01', 3, 'c'), ('2000-02-01', 4, 'd');
INSERT INTO click_storage SELECT number AS PhraseID from numbers(10);
INSERT INTO clicks VALUES ('facebook.com'), ('meta.ua'), ('google.com');
INSERT INTO codecs SELECT number, number, toString(number) FROM numbers(1000);
INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)   SELECT number AS n, 'e()', e() AS v, v, v, v FROM system.numbers LIMIT 1, 100;
INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)   SELECT number AS n, 'log2(n)', log2(n) AS v, v, v, v FROM system.numbers LIMIT 101, 100;
INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)   SELECT number AS n, 'n*sqrt(n)', n*sqrt(n) AS v, v, v, v FROM system.numbers LIMIT 201, 100;
INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)   SELECT number AS n, 'sin(n*n*n)*n', sin(n * n * n * n* n) AS v, v, v, v FROM system.numbers LIMIT 301, 100;
INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueI64, valueI64)   VALUES (1, 18446744073709551615, 18446744073709551615, 9223372036854775807, 9223372036854775807), (2, 0, 0, -9223372036854775808, -9223372036854775808), (3, 18446744073709551615, 18446744073709551615, 9223372036854775807, 9223372036854775807);
INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueU32, valueU32, ref_valueU16, valueU16, ref_valueU8, valueU8, ref_valueI64, valueI64, ref_valueI32, valueI32, ref_valueI16, valueI16, ref_valueI8, valueI8, ref_valueDT, valueDT, ref_valueD, valueD)   SELECT number as n, n * n * n as v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, toDateTime(v), toDateTime(v), toDate(v), toDate(v)   FROM system.numbers LIMIT 101, 1000;
INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueU32, valueU32, ref_valueU16, valueU16, ref_valueU8, valueU8, ref_valueI64, valueI64, ref_valueI32, valueI32, ref_valueI16, valueI16, ref_valueI8, valueI8, ref_valueDT, valueDT, ref_valueD, valueD)   SELECT number as n, n as v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, toDateTime(v), toDateTime(v), toDate(v), toDate(v)   FROM system.numbers LIMIT 2001, 1000;
INSERT INTO collapsing VALUES ('k1', 'k1v1', -1), ('k1', 'k1v2', 1);
INSERT INTO collapsing VALUES ('k1', 'k1v1', 1);
INSERT INTO collapsing VALUES ('k2', 'k2v1', 1), ('k2', 'k2v1', -1), ('k3', 'k3v1', 1);
INSERT INTO collapsing VALUES ('k4', 'k4v1', -1), ('k4', 'k4v2', 1), ('k4', 'k4v2', -1);
INSERT INTO collapsing_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO collapsing_merge_tree VALUES (1, 1, '2020-01-01'), (2, 1, '2020-01-02'), (1, -1, '2020-01-01'), (2, -1, '2020-01-02'), (1, 1, '2020-01-01');
INSERT INTO collapsing_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO collapsing_suspicious_granularity VALUES (1, 1, -1), (1, 1, 1);
INSERT INTO collapsing_table SELECT if(number == 8192, 8191, number), 1, if(number == 8192, +1, -1) FROM numbers(8193);
INSERT INTO collate_test1 VALUES (1, (1, 'Ё')), (1, (1, 'ё')), (1, (1, 'а')), (2, (2, 'А')), (2, (1, 'я')), (2, (2, 'Я')), (1, (2,'а')), (1, (3, 'я'));
INSERT INTO collate_test1 VALUES (1, ['Ё']), (1, ['ё']), (1, ['а']), (2, ['А']), (2, ['я', 'а']), (2, ['Я']), (1, ['ё','а']), (1, ['ё', 'я']), (2, ['ё', 'а', 'а']);
INSERT INTO collate_test2 VALUES (1, (1, 'Ё')), (1, (1, 'ё')), (1, (1, 'а')), (2, (2, 'А')), (2, (1, 'я')), (2, (2, 'Я')), (1, (2, null)), (1, (3, 'я')), (1, (1, null)), (2, (2, null));
INSERT INTO collate_test2 VALUES (1, ['Ё']), (1, ['ё']), (1, ['а']), (2, ['А']), (2, ['я']), (2, [null, 'Я']), (1, ['ё','а']), (1, ['ё', null, 'я']), (2, ['ё', 'а', 'а', null]);
INSERT INTO collate_test3 VALUES (1, (1, (1, ['Ё']))), (1, (2, (1, ['ё']))), (1, (1, (2, ['а']))), (2, (1, (1, ['А']))), (2, (2, (1, ['я']))), (2, (1, (1, ['Я']))), (1, (2, (1, ['ё','а']))), (1, (1, (2, ['ё', 'я']))), (2, (1, (1, ['ё', 'а', 'а'])));
INSERT INTO collate_test3 VALUES (1, [['а', 'я'], ['а', 'ё']]), (1, [['а', 'Ё'], ['ё', 'я']]), (2, [['ё']]), (2, [['а', 'а'], ['я', 'ё']]);
INSERT INTO column_modify_test VALUES (1,'one',0);
INSERT INTO column_modify_test VALUES (2,'two',0);
INSERT INTO column_modify_test VALUES (3,Null,0);
INSERT INTO column_size_bug VALUES(now(),1);
INSERT INTO column_swap_test_test SELECT number AS i, format('test {} kek {}', toString(number), toString(number + 10)) AS a, 1 AS b FROM system.numbers LIMIT 1000000;
INSERT INTO column_swap_test_test SELECT number AS i, toString(number) AS a, format('test {} kek {}', toString(number), toString(number + 10)) b FROM system.numbers LIMIT 1000000;
INSERT INTO column_swap_test_test VALUES (1, 'cat', 1), (2, 'dog', 2);
INSERT INTO columns VALUES (1, 2, 3);
INSERT INTO columns_transformers VALUES (100, 10, 324), (120, 8, 23);
INSERT INTO columns_transformers VALUES (100, 10, 324, 120, 8, 23);
INSERT INTO columns_with_multiple_streams VALUES(1, 1, [[1]], tuple(1, [1]));
INSERT INTO columns_with_multiple_streams VALUES(2, 2, [[2]], tuple(2, [2]));
INSERT INTO columns_with_multiple_streams VALUES(3, 3, [[3]], tuple(3, [3]));
INSERT INTO columns_with_multiple_streams_bad_case VALUES(1), (2);
INSERT INTO columns_with_multiple_streams_bad_case VALUES(3);
INSERT INTO columns_with_multiple_streams_compact VALUES(1, 1, [[1]], tuple(1, [1]));
INSERT INTO columns_with_multiple_streams_compact VALUES(2, 2, [[2]], tuple(2, [2]));
INSERT INTO columns_with_multiple_streams_compact VALUES(3, 3, [[3]], tuple(3, [3]));
INSERT INTO ColumnsClauseTest VALUES (100, 10, 324), (120, 8, 23);
INSERT INTO commententry1 VALUES ('2016-01-01', 'xyz', 'cpp');
INSERT INTO complex_key_dictionary_source_table VALUES (1, 'key', 'First', 'First');
INSERT INTO complex_key_dictionary_source_table VALUES (2, 'key', 'Second', NULL);
INSERT INTO complex_key_dictionary_source_table VALUES (3, 'key', 'Third', 'Third');
INSERT INTO complex_key_dictionary_source_table__fuzz_267 FORMAT Values (1, 'key', 'First', 'First');
INSERT INTO complex_key_source_table_01862 VALUES (1, 'FirstKey', 'First');
INSERT INTO compress_table VALUES(1, '1', '1', '1');
INSERT INTO compress_table VALUES(2, '2', '2', '2');
INSERT INTO compression_codec SELECT 3, '!', toDate('2018-12-16'), toDate32('2018-12-16'), 3.3, 'ccc', 7, [7,8,9], map('k5',5,'k6',6), tuple(5,6) FROM system.numbers LIMIT 10000;
INSERT INTO compression_codec VALUES(1, 'hello', toDate('2018-12-14'), 1.1, 'aaa', 5);
INSERT INTO compression_codec VALUES(1, 'hello', toDate('2018-12-14'), toDate32('2018-12-14'), 1.1, 'aaa', 5, [1,2,3], map('k1',1,'k2',2), tuple(1,2));
INSERT INTO compression_codec VALUES(2, '', toDate('2018-12-13'), 4.4, 'ddd', 8);
INSERT INTO compression_codec VALUES(2, '', toDate('2018-12-13'), toDate32('2018-12-13'), 4.4, 'ddd', 8, [10,11,12], map('k7',7,'k8',8), tuple(7,8));
INSERT INTO compression_codec VALUES(2, 'world', toDate('2018-12-15'), 2.2, 'bbb', 6);
INSERT INTO compression_codec VALUES(2, 'world', toDate('2018-12-15'), toDate32('2018-12-15'), 2.2, 'bbb', 6, [4,5,6], map('k3',3,'k4',4), tuple(3,4));
INSERT INTO compression_codec VALUES(3, '!', toDate('2018-12-16'), 3.3, 'ccc', 7);
INSERT INTO compression_codec VALUES(3, '!', toDate('2018-12-16'), toDate32('2018-12-16'), 3.3, 'ccc', 7, [7,8,9], map('k5',5,'k6',6), tuple(5,6));
INSERT INTO compression_codec_log VALUES(1, 'hello', toDate('2018-12-14'), 1.1, 'aaa', 5);
INSERT INTO compression_codec_log VALUES(2, '', toDate('2018-12-13'), 4.4, 'ddd', 8);
INSERT INTO compression_codec_log VALUES(2, 'world', toDate('2018-12-15'), 2.2, 'bbb', 6);
INSERT INTO compression_codec_log VALUES(3, '!', toDate('2018-12-16'), 3.3, 'ccc', 7);
INSERT INTO compression_codec_multiple select modulo(number, 100), toString(number), toDate('2018-12-01'), 5.5 * number FROM system.numbers limit 10000;
INSERT INTO compression_codec_multiple VALUES (1, 'world', toDate('2018-10-05'), 1.1), (2, 'hello', toDate('2018-10-01'), 2.2), (3, 'buy', toDate('2018-10-11'), 3.3);
INSERT INTO compression_codec_multiple_log select modulo(number, 100), toString(number), toDate('2018-12-01'), 5.5 * number FROM system.numbers limit 10000;
INSERT INTO compression_codec_multiple_log VALUES (1, 'world', toDate('2018-10-05'), 1.1), (2, 'hello', toDate('2018-10-01'), 2.2), (3, 'buy', toDate('2018-10-11'), 3.3);
INSERT INTO compression_codec_multiple_more_types VALUES(1.5555555555555, 'hello world!', [77], ['John']);
INSERT INTO compression_codec_multiple_more_types VALUES(7.1, 'xxxxxxxxxxxx', [127], ['Henry']);
INSERT INTO compression_codec_multiple_more_types_replicated VALUES(1.5555555555555, 'hello world!', [77], ['John']);
INSERT INTO compression_codec_multiple_more_types_replicated VALUES(7.1, 'xxxxxxxxxxxx', [127], ['Henry']);
INSERT INTO compression_codec_multiple_replicated1 select modulo(number, 100), toString(number), toDate('2018-12-01'), 5.5 * number FROM system.numbers limit 10000;
INSERT INTO compression_codec_multiple_replicated2 VALUES (1, 'world', toDate('2018-10-05'), 1.1), (2, 'hello', toDate('2018-10-01'), 2.2), (3, 'buy', toDate('2018-10-11'), 3.3);
INSERT INTO compression_codec_multiple_tiny_log select modulo(number, 100), toString(number), toDate('2018-12-01'), 5.5 * number FROM system.numbers limit 10000;
INSERT INTO compression_codec_multiple_tiny_log VALUES (1, 'world', toDate('2018-10-05'), 1.1), (2, 'hello', toDate('2018-10-01'), 2.2), (3, 'buy', toDate('2018-10-11'), 3.3);
INSERT INTO compression_codec_multiple_with_key SELECT toDate('2018-10-12'), number, toString(number) FROM system.numbers LIMIT 1000;
INSERT INTO compression_codec_multiple_with_key VALUES(toDate('2018-10-12'), 100000, 'hello'), (toDate('2018-10-12'), 100002, 'world'), (toDate('2018-10-12'), 1111, '!');
INSERT INTO compression_codec_multiple_with_key VALUES(toDate('2018-10-13'), 100001, 'hello1'), (toDate('2018-10-14'), 100003, 'world1'), (toDate('2018-10-15'), 2222, '!ZSTD');
INSERT INTO compression_codec_multiple_with_key_replicated SELECT toDate('2018-10-12'), number, toString(number) FROM system.numbers LIMIT 1000;
INSERT INTO compression_codec_multiple_with_key_replicated VALUES(toDate('2018-10-12'), 100000, 'hello'), (toDate('2018-10-12'), 100002, 'world'), (toDate('2018-10-12'), 1111, '!');
INSERT INTO compression_codec_replicated1 VALUES(1, 'hello', toDate('2018-12-14'), 1.1, 'aaa', 5);
INSERT INTO compression_codec_replicated1 VALUES(2, '', toDate('2018-12-13'), 4.4, 'ddd', 8);
INSERT INTO compression_codec_replicated1 VALUES(2, 'world', toDate('2018-12-15'), 2.2, 'bbb', 6);
INSERT INTO compression_codec_replicated1 VALUES(3, '!', toDate('2018-12-16'), 3.3, 'ccc', 7);
INSERT INTO compression_codec_tiny_log VALUES(1, 'hello', toDate('2018-12-14'), 1.1, 'aaa', 5);
INSERT INTO compression_codec_tiny_log VALUES(2, '', toDate('2018-12-13'), 4.4, 'ddd', 8);
INSERT INTO compression_codec_tiny_log VALUES(2, 'world', toDate('2018-12-15'), 2.2, 'bbb', 6);
INSERT INTO compression_codec_tiny_log VALUES(3, '!', toDate('2018-12-16'), 3.3, 'ccc', 7);
INSERT INTO concat_nested_test VALUES (['foo', 'bar'], ['qaz', 'qux']);
INSERT INTO concat_saf_test SELECT max(number) FROM numbers(5);
INSERT INTO concat_saf_test VALUES (42);
INSERT INTO const_in_const VALUES(1, now(), 1, 'test1', 1);
INSERT INTO const_in_const VALUES(2, now(), 1, 'test2', 1);
INSERT INTO const_in_const VALUES(3, now(), 1, 'test3', 1);
INSERT INTO const_in_const VALUES(4, now(), 2, 'test4', 1);
INSERT INTO const_in_const VALUES(5, now(), 3, 'test5', 1);
INSERT INTO constCondOptimization (n) SELECT number FROM system.numbers LIMIT 10000;
insert into constrained values ('a');
INSERT INTO constrained VALUES ('https://www.censor.net/?q=upyachka'), ('ftp://censor.net/Hello'), ('https://censor.net/te\xFFst');
INSERT INTO constrained VALUES ('https://www.censor.net/?q=upyachka'), ('ftp://censor.net/Hello'), (toValidUTF8('https://censor.net/te\xFFst'));
INSERT INTO constrained VALUES ('https://www.censor.net/?q=upyachka'), ('Hello'), ('test');
INSERT INTO constrained VALUES (1);
INSERT INTO constraint_constant_nullable_expression_that_contains_null VALUES (3);
INSERT INTO constraint_constant_number_expression VALUES (1);
INSERT INTO constraint_constant_number_expression_non_uint8 VALUES (2);
INSERT INTO constraint_on_low_cardinality_nullable_type VALUES (0);
INSERT INTO constraint_on_low_cardinality_type VALUES (0);
INSERT INTO constraint_on_nullable_type VALUES (0);
INSERT INTO constraint_test_assumption (URL, a) VALUES ('2', 2);
INSERT INTO constraint_test_assumption (URL, a) VALUES ('3', 4);
INSERT INTO constraint_test_assumption (URL, a) VALUES ('bigmir.net', 3);
INSERT INTO constraint_test_constants (a, b, c) VALUES (0, 0, 0);
INSERT INTO constraint_test_constants_repl (a, b, c, d) VALUES (1, 2, 3, 4);
INSERT INTO constraint_test_strong_connectivity (a, b, c, d) VALUES ('1', '2', '3', '4');
INSERT INTO constraint_test_transitivity (a, b, c, d) VALUES (1, 2, 3, 4);
INSERT INTO constraint_test_transitivity2 (a, b, c, d) VALUES ('1', '2', '3', '4');
INSERT INTO constraint_test_transitivity3 (a, b, c) VALUES (4, 0, 2);
INSERT INTO cool_table SELECT number, range(number), arrayMap(x -> (arrayMap(y -> 'k' || toString(y), range(x % 4)), range(x % 4))::Map(LowCardinality(String), UInt64), range(number)) FROM numbers(10);
INSERT INTO cool_table SELECT number, range(number), arrayMap(x -> range(x % 4), range(number)) FROM numbers(10);
INSERT INTO cool_table SELECT number, range(number), range(number) FROM numbers(10);
INSERT INTO count SELECT * FROM numbers(1234567);
INSERT INTO count_lc_test(num, arr) VALUES (1,[]),(2,['a']),(3,['a','b','c']),(4,['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']);
INSERT INTO counter SELECT number, now() FROM numbers(500);
INSERT INTO crash_02919 VALUES (0);
INSERT INTO cte1 SELECT * FROM numbers(10000);
INSERT INTO cte2 SELECT * FROM numbers(5000);
INSERT INTO cube VALUES ('a', 1, 10), ('a', 1, 15), ('a', 2, 20);
INSERT INTO cube VALUES ('a', 2, 25), ('b', 1, 10), ('b', 1, 5);
INSERT INTO cube VALUES ('b', 2, 20), ('b', 2, 15);
INSERT INTO current_failed_query_metrics SELECT event, value FROM system.events WHERE event in ('FailedQuery', 'FailedInsertQuery', 'FailedSelectQuery');
INSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28),('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);
INSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28), ('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);
insert into d select number, number from numbers(10000);
insert into d values ('2021-10-24 10:00:00', 10), ('2021-10-25 10:00:00', 10), ('2021-10-26 10:00:00', 10), ('2021-10-27 10:00:00', 10);
INSERT INTO d VALUES ('hello');
insert into d values (1), (2);
INSERT INTO d VALUES (1, 1, 'a'), (2, 2, 'b'), (3, 3, 'c');
INSERT INTO d VALUES (2, 'a2'), (3, 'a3');
INSERT INTO d_src VALUES (0, 0, 'n');
insert into da_memory_efficient_shard select number, number from numbers(100000);
insert into dat values (1, '2022-01-24 02:30:00.008122000');
insert into data (key) values (1);
insert into data (key) values (2);
INSERT INTO data (str) SELECT 'aa' FROM numbers(100000);
INSERT INTO data (str) SELECT 'ba' FROM numbers(100000);
INSERT INTO data (str) SELECT 'ca' FROM numbers(100000);
INSERT INTO data SELECT * FROM empty;
INSERT INTO data SELECT 1;
INSERT INTO data SELECT number+1e6, if(number/8192 % 2 == 0, now(), now() - INTERVAL 200 DAY) FROM numbers(1e6);
insert into data values ('foo');
INSERT INTO data VALUES ('hello', 0, 0), ('world', 0, 0), ('hello', 1, -1), ('world', -1, 1);
INSERT INTO data VALUES (0, 0);
insert into data values (1)(2);
INSERT INTO data VALUES (1, now());
insert into data values (1,10,100);
insert into data values (1,20,10);
INSERT INTO data VALUES ([-1,-1,-1]), ([4,-1,2]), ([0,25,-1]), ([-1,-1,7]), ([-1,-1,-1]);
insert into data values(toDateTime('2020-05-14 02:08:00'),'some_field_value',7.);
INSERT INTO data2013(name,value) VALUES('Alice', 1000);
INSERT INTO data2013(name,value) VALUES('Bob', 2000);
INSERT INTO data2013(name,value) VALUES('Carol', 5000);
INSERT INTO data2014(name,value) VALUES('Alice', 2000);
INSERT INTO data2014(name,value) VALUES('Bob', 2000);
INSERT INTO data2014(name,value) VALUES('Dennis', 35000);
INSERT INTO data2015(data_name, data_value) VALUES('Bar', 1);
INSERT INTO data2015(data_name, data_value) VALUES('Foo', 42);
insert into data_01223 select * from numbers(3);
insert into data_01227 select * from numbers(10);
insert into data_01247 select * from system.numbers limit 2;
INSERT INTO data_01269 VALUES (1, 0);
insert into data_01279 select reinterpretAsString(number) from numbers(100000);
INSERT INTO data_01285 SELECT 1, number FROM numbers(2);
INSERT INTO data_01285 SELECT 1, number FROM numbers(4);
insert into data_01292 values (1);
insert into data_01295 select * from data_01295 final settings max_threads=2;
insert into data_01295 select * from data_01295;
insert into data_01295 values (1);
INSERT INTO data_01515 VALUES (1, 2, 3);
INSERT INTO data_01551 SELECT number FROM numbers(100000);
insert into data_01593 select * from numbers_mt(10) settings max_partitions_per_insert_block=1;
insert into data_01593 select * from numbers_mt(10);
insert into data_01641 select number, toString(number) from numbers(120000);
insert into data_01643 values (1);
insert into data_01643 values (2);
INSERT INTO data_01655 VALUES (1);
INSERT INTO data_01660 VALUES (0);
INSERT INTO data_01660 VALUES (1);
insert into data_01709 values (1);
insert into data_01709 values (2);
insert into data_01709 values (3);
insert into data_01755 values (1);
insert into data_01756_str values (0)(1);
insert into data_01809 values (1);
insert into data_01809 values (2);
insert into data_01809 values (3);
insert into data_01832 values (1);
insert into data_02021 values (1);
insert into data_02053 values (1, 42);
insert into data_02177 values (1);
INSERT INTO data_02200 SELECT number, number FROM numbers(10);
INSERT INTO data_02201 SELECT number, number FROM numbers(10);
INSERT INTO data_02201 SELECT number, number+1 FROM numbers(10);
insert into data_02228 select number, 1, number from numbers_mt(100e3) settings max_memory_usage='300Mi', max_partitions_per_insert_block=1024, max_insert_delayed_streams_for_parallel_write=0;
insert into data_02228 select number, 1, number from numbers_mt(100e3) settings max_memory_usage='300Mi', max_partitions_per_insert_block=1024, max_insert_delayed_streams_for_parallel_write=10000000;
insert into data_02233 values (1, 10, 100, 1000)(1, 20, 200, 2000);
insert into data_02233 values (2, 10, 100, 1000)(2, 20, 200, 2000);
insert into data_02293 select 1 a, groupArrayArrayState([toUInt64(number)]), groupArrayArray([toUInt64(number)]) from numbers(2) group by a;
insert into data_02294 select intDiv(number, 2) a, 0 b, groupArrayArrayState([toUInt64(number)]), groupArrayArray([toUInt64(number)]) from numbers(4) group by a, b;
insert into data_02295 select 0 b, intDiv(number, 2) a, groupArrayArrayState([toUInt64(number)]) from numbers(4) group by a, b;
INSERT INTO data_02342 VALUES (42);
INSERT INTO data_02342 VALUES (42, 'data_02342');
INSERT INTO data_02411 SELECT * FROM numbers(100);
insert into data_02491 values (1);
insert into data_02572 settings materialized_views_ignore_errors=1 values (2);
insert into data_02572 values (3);
INSERT INTO data_02716_1 SELECT * FROM system.numbers LIMIT 1;
INSERT INTO data_02771 VALUES (1, 2, 3);
INSERT INTO data_compact VALUES ([0]);
INSERT INTO data_horizontal VALUES (1);
INSERT INTO data_null VALUES (NULL, 2, NULL, 4);
insert into data_order_by_proj_comp values (5);
insert into data_order_by_proj_comp values (6);
insert into data_order_by_proj_incomp values (5);
insert into data_order_by_proj_incomp values (6);
insert into data_proj_order_by_comp values (5);
insert into data_proj_order_by_comp values (6);
insert into data_proj_order_by_incomp values (5);
insert into data_proj_order_by_incomp values (6);
insert into data_rep_02228 select number, 1, number from numbers_mt(100e3) settings max_memory_usage='300Mi', max_partitions_per_insert_block=1024, max_insert_delayed_streams_for_parallel_write=0;
insert into data_rep_02228 select number, 1, number from numbers_mt(100e3) settings max_memory_usage='300Mi', max_partitions_per_insert_block=1024, max_insert_delayed_streams_for_parallel_write=10000000;
INSERT INTO data_sparse_column VALUES (1, 0);
INSERT INTO data_table SELECT number, number, number FROM numbers(10);
insert into data_table values (1.1, 1.2, 'SomeStr', 'SomeStr'), (2.1, 2.2, 'SomeStr2', 'SomeStr2');
INSERT INTO data_vertical VALUES (1, '1');
INSERT INTO data_vertical VALUES (2, '2');
INSERT INTO data_wide VALUES ([0]);
INSERT INTO database_dictionary_test_key_expression.test_for_dictionary VALUES ('Test1'), ('Test2'), ('Test3');
INSERT INTO database_for_dict.dict_source VALUES (1, 0, 'hello'), (2, 1, 'world'), (3, 2, 'upyachka'), (11, 22, 'a'), (22, 11, 'b');
INSERT INTO database_for_dict.table_for_dict SELECT number, number % 17, toString(number * number), number / 2.0 from numbers(100);
INSERT INTO database_for_dict.table_for_dict SELECT number, number % 17, toString(number * number), number / 2.0 from numbers(100, 100);
INSERT INTO database_for_dict.table_for_dict SELECT number, number % 17, toString(number * number), number / 2.0 from numbers(200, 100);
INSERT INTO database_for_dict.table_for_dict VALUES ('First', 'WINDOWS', 1), ('Second', 'LINUX', 2);
INSERT INTO database_for_dict.table_for_dict VALUES (100500, 10000000, 'Hello world');
INSERT INTO database_for_dict_01018.table_for_dict VALUES (1, 100, 'Hello world');
INSERT INTO database_for_dict_01268.table_for_dict1 VALUES (100500, 10000000, 'Hello world');
INSERT INTO database_for_dict_01268.table_for_dict2 VALUES (1, 0, 'Russia');
INSERT INTO database_for_dict_01268.table_for_dict2 VALUES (2, 1, 'Moscow');
INSERT INTO database_for_dict_01268.table_for_dict2 VALUES (3, 2, 'Center');
INSERT INTO database_for_dict_01268.table_for_dict2 VALUES (4, 0, 'Great Britain');
INSERT INTO database_for_dict_01268.table_for_dict2 VALUES (5, 4, 'London');
INSERT INTO database_for_dict_01268.table_for_dict3 VALUES (1, 0.5, 'Russia');
INSERT INTO database_for_dict_01268.table_for_dict3 VALUES (2, 1.6, 'Moscow');
INSERT INTO database_for_dict_01268.table_for_dict3 VALUES (3, 2.3, 'Center');
INSERT INTO database_for_dict_01268.table_for_dict3 VALUES (4, 0.2, 'Great Britain');
INSERT INTO database_for_dict_01268.table_for_dict3 VALUES (5, 4.9, 'London');
INSERT INTO database_for_range_dict.date_table VALUES(1, toDate('2019-05-05'), toDate('2019-05-20'), 0.33);
INSERT INTO database_for_range_dict.date_table VALUES(1, toDate('2019-05-21'), toDate('2019-05-30'), 0.42);
INSERT INTO database_for_range_dict.date_table VALUES(2, toDate('2019-05-21'), toDate('2019-05-30'), 0.46);
INSERT INTO database_for_range_dict.date_table VALUES(2, toDate('2019-05-21'), toDate('2019-05-30'), NULL);
INSERT INTO date FORMAT JSONEachRow {"d": "2017-01-02"}, {"d": "2017-1-02"}, {"d": "2017-01-2"}, {"d": "2017-1-2"}, {"d": "2017/01/02"}, {"d": "2017/1/02"}, {"d": "2017/01/2"}, {"d": "2017/1/2"}, {"d": "2017-11-12"};
INSERT INTO date VALUES ('2017-01-02'), ('2017-1-02'), ('2017-01-2'), ('2017-1-2'), ('2017/01/02'), ('2017/1/02'), ('2017/01/2'), ('2017/1/2'), ('2017-11-12');
INSERT INTO date_datetime_key_condition VALUES ('2020-01-01 00:00:00'), ('2020-01-01 10:00:00'), ('2020-01-02 00:00:00');
INSERT INTO date_interval VALUES ('a', '2020-01-01', '2020-01-04'), ('a', '2020-01-03', '2020-01-08 02:50:11');
INSERT INTO date_table VALUES(1, '1', toDate('2019-01-05'), toDate('2020-01-10'));
INSERT INTO date_table VALUES(1, '1', toDate('2019-05-05'), toDate('2019-05-20'), 0.33);
INSERT INTO date_table VALUES(1, '1', toDate('2019-05-21'), toDate('2019-05-30'), 0.42);
INSERT INTO date_table VALUES(2, '2', toDate('2019-05-21'), toDate('2019-05-30'), 0.46);
INSERT INTO date_table VALUES(2, '2', toDate('2019-05-21'), toDate('2019-05-30'), NULL);
INSERT INTO Dates VALUES ('2023-08-25 15:30:00');
INSERT INTO datetime SELECT * FROM generateRandom() LIMIT 10;
INSERT INTO datetime(d) VALUES(toDateTime('2016-06-15 23:00:00', 'UTC'));
INSERT INTO datetime64_cmp VALUES ('2019-09-16 19:20:33.123000', '2019-09-16 19:20:33.123'), ('2019-09-16 19:20:33.123456', '2015-05-18 07:40:29.123'), ('2015-05-18 07:40:29.123456', '2019-09-16 19:20:33.123');
INSERT INTO datetime64_index_tbl(ts) VALUES(toDateTime64('2023-05-27 00:00:00', 3, 'UTC'));
INSERT INTO datetime_date_table VALUES ('2020-03-04', '2020-03-04 10:23:45', '2020-03-04 10:23:45.123', '2020-03-04', '2020-03-04 10:23:45', '2020-03-04 10:23:45.123', '2020-03-04', '2020-03-04 10:23:45', '2020-03-04 10:23:45.123');
INSERT INTO datetime_date_table VALUES ('2020-03-05', '2020-03-05 12:23:45', '2020-03-05 12:23:45.123', '2020-03-05', '2020-03-05 12:23:45', '2020-03-05 12:23:45.123', '2020-03-05', '2020-03-05 12:23:45', '2020-03-05 12:23:45.123');
INSERT INTO datetime_date_table VALUES ('2020-04-05', '2020-04-05 00:10:45', '2020-04-05 00:10:45.123', '2020-04-05', '2020-04-05 00:10:45', '2020-04-05 00:10:45.123', '2020-04-05', '2020-04-05 00:10:45', '2020-04-05 00:10:45.123');
INSERT INTO datetime_table VALUES ('2016-01-01 00:00:00','name1',2);
INSERT INTO datetime_table VALUES ('2016-01-01 02:00:00','name1',3);
INSERT INTO datetime_table VALUES ('2016-01-02 00:00:00','name2',2);
INSERT INTO datetime_table VALUES ('2016-01-02 01:00:00','name2',2);
INSERT INTO datetime_table VALUES ('2016-01-02 23:00:00','name2',5);
INSERT INTO datetime_table VALUES ('2016-01-03 00:00:00','name1',4);
INSERT INTO datetime_table VALUES ('2016-01-03 04:00:00','name1',4);
INSERT INTO datetime_table VALUES (1451613600,'name1',3);
INSERT INTO datetime_table VALUES (1451696400,'name2',2);
INSERT INTO datetime_table VALUES (1451775600,'name2',5);
INSERT INTO datetime_table VALUES (1451793600,'name1',4);
INSERT INTO db1_02703.02703_rqtable VALUES (1), (2), (3), (4);
INSERT INTO db_01501.table_cache_dict VALUES (1, 2, 3, 4, 5, -1, -2, -3, -4, '550e8400-e29b-41d4-a716-446655440003', '1973-06-28', '1985-02-28 23:43:25', 'clickhouse', 22.543, 3332154213.4, toDecimal32('1e-5', 5), toDecimal64('1e-15', 15), toDecimal128('1e-35', 35), 0);
INSERT INTO db_01501.table_cache_dict VALUES (2, 22, 33, 44, 55, -11, -22, -33, -44, 'cb307805-44f0-49e7-9ae9-9954c543be46', '1978-06-28', '1986-02-28 23:42:25', 'hello', 21.543, 3111154213.9, toDecimal32('2e-5', 5), toDecimal64('2e-15', 15), toDecimal128('2e-35', 35), 1);
INSERT INTO db_01501.table_cache_dict VALUES (3, 222, 333, 444, 555, -111, -222, -333, -444, 'de7f7ec3-f851-4f8c-afe5-c977cb8cea8d', '1982-06-28', '1999-02-28 23:42:25', 'dbms', 13.334, 3222187213.1, toDecimal32('3e-5', 5), toDecimal64('3e-15', 15), toDecimal128('3e-35', 35), 1);
INSERT INTO db_01501.table_cache_dict VALUES (4, 2222, 3333, 4444, 5555, -1111, -2222, -3333, -4444, '4bd3829f-0669-43b7-b884-a8e034a68224', '1987-06-28', '2000-02-28 23:42:25', 'MergeTree', 52.001, 3237554213.5, toDecimal32('4e-5', 5), toDecimal64('4e-15', 15), toDecimal128('4e-35', 35), 1);
INSERT INTO db_01501.table_cache_dict VALUES (5, 22222, 33333, 44444, 55555, -11111, -22222, -33333, -44444, 'ff99a408-78bb-4939-93cc-65e657e347c6', '1991-06-28', '2007-02-28 23:42:25', 'dictionary', 33.333, 3222193713.7, toDecimal32('5e-5', 5), toDecimal64('5e-15', 15), toDecimal128('5e-35', 35), 1);
INSERT INTO db_01526.table_for_dict1 VALUES (1, 2, 'aaa'), (1, 3, 'bbb'), (2, 3, 'ccc');
insert into db_01721.table_decimal_dict select number,    number / 3,    number / 3,    number / 3,    number / 3 from numbers(5000);
insert into db_01870.z_buffer_01870 select * from system.numbers limit 5;
INSERT INTO db_for_dict.table_for_dict VALUES (1, 'Hello'), (2, 'World');
insert into db_hang.test select * from numbers(1000);
INSERT INTO ddl_dictonary_test_source VALUES (0, 0);
INSERT INTO ddl_dictonary_test_source VALUES (1, 1);
INSERT INTO decimal (a) VALUES ('-9x');
INSERT INTO decimal (a) VALUES (-0.1);
INSERT INTO decimal (a) VALUES (0), (1), (2), (3);
INSERT INTO decimal (a) VALUES (1000000000);
INSERT INTO decimal (a, b, c) FORMAT CSV 0.2 ,-0.2 ,.2 ;
INSERT INTO decimal (a, b, c) FORMAT CSV 2.0,-2.0,2 ;
INSERT INTO decimal (a, b, c) FORMAT CSV 2.2 , -2.2 , 2.2 ;
INSERT INTO decimal (a, b, c) FORMAT CSV 4.4E+5,-4E+8,.4E+20 ;
INSERT INTO decimal (a, b, c) FORMAT CSV 5.5e-2, -5e-9 ,.5e-17 ;
INSERT INTO decimal (a, b, c) FORMAT JSONEachRow {"a":1.1, "b":-1.1, "c":1.1} {"a":1.0, "b":-1.0, "c":1} {"a":0.1, "b":-0.1, "c":.1};
INSERT INTO decimal (a, b, c) FORMAT TabSeparated 0.3  -0.3  .3 ;
INSERT INTO decimal (a, b, c) FORMAT TabSeparated 3.0  -3.0  3 ;
INSERT INTO decimal (a, b, c) FORMAT TabSeparated 3.3  -3.3  3.3 ;
INSERT INTO decimal (a, b, c) SELECT toDecimal32(number - 50, 4), toDecimal64(number - 50, 8) / 3, toDecimal128(number - 50, 8) / 5 FROM system.numbers LIMIT 101;
INSERT INTO decimal (a, b, c) VALUES (42.0, -42.0, 42) (0.42, -0.42, .42) (42.42, -42.42, 42.42);
INSERT INTO decimal (a, b, c) VALUES (5.5, 5.5, 5.5);
INSERT INTO decimal (a, b, c, d) VALUES (2.2, 2.2, 2.2, 2.2);
INSERT INTO decimal (a, b, c, d, e, f) VALUES ('-0.9e9', '-0.9e18', '-0.9e38', '-9e-9', '-9e-18', '-9e-38');
INSERT INTO decimal (a, b, c, d, e, f) VALUES ('1e9', '1e18', '1e38', '1e-10', '1e-19', '1e-39');
INSERT INTO decimal (a, b, c, d, e, f) VALUES (1.1, 1.1, 1.1, 1.1, 1.1, 1.1);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j) VALUES (-0, -0, -0, -0, -0, -0, -0, -0, -0, -0);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j) VALUES (-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j) VALUES (-42, -42, -42, -0.42, -0.42, -0.42, -42.42, -42.42, -42.42, -42.42);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j) VALUES (0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j) VALUES (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j) VALUES (42, 42, 42, 0.42, 0.42, 0.42, 42.42, 42.42, 42.42, 42.42);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) VALUES (-42, -42, -42, -0.42, -0.42, -0.42, -42.42, -42.42, -42.42, -42.42, -42.42, -42.42, -42.42, -42.42, -42.42);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) VALUES (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) VALUES (42, 42, 42, 0.42, 0.42, 0.42, 42.42, 42.42, 42.42, 42.42, 42.42, 42.42, 42.42, 42.42, 42.42);
INSERT INTO decimal (a, b, c, d, g, j, h) VALUES (-1, -1, -1, -0.000000001, -0.00001, -1, -0.000000001);
INSERT INTO decimal (a, b, c, d, g, j, h) VALUES (1, 1, 1, 0.000000001, 0.00001, 1, 0.000000001);
INSERT INTO decimal (a, b, c, e) VALUES (3.3, 3.3, 3.3, 3.3);
INSERT INTO decimal (a, b, c, f) VALUES (4.4, 4.4, 4.4, 4.4);
INSERT INTO decimal (a, b, c, nest.a, nest.b, nest.c, tup)   VALUES ([0.1, 0.2, 0.3], [0.4, 0.5, 0.6], [0.7, 0.8, 0.9], [1.1, 1.2], [2.1, 2.2], [3.1, 3.2], (9.1, 9.2, 9.3));
INSERT INTO decimal (a, b, d, g) VALUES (-999999999, -999999999999999999, -0.999999999, -9999.99999);
INSERT INTO decimal (a, b, d, g) VALUES (999999999, 999999999999999999, 0.999999999, 9999.99999);
INSERT INTO decimal (a, b, g) VALUES ('42.00000', 42.0000000000000000000000000000000, '0.999990');
INSERT INTO decimal (b) VALUES (-0.1);
INSERT INTO decimal (b) VALUES (0.1);
INSERT INTO decimal (c) VALUES (-0.1);
INSERT INTO decimal (c) VALUES (-99999999999999999999999999999999999999);
INSERT INTO decimal (c) VALUES (0.1);
INSERT INTO decimal (c) VALUES (99999999999999999999999999999999999999);
INSERT INTO decimal (d) VALUES (-0.0000000001);
INSERT INTO decimal (d) VALUES (0.0000000001);
INSERT INTO decimal (d1, d2, d3)   SELECT toDecimal32(number % 10, 8), toDecimal64(number, 8), toDecimal128(number, 8) FROM system.numbers LIMIT 50;
INSERT INTO decimal (d1, d2, d3) VALUES (4.2, 4.2, 4.2);
INSERT INTO decimal (e) VALUES (-0.0000000000000000001);
INSERT INTO decimal (e) VALUES (0.0000000000000000001);
INSERT INTO decimal (e, f) VALUES (-0.000000000000000001, -0.00000000000000000000000000000000000001);
INSERT INTO decimal (e, f) VALUES (0.000000000000000001, 0.00000000000000000000000000000000000001);
INSERT INTO decimal (e, h) VALUES (-0.999999999999999999, -999999999.999999999);
INSERT INTO decimal (e, h) VALUES (0.999999999999999999, 999999999.999999999);
INSERT INTO decimal (f) VALUES (-0.000000000000000000000000000000000000001);
INSERT INTO decimal (f) VALUES (-0.99999999999999999999999999999999999999);
INSERT INTO decimal (f) VALUES (0.000000000000000000000000000000000000001);
INSERT INTO decimal (f) VALUES (0.99999999999999999999999999999999999999);
INSERT INTO decimal (g) VALUES (-0.000001);
INSERT INTO decimal (g) VALUES (0.000001);
INSERT INTO decimal (h) VALUES (-0.0000000001);
INSERT INTO decimal (h) VALUES (0.0000000001);
INSERT INTO decimal (i) VALUES (-0.0000000000000000001);
INSERT INTO decimal (i) VALUES (-0.000000000000000001);
INSERT INTO decimal (i) VALUES (-99999999999999999999.999999999999999999);
INSERT INTO decimal (i) VALUES (0.0000000000000000001);
INSERT INTO decimal (i) VALUES (0.000000000000000001);
INSERT INTO decimal (i) VALUES (99999999999999999999.999999999999999999);
INSERT INTO decimal (j) VALUES (-0.1);
INSERT INTO decimal (j) VALUES (0.1);
INSERT INTO decimal VALUES (-0.42);
INSERT INTO decimal VALUES (0);
INSERT INTO decimal VALUES (0.42);
INSERT INTO decimal VALUES (1,1,1), (1,1,2), (1,1,3), (1,1,4);
INSERT INTO decimal_in_float_test VALUES ('33', '44.44');
INSERT INTO decimal_insert_cast_issue VALUES ({param:Nullable(Decimal(41, 0))});
INSERT INTO decimal_sum VALUES ('2001-01-01', -2, 1, 2);
INSERT INTO decimal_sum VALUES ('2001-01-01', 0, -1, 0);
INSERT INTO decimal_sum VALUES ('2001-01-01', 1, -1, -1);
INSERT INTO decimal_sum VALUES ('2001-01-01', 1, 1, -1);
insert into decimals values (1, 1, 1, 1);
INSERT INTO decrypt_null VALUES ('2022-08-02 00:00:00', 1, encrypt('aes-256-gcm', 'value1', 'keykeykeykeykeykeykeykeykeykey01', 'iv1'), 'iv1'), ('2022-09-02 00:00:00', 2, encrypt('aes-256-gcm', 'value2', 'keykeykeykeykeykeykeykeykeykey02', 'iv2'), 'iv2'), ('2022-09-02 00:00:01', 3, encrypt('aes-256-gcm', 'value3', 'keykeykeykeykeykeykeykeykeykey03', 'iv3'), 'iv3');
INSERT INTO deduplication (x) VALUES (1);
INSERT INTO deduplication_by_partition VALUES ('2000-01-01', 1);
INSERT INTO deduplication_by_partition VALUES ('2000-01-01', 2), ('2000-01-01', 3);
INSERT INTO deduplication_by_partition VALUES ('2000-01-01', 4);
INSERT INTO deduplication_by_partition VALUES ('2000-02-01', 3), ('2000-02-01', 4), ('2000-02-01', 5);
INSERT INTO deduplication_by_partition VALUES ('2000-02-01', 6), ('2000-02-01', 7);
INSERT INTO default (t) VALUES ('1234567890');
INSERT INTO default_codec_float SELECT * from delta_codec_float;
INSERT INTO default_codec_string SELECT * from delta_codec_string;
INSERT INTO default_codec_synthetic SELECT number FROM system.numbers LIMIT 5000000;
INSERT INTO default_constraints (x) SELECT number FROM system.numbers LIMIT 5;
INSERT INTO default_join1 VALUES(1, 1), (2, 2), (3, 3);
INSERT INTO default_join2 VALUES(3, 3), (4, 4);
INSERT INTO default_table (id) VALUES(3), (4);
INSERT INTO default_table values (2, 33, DEFAULT);
INSERT INTO default_table VALUES(1, 'index'), (2, 'fox');
INSERT INTO default_table(x) values (DEFAULT);
INSERT INTO default_table(x, z) values (1, DEFAULT);
insert into defaulted (col1) values (10);
insert into defaulted (payload) values ('hello clickhouse');
insert into defaulted (payload) values ('some string');
INSERT INTO defaulted SELECT toFixedString('::0', 16) FROM numbers(32768);
INSERT INTO defaults (a) VALUES (1);
INSERT INTO defaults (x, y) SELECT x, y FROM defaults LIMIT 1;
INSERT INTO defaults FORMAT JSONEachRow {"x":1, "y":1};
INSERT INTO defaults FORMAT JSONEachRow {"x":2, "y":2, "c":2};
INSERT INTO defaults FORMAT JSONEachRow {"x":3, "y":3, "a":3, "b":3, "c":3};
INSERT INTO defaults FORMAT JSONEachRow {"x":4} {"y":5, "c":5} {"a":6, "b":6, "c":6};
INSERT INTO defaults FORMAT JSONEachRow {"x":7, "y":7, "n.a":[1,2], "n.b":["a","b"]};
INSERT INTO defaults FORMAT JSONEachRow {"x":8, "y":8, "n.a":[3,4], "n.b":["c","d"]};
INSERT INTO defaults FORMAT JSONEachRow {"x":9, "y":9};
INSERT INTO defaults SELECT * FROM numbers(10);
INSERT INTO defaults SELECT s FROM generateRandom('s FixedString(20)', 1, 1, 1) LIMIT 20;
INSERT INTO defaults values ('<common tag>hello, world<tag>'), ('<script desc=content> some content </script>'), ('<![CDATA[hello, world]]>'), ('white space  collapse');
INSERT INTO defaults values ('abc', 3, 12, 4, 56) ('sdfgg', -2, 10, 21, 200) ('xywq', -1, 4, 9, 5) ('plkf', 0, 5, 7,77);
insert into defaults values ('ba'), ('aa'), ('ba'), ('b'), ('ba'), ('aa');
INSERT INTO defaults VALUES ((12, 43), (12312, 43453) ,(-10, 32)) ((1, 4), (546, 12345), (546, 12345)) ((90, 9875), (43456, 234203), (1231, -123)) ((87, 987), (545645, 768354634), (9123, 909));
insert into defaults values (-3.273, -1.452, 4.267, 20.0, 40.0), (0.121, -0.615, 4.290, 20.0, 40.0);
insert into defaults values (0), (0), (-1), (0), (0), (0), (-1), (2), (3), (5), (3), (-1), (-1), (4), (5), (2);
insert into defaults values (0), (0), (1), (0), (0), (0), (1), (2), (3), (5), (3), (1), (1), (4), (5), (2);
INSERT INTO defaults VALUES (1, 2, 3, 4) (12, 4345, 435, 1233) (45, 675, 32343, 54566) (90, 784, 9034, 778752);
INSERT INTO defaults values (3, 12, 4, 56, 3, 12, -4, 56) (2, 10, 21, 20, 2, 10, -21, 20) (1, 4, 9, 5, 1, 4, -9, 5) (0, 5, 7, 7, 0, 5, -7, 7);
INSERT INTO defaults VALUES(1, '1') (2, '2') (3, '3') (4, '4') (5, '5');
INSERT INTO defaults_all_columns FORMAT JSONEachRow {"n": 1, "s": "hello"} {};
INSERT INTO defaults_all_columns FORMAT JSONEachRow {"n": 2}, {"s": "world"};
INSERT INTO defaults_on_defaults values (1);
INSERT INTO delta_codec_float SELECT number FROM numbers(1547510400, 500000) WHERE number % 3 == 0 OR number % 5 == 0 OR number % 7 == 0 OR number % 11 == 0;
INSERT INTO delta_codec_string SELECT concat(toString(number), toString(number % 100)) FROM numbers(1547510400, 500000);
INSERT INTO delta_codec_synthetic SELECT number FROM system.numbers LIMIT 5000000;
INSERT INTO demo_loan_01568_dist VALUES (1, '2021-04-13', 'qwerty', 3.14159), (2, '2021-04-14', 'asdfgh', 2.71828);
INSERT INTO derived_metrics_local values('2020-01-01 00:00:00', 1);
INSERT INTO derived_metrics_local values('2020-01-01 00:01:00', 111) ('2020-01-01 00:19:22', 22) ('2100-01-01 00:19:22', 1);
INSERT INTO derived_metrics_local values('2020-01-01 00:01:00', 111);
INSERT INTO derived_metrics_local values('2020-01-01 00:01:00', 3);
INSERT INTO derived_metrics_local values('2020-01-01 00:02:00', 2);
INSERT INTO derived_metrics_local values('2020-01-01 00:19:22', 22);
INSERT INTO derived_metrics_local values('2020-01-01 00:59:02', 1);
INSERT INTO detach_all_no_partition VALUES (1, 1), (2, 1), (3, 1);
INSERT INTO dict SELECT number, toString(number) FROM numbers(121);
INSERT INTO dict SELECT number, toString(number) FROM numbers(1e3);
INSERT INTO dict_db_02179.dict_data VALUES(1,11);
INSERT INTO dict_nested_map_test_table VALUES (3, 't', [{'l': 0.0, 'h': 10000.0, 't': 0.1}, {'l': 10001.0, 'h': 100000000000000.0, 't': 0.2}], 0);
insert into dict_table values ('SomeStr', toDate('2021-01-01'), 1.1), ('SomeStr2', toDate('2021-01-02'), 2.2);
INSERT INTO dictdb_01376.table_for_dict VALUES (1, 1.1);
INSERT INTO dictionary_array_source_table VALUES (0, [0, 1, 2]);
INSERT INTO dictionary_decimal_polygons_source_table VALUES ([[[(0, 0), (0, 1), (1, 1), (1, 0)]]], 5.0);
INSERT INTO dictionary_decimal_source_table VALUES (1, 5.0);
INSERT INTO dictionary_non_nullable_source_table VALUES (0, 'Test');
INSERT INTO dictionary_nullable_default_source_table VALUES (2, 2), (3, NULL);
INSERT INTO dictionary_nullable_source_table VALUES (0, 'Test'), (1, NULL);
INSERT INTO dictionary_nullable_source_table VALUES (0, 0), (1, NULL);
INSERT INTO dictionary_primary_key_source_table VALUES (20, 1);
INSERT INTO dictionary_source_en VALUES (1, 'One'), (2,'Two'), (3, 'Three');
INSERT INTO dictionary_source_ru VALUES (1, 'Один'), (2,'Два'), (3, 'Три');
INSERT INTO dictionary_source_table VALUES (0, 'Value');
INSERT INTO dictionary_source_table values (0, 0, 5, 'Value');
INSERT INTO dictionary_source_table values (1, 0, 18446744073709551615, 'Value');
INSERT INTO dim_model VALUES (1);
INSERT INTO discounts VALUES (1, '2015-01-01', Null, 0.1);
INSERT INTO discounts VALUES (1, '2015-01-15', Null, 0.2);
INSERT INTO discounts VALUES (2, '2015-01-01', '2015-01-15', 0.3);
INSERT INTO discounts VALUES (2, '2015-01-04', '2015-01-10', 0.4);
INSERT INTO discounts VALUES (3, '1970-01-01', '2015-01-10', 0.6);
INSERT INTO discounts VALUES (3, '1970-01-01', '2015-01-15', 0.5);
insert into dist values (1);
INSERT INTO dist(s) VALUES ('after renaming database');
INSERT INTO dist(s) VALUES ('after renaming tables');
INSERT INTO dist(s) VALUES ('before moving tables');
INSERT INTO dist_00612 VALUES(1, 1), (2, 2), (3, 3), (4, 4), (5, 5);
INSERT INTO dist_00717 (a) SELECT number FROM system.numbers LIMIT 1000000;
INSERT INTO dist_00967 SELECT toUInt64(number) FROM system.numbers LIMIT 1;
insert into dist_01293 select * from numbers(10);
insert into dist_01555 values (1)(2);
insert into dist_01643 select * from numbers(10) settings prefer_localhost_replica=0;
INSERT INTO dist_01683 VALUES (1),(2);
INSERT INTO dist_01781 VALUES ('1'),('2');
insert into dist_01850 values (1);
INSERT INTO dist_02482 SELECT number, number FROM numbers(1000);
INSERT INTO dist_02482 VALUES (1, '1'), (2, '2');
INSERT INTO dist_02482 VALUES (1, '1'),(2, '2');
INSERT INTO dist_1 VALUES (20);
insert into dist_t select number from numbers_mt(10);
INSERT INTO dist_tbl (key) SETTINGS distributed_foreground_insert=1 VALUES (99);
INSERT INTO dist_test_01040 SELECT toUInt64(number) FROM numbers(2);
INSERT INTO distinct (Num, Name) VALUES (1, 'John');
INSERT INTO distinct (Num, Name) VALUES (3, 'Mary');
INSERT INTO distinct (Num, Name) VALUES (4, 'Mary');
INSERT INTO distinct (Num, Name) VALUES (5, 'Bill');
INSERT INTO distinct (Num, Name) VALUES (7, 'Bill');
INSERT INTO distinct (Num, Name) VALUES (7, 'John');
INSERT INTO distinct (Num, Name) VALUES (7, 'Mary');
INSERT INTO distinct_cardinality_low SELECT number % 1e1, number % 1e2, number % 1e3 FROM numbers_mt(1e4);
insert into distinct_in_order (a) select * from zeros(10);
insert into distinct_in_order select * from numbers(10);
insert into distinct_in_order select distinct * from distinct_cardinality_low order by high settings optimize_distinct_in_order=1;
insert into distinct_in_order select distinct * from distinct_cardinality_low settings optimize_distinct_in_order=1;
insert into distinct_in_order select distinct * from distinct_cardinality_low where low > 0 settings optimize_distinct_in_order=1;
insert into distinct_in_order select number % number, number % 5, number % 10 from numbers(1,1000000);
INSERT INTO distinct_two_level SELECT 1546300800000, 'test.com', concat('foo', toString(number % 10000)) from numbers(10000);
INSERT INTO distinct_two_level SELECT 1546300800000, concat('test.com', toString(number / 10000)) , concat('foo', toString(number % 10000)) from numbers(10000);
insert into distr select number from numbers(100);
INSERT INTO distributed SELECT number FROM numbers(256) WHERE number % 2 = 0;
INSERT INTO distributed SELECT number FROM numbers(256) WHERE number % 2 = 1;
INSERT INTO distributed SELECT number FROM numbers(256) WHERE number < 128;
INSERT INTO distributed SELECT number FROM numbers(256);
INSERT INTO distributed_00952 (date, value) VALUES ('2018-08-01', '2019-08-01');
INSERT INTO distributed_00952 VALUES ('2018-08-01');
INSERT INTO distributed_01099_b SELECT * from distributed_01099_a;
INSERT INTO dm_metric_small2 VALUES (1,1,NULL) (1,1,1) (1,2,0) (1,2,1) (1,2,NULL) (1,2,NULL);
INSERT INTO dst VALUES (0, '1', 2);
INSERT INTO dst VALUES (1, '1', 2), (1, '2', 2);
INSERT INTO dst VALUES (1, '1', 2);
INSERT INTO dst VALUES (2, '1', 2);
INSERT INTO dst VALUES (3, '1', 2), (3, '2', 2);
INSERT INTO dt VALUES (0);
INSERT INTO dt VALUES (300000);
INSERT INTO dt64test (`dt64_column`) VALUES ('2020-01-13 13:37:00');
INSERT INTO dt_interval VALUES ('a', '2020-01-01 02:11:22', '2020-01-01 03:12:31'), ('a', '2020-01-01 01:12:30', '2020-01-01 02:50:11');
insert into dt_overflow values('2106-11-11', 1);
insert into dt_overflow values('2106-11-12', 1);
INSERT INTO dtest VALUES ('33', '44.4', '35');
INSERT INTO dummy VALUES (1);
INSERT INTO e SELECT 1, toDateTime('2020-02-01 12:00:01') + INTERVAL number MONTH FROM numbers(10);
INSERT INTO e SELECT toDateTime('2022-12-12 11:00:00') + number, 86 FROM numbers(10);
INSERT INTO eligible_test SELECT * FROM eligible_test SETTINGS use_query_cache = true;
INSERT INTO elog_cut (uts, pr, ya_uid, adf_uid, owner_id) VALUES ('2015-01-01 01:02:03', 111, 123, 456, 789);
INSERT INTO employees VALUES (23, 'Henry', 'it', 104), (24, 'Irene', 'it', 104), (25, 'Frank', 'it', 120), (31, 'Cindy', 'sales', 96), (33, 'Alice', 'sales', 100), (32, 'Dave', 'sales', 96), (22, 'Grace', 'it', 90), (21, 'Emma', 'it', 84);
insert into empsalary values ('sales',3,4800,'2007-08-01'), ('sales',1,5000,'2006-10-01'), ('sales',4,4800,'2007-08-08');
INSERT INTO empty VALUES (1, 1, '2020-01-01'), (1, 1, '2020-01-01'), (1, -2, '2020-01-01');
INSERT INTO empty2 VALUES (1, 1, '2020-01-01'), (1, 1, '2020-01-01'), (1, -2, '2020-01-01');
INSERT INTO empty_pk SELECT number FROM numbers(100000);
INSERT INTO empty_summing VALUES ('2015-01-01', 1, -10);
INSERT INTO empty_summing VALUES ('2015-01-01', 1, -2),('2015-01-01', 1, -2),('2015-01-01', 3, 14);
INSERT INTO empty_summing VALUES ('2015-01-01', 1, 0),('2015-01-01', 3, 0);
INSERT INTO empty_summing VALUES ('2015-01-01', 1, 10);
INSERT INTO empty_summing VALUES ('2015-01-01', 1, 4),('2015-01-01', 2, -9),('2015-01-01', 3, -14);
INSERT INTO encryption_test (input) VALUES (''), ('text'), ('What Is ClickHouse? ClickHouse is a column-oriented database management system (DBMS) for online analytical processing of queries (OLAP).');
INSERT INTO encryption_test VALUES (1, 'Some plaintext');
INSERT INTO endsWith_test values ('11', '22', '33'), ('a', 'a', 'bb'), ('abc', 'bc', '23');
INSERT INTO enum (x) VALUES ('\\');
INSERT INTO enum (x) VALUES ('\t\\t');
INSERT INTO enum (y) VALUES (0);
INSERT INTO enum VALUES ('hello');
insert into enum_alter_issue values ('one'), ('two');
insert into enum_alter_issue values ('one', 1), ('two', 1);
insert into enum_alter_issue values ('one', 1), ('two', 2);
insert into enum_alter_issue values ('one', 3), ('two', 4);
INSERT INTO enum_as_num FORMAT TSV 1  1 INSERT INTO enum_as_num FORMAT TSV 2 2 INSERT INTO enum_as_num FORMAT TSV 3 3 INSERT INTO enum_as_num FORMAT TSV 4 a INSERT INTO enum_as_num FORMAT TSV 5 b INSERT INTO enum_as_num FORMAT CSV 6,1 INSERT INTO enum_as_num FORMAT CSV 7,2 INSERT INTO enum_as_num FORMAT CSV 8,3 INSERT INTO enum_as_num FORMAT CSV 9,a INSERT INTO enum_as_num FORMAT CSV 10,b SELECT * FROM enum_as_num ORDER BY Id;
INSERT INTO enum_nested_alter (x, n.e) VALUES (1, ['Hello']);
INSERT INTO enum_nested_alter (x, n.e) VALUES (1, ['Hello.world']);
INSERT INTO enum_nested_alter (x, n.e) VALUES (2, ['World']);
INSERT INTO enum_nested_alter (x, tasks.errcategory, tasks.status) VALUES (1, ['system', 'rtb.client'], ['hello', 'world']);
INSERT INTO enum_nested_alter (x, tasks.errcategory, tasks.status) VALUES (2, ['http.status', 'http.code'], ['hello', 'goodbye']);
INSERT INTO enum_pk (x, d) VALUES ('0', '0')('1', '1')('0', '0')('1', '1')('1', '1')('0', '0')('0', '0')('2', '2')('0', '0')('1', '1')('1', '1')('1', '1')('1', '1')('0', '0');
INSERT INTO enum_test SELECT '2020-10-09 00:00:00', 'h1', 'PS' from numbers(1);
INSERT INTO enum_test SELECT '2020-10-09 00:00:00', 'h1', 'WS' FROM numbers(1);
INSERT INTO enum_totals VALUES ('hello'), ('world'), ('world');
insert into enums (e, sign, letter) values ('!', 'plus', 'b');
insert into enums (letter, e) values ('c', 'world');
insert into enums values ('d'), ('b'), ('a'), ('c'), ('a'), ('d');
insert into errors_local select toString(number) from numbers(10000);
insert into ES select toString(number) from numbers(10000000);
INSERT INTO ev SELECT number, number FROM numbers(10000000);
INSERT INTO event (id, user_id, content, created_time) VALUES(1, 1, 'hello', '2022-01-05 12:00:00');
INSERT INTO event_types SELECT   toString(number % 10),   number % 2 FROM numbers(20);
insert into EventLog values ('Darth Vader has entered the room.', 546), ('Rambo is suspciously looking at Darth Vader.', 245234), ('Darth Sidious electrocutes both using Force Lightning.', 245554);
INSERT INTO events32 VALUES (2001, 2), (2001, 3);
INSERT INTO execute_on_single_replica_r1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (1);
INSERT INTO expected_times VALUES('main_dashboard_top_query', 500), ('main_dashboard_bottom_query', 500);
INSERT INTO f VALUES ([1, 2]);
INSERT INTO f32_table values ('49.9');
INSERT INTO fact_cpc_clicks VALUES (1);
insert into fat_granularity select number, toString(number) || '_' from numbers(100000) settings max_block_size = 8192, max_insert_threads=8;
INSERT INTO fh(a_value, b_value, c_value, d_value) VALUES (1, 5.6,-4.4, 2.6),(2, -9.6, 3, 3.3),(3, -1.3,-4, 1.2),(4, 5.3,9.7,2.3),(5, 4.4,0.037,1.222),(6, -8.6,-7.8,2.1233),(7, 5.1,9.3,8.1222),(8, 7.9,-3.6,9.837),(9, -8.2,0.62,8.43555),(10, -3,7.3,6.762);
insert into file_delim select 1, 2;
INSERT INTO fill VALUES (1, -2), (1, 3), (3, 2), (5, -1), (6, 5), (8, 0);
insert into final_bug select number % 10, 1 from numbers(1000);
INSERT INTO final_test (id, version) VALUES ('2018-01-01', '2018-01-01');
INSERT INTO fl_interval VALUES ('a', 1.1, 3.2), ('a', 1.5, 3.6), ('a', 4.0, 5.0);
INSERT INTO float VALUES (1e7);
INSERT INTO floats VALUES (1.1, 1.2, 1.3, 41.1, 41.1, 42.1);
INSERT INTO foo (ts, x) SELECT toDateTime('2020-01-01 00:05:00'), number from system.numbers_mt LIMIT 10;
INSERT INTO foo SELECT number, number % 5 FROM numbers(10);
INSERT INTO foo SELECT number, number FROM numbers(100);
INSERT INTO foo SELECT number, number%5 FROM numbers(100000);
INSERT INTO foo SELECT toString(number) AS n FROM system.numbers LIMIT 1025;
INSERT INTO foo VALUES ('2020-01-01', '2020-01-01 12:00:00', 'test1'), ('2020-01-01', '2020-01-01 13:00:00', 'test2');
INSERT INTO foo VALUES ('2020-01-01', 'test1', 10), ('2020-01-01', 'test2', 20);
INSERT INTO foo VALUES (1, 'one', -1, 'een'), (2, 'two', -2, 'twee'), (3, 'three', -3, 'drie'), (4, 'four', -4, 'vier'), (5, 'five', -5, 'vijf');
INSERT INTO foo VALUES (1, 0.5, 0.2, 0.3, 0.8);
INSERT INTO foo VALUES (1, 2), (3, 4);
INSERT INTO foo1 SELECT number, 1 FROM numbers(100000);
INSERT INTO foo2 SELECT number, number FROM numbers(100);
INSERT INTO foo_00234(id) VALUES (0),(4),(1),(1),(3),(1),(1),(2),(2),(2),(1),(2),(3),(2),(1),(1),(2),(1),(1),(1),(3),(1),(2),(2),(1),(1),(3),(1),(2),(1),(1),(3),(2),(1),(1),(4),(0);
INSERT INTO foo__fuzz_0 SELECT number, number % 5 FROM numbers(10);
INSERT INTO foo_c VALUES ('2019-02-06 01:01:01'),('2019-02-07 01:01:01'),('2019-02-08 01:01:01'),('2021-02-06 01:01:01'),('2093-05-29 01:01:01'),('2100-06-06 01:01:01'),('2100-10-14 01:01:01'),('2100-11-01 01:01:01'),('2100-11-15 01:01:01'),('2100-11-30 01:01:01'),('2100-12-11 01:01:01'),('2100-12-21 01:01:01');
INSERT INTO foo_lc SELECT toString(number) AS n FROM system.numbers LIMIT 1025;
insert into fooL select number, 'L' || toString(number) from numbers(2);
insert into fooL select number, 'LL' || toString(number) from numbers(2);
insert into fooR select number, 'R' || toString(number) from numbers(2);
INSERT INTO format_nested VALUES (['foo', 'bar'], ['qaz', 'qux']);
insert into forms values ('5840ead423829c1eab29fa97','this is a test');
INSERT INTO four_rows_per_granule (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
INSERT INTO four_rows_per_granule (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-19', 8, 7000, 8000);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign) VALUES ('2018-05-15', 1, 1000, 2000, -1), ('2018-05-16', 2, 3000, 4000, -1), ('2018-05-17', 3, 5000, 6000, -1), ('2018-05-18', 4, 7000, 8000, -1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign) VALUES ('2018-05-15', 1, 1000, 2000, 1), ('2018-05-16', 2, 3000, 4000, 1), ('2018-05-17', 3, 5000, 6000, 1), ('2018-05-18', 4, 7000, 8000, 1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign) VALUES ('2018-05-15', 5, 1000, 2000, -1), ('2018-05-17', 7, 5000, 6000, -1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign) VALUES ('2018-05-15', 5, 1000, 2000, 1), ('2018-05-16', 6, 3000, 4000, 1), ('2018-05-17', 7, 5000, 6000, 1), ('2018-05-18', 8, 7000, 8000, 1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 1, 1000, 2000, -1, 1), ('2018-05-16', 2, 3000, 4000, -1, 1), ('2018-05-17', 3, 5000, 6000, -1, 1), ('2018-05-18', 4, 7000, 8000, -1, 1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 1, 1000, 2000, 1, 1), ('2018-05-16', 2, 3000, 4000, 1, 1), ('2018-05-17', 3, 5000, 6000, 1, 1), ('2018-05-18', 4, 7000, 8000, 1, 1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 5, 1000, 2000, -1, 1), ('2018-05-17', 7, 5000, 6000, -1, 1);
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 5, 1000, 2000, 1, 1), ('2018-05-16', 6, 3000, 4000, 1, 1), ('2018-05-17', 7, 5000, 6000, 1, 1), ('2018-05-18', 8, 7000, 8000, 1, 1);
INSERT INTO four_rows_per_granule1 (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
INSERT INTO four_rows_per_granule2 (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-19', 8, 7000, 8000);
insert into from_table select 42;
INSERT INTO fromModifiedJulianDay_test VALUES (-1), (0), (59154);
INSERT INTO full_duplicates SELECT * FROM source_data;
INSERT INTO full_join (x, s) VALUES (2, 'b1'), (2, 'b2'), (4, 'b3'), (4, 'b4'), (4, 'b5'), (5, 'b6');
INSERT INTO full_join__fuzz_4 VALUES (1, '1'), (2, '2'), (3, '3');
insert into function cluster('test_cluster_two_shards', currentDatabase(), dst_02224, key) select * from cluster('test_cluster_two_shards', currentDatabase(), src_02224, key) settings parallel_distributed_insert_select=1, max_distributed_depth=1;
insert into function cluster('test_cluster_two_shards', currentDatabase(), dst_02224, key) select * from cluster('test_cluster_two_shards', currentDatabase(), src_02224, key) settings parallel_distributed_insert_select=1, max_distributed_depth=2;
insert into function cluster('test_cluster_two_shards', currentDatabase(), dst_02224, key) select * from cluster('test_cluster_two_shards', currentDatabase(), src_02224, key) settings parallel_distributed_insert_select=2, max_distributed_depth=1;
INSERT INTO FUNCTION cluster('test_shard_localhost', currentDatabase(), x, rand()) SELECT * FROM numbers(10);
insert into function file('02269_data', 'RowBinary') select 1 settings engine_file_truncate_on_insert=1;
insert into function file('02374_data1.jsonl') select number as x, 'str' as s from numbers(10);
insert into function file('02374_data2.jsonl') select number as x, 'str' as s from numbers(10);
insert into function file('02884_2.csv') select 2 as x settings engine_file_truncate_on_insert=1;
insert into function file('test_02244', 'CSV', 'x String, y UInt32') select 'Hello, world!', 42 settings engine_file_truncate_on_insert=1;
insert into function file('test_02244', 'JSONCompactEachRow', 'x String, y UInt32') select 'Hello, world!', 42 settings engine_file_truncate_on_insert=1;
insert into function file('test_02244', 'Values', 'x String, y UInt32') select 'Hello, world!', 42 settings engine_file_truncate_on_insert=1;
insert into function file(02322_data.sql, 'SQLInsert') select number as x, number % 3 as y, 'Hello' as z from numbers(5) settings output_format_sql_insert_max_batch_size=2, output_format_sql_insert_quote_names=0, engine_file_truncate_on_insert=1;
insert into function file(02322_data.sql, 'SQLInsert') select number, number % 3, 'Hello' from numbers(5) settings output_format_sql_insert_max_batch_size=2, engine_file_truncate_on_insert=1;
insert into function file(02384_data.arrow) select toLowCardinality(toNullable('abc')) as lc settings output_format_arrow_low_cardinality_as_dictionary=1, output_format_arrow_string_as_string=1, engine_file_truncate_on_insert=1;
insert into function file(02405_data.avro) select [(1, 'aa'), (2, 'bb')]::Nested(x UInt32, y String) as nested settings engine_file_truncate_on_insert=1;
insert into function file(02405_data.avro) select [(1, (2, ['aa', 'bb']), [(3, 'cc'), (4, 'dd')]), (5, (6, ['ee', 'ff']), [(7, 'gg'), (8, 'hh')])]::Nested(x UInt32, y Tuple(y1 UInt32, y2 Array(String)), z Nested(z1 UInt32, z2 String)) as nested settings engine_file_truncate_on_insert=1;
insert into function file(02416_data.jsonColumnsWithMetadata) select number::UInt32 as n, 'Hello' as s, range(number) as a from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(02416_data.jsonCompact) select number::UInt32 as n, 'Hello' as s, range(number) as a from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(02417_data.jsonObjectEachRow) select number, 'Hello' as str, range(number) as arr from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(02421_data.jsonl) select '42.42' as d settings engine_file_truncate_on_insert=1;
insert into function file(02453_data.jsonl, TSV) select 1 settings engine_file_truncate_on_insert=1;
insert into function file(02454_data.jsonobjecteachrow) select number, concat('name_', toString(number)) as name from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(02458_data.jsoncompacteachrow) select NULL as x, 42 as y settings engine_file_truncate_on_insert=1;
insert into function file(02483_data.LineAsString) select 'Hello' settings engine_file_truncate_on_insert=1;
insert into function file(a.csv) select * from madness_02735 order by tuple(*);
insert into function file(arrays_02735.parquet) select * from arrays_02735;
insert into function file(arrow_02735.parquet) select * from other_encoders_02735 settings output_format_parquet_use_custom_encoder = 0;
insert into function file(b.csv) select aa, aaa, an, aan, l, ln, arrayMap(x->reinterpret(x, 'UInt128'), al) as al_, aaln, mln, t, n.hello, n.world from file(madness_02735.parquet) order by tuple(aa, aaa, an, aan, l, ln, al_, aaln, mln, t, n.hello, n.world);
insert into function file(basic_types_02735.parquet) select * from basic_types_02735;
insert into function file(compressed_02735.parquet) select concat('aaaaaaaaaaaaaaaa', toString(number)) as s from numbers(1000) settings output_format_parquet_row_group_size = 10000, output_format_parquet_compression_method='none';
insert into function file(compressed_02735.parquet) select if(number%3==1, NULL, 42) as x from numbers(70) settings output_format_parquet_compression_method='zstd';
insert into function file(data_02302.arrow) select 1 as x settings engine_file_truncate_on_insert=1;
insert into function file(data_02302.orc) select 1 as x settings engine_file_truncate_on_insert=1;
insert into function file(data_02304.arrow) select 'hello' as s from numbers(3) settings engine_file_truncate_on_insert=1, output_format_arrow_string_as_string=1;
insert into function file(data_02304.orc) select 'hello' as s from numbers(3) settings engine_file_truncate_on_insert=1, output_format_orc_string_as_string=1;
insert into function file(data_02313.avro) select map(concat('key_', toString(number)), number) as m from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(data_02313.avro) select map(concat('key_', toString(number)), tuple(number, range(number))) as m from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(data_02313.avro) select tuple(number, tuple(number + 1, number + 2), range(number))::Tuple(a UInt32, b Tuple(c UInt32, d UInt32), e Array(UInt32)) as t from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(data_02313.avro, auto, 'a Nested(b Nested(c UInt32, d UInt32))') select [[(number, number + 1), (number + 2, number + 3)]] from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(data_02313.avro, auto, 'a Nested(b UInt32, c UInt32)') select [number, number + 1], [number + 2, number + 3] from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(data_02314.csv) select number, number + 1, number + 2 from numbers(5);
insert into function file(data_02314.tsv) select number, number + 1 from numbers(5) settings engine_file_truncate_on_insert=1;
insert into function file(data_02314.tsv) select number, number + 1, number + 2 from numbers(5);
insert into function file(data_02318.tsv) select * from numbers(10);
insert into function file(data_02323.tsv) select number % 2 ? number : NULL from numbers(3) settings engine_file_truncate_on_insert=1;
insert into function file(madness_02735.parquet) select * from madness_02735;
insert into function file(nullables_02735.parquet) select * from nullables_02735;
insert into function file(single_thread_02735.parquet) select * from other_encoders_02735 settings max_threads = 1;
insert into function file(strings2_02735.parquet) select 'give', toFixedString('you', 3) settings output_format_parquet_string_as_string = 0, output_format_parquet_fixed_string_as_fixed_byte_array = 0;
insert into function file(strings3_02735.parquet) select toFixedString('up', 2) settings output_format_parquet_string_as_string = 1, output_format_parquet_fixed_string_as_fixed_byte_array = 0;
INSERT INTO function null('auto') SELECT 1;
INSERT INTO function null('auto') SELECT number FROM numbers(10);
INSERT INTO function null('auto') SELECT number, toString(number) FROM numbers(10);
INSERT INTO function null('number UInt64') SELECT * FROM numbers_mt(10000);
INSERT INTO function null() SELECT 1;
INSERT INTO function null() SELECT number FROM numbers(10);
INSERT INTO function null() SELECT number, toString(number) FROM numbers(10);
INSERT INTO FUNCTION remote('127.0.0.1', currentDatabase(), remote_test) VALUES(1);
INSERT INTO FUNCTION remote('127.0.0.1', currentDatabase(), remote_test) VALUES(2);
INSERT INTO FUNCTION remote('127.0.0.1', currentDatabase(), remote_test) VALUES(3);
INSERT INTO FUNCTION remote('127.0.0.1', currentDatabase(), remote_test) VALUES(4);
INSERT INTO function remote('127.0.0.1', currentDatabase(), t_async_insert_table_function) values (1, 'aaa') (2, 'bbb');
INSERT INTO FUNCTION remote('127.0.0.2', currentDatabase(), t1) VALUES (2, 2);
INSERT INTO FUNCTION remote('127.0.0.2', currentDatabase(), t2) VALUES (2, 2);
INSERT INTO FUNCTION remote('127.0.0.2', currentDatabase(), t4) VALUES (2);
insert into function remote('127.0.0.2', currentDatabase(), tab) values (1);
INSERT INTO FUNCTION remote('127.0.0.{1,2}', currentDatabase(), y, 'default') SELECT * FROM numbers(10);
insert into function remote('127.0.0.{2|3|4}', currentDatabase(), tab) values (3);
insert into function remote('127.0.0.{2|3}', currentDatabase(), tab) values (2);
INSERT INTO FUNCTION remote('127.1', currentDatabase(), underlying_01795) SELECT toUInt64(number) FROM system.numbers LIMIT 1;
INSERT INTO FUNCTION remote('127.1', currentDatabase(), underlying_01796) SELECT toUInt64(number) FROM system.numbers LIMIT 1;
INSERT INTO FUNCTION remote('127.1', currentDatabase(), underlying_01797) SELECT toUInt64(number) FROM system.numbers LIMIT 1;
insert into function remote('127.{1,2}', currentDatabase(), dst_02224, key) select * from remote('127.{1,2}', currentDatabase(), src_02224, key) settings parallel_distributed_insert_select=2, max_distributed_depth=1;
INSERT INTO FUNCTION remote(remote1, database=currentDatabase()) VALUES(1);
INSERT INTO FUNCTION remote(remote1, database=currentDatabase()) VALUES(2);
INSERT INTO FUNCTION remote(remote1, database=currentDatabase()) VALUES(3);
INSERT INTO FUNCTION remote(remote1, database=currentDatabase()) VALUES(4);
INSERT INTO functional_index_mergetree VALUES (7.42)(7.41)(7.51);
insert into funnel_test values (0,1000),(1,1001),(2,1002),(3,1003),(4,1004),(5,1005),(6,1006),(7,1007),(8,1008);
insert into funnel_test2(timestamp, event) values ('2018-01-01 01:01:01',1001),('2018-01-01 01:01:02',1002),('2018-01-01 01:01:03',1003),('2018-01-01 01:01:04',1004),('2018-01-01 01:01:05',1005),('2018-01-01 01:01:06',1006),('2018-01-01 01:01:07',1007),('2018-01-01 01:01:08',1008);
insert into funnel_test_non_null values (1, 1, 'a1', 'b1') (2, 1, 'a2', 'b2');
insert into funnel_test_non_null values (1, 2, 'a1', null) (2, 2, 'a2', null);
insert into funnel_test_non_null values (1, 3, null, null);
insert into funnel_test_non_null values (1, 4, null, 'b1') (2, 4, 'a2', null) (3, 4, null, 'b3');
insert into funnel_test_strict values (00,1000),(10,1001),(20,1002),(30,1003),(40,1004),(50,1005),(51,1005),(60,1006),(70,1007),(80,1008);
insert into funnel_test_strict_increase values (0,1000),(1,1001),(1,1002),(1,1003),(2,1004);
insert into funnel_test_strict_order values (1, 1, 'a') (2, 1, 'b') (3, 1, 'c');
insert into funnel_test_strict_order values (1, 2, 'a') (2, 2, 'd') (3, 2, 'b') (4, 2, 'c');
insert into funnel_test_strict_order values (1, 3, 'a') (2, 3, 'a') (3, 3, 'b') (4, 3, 'b') (5, 3, 'c') (6, 3, 'c');
insert into funnel_test_strict_order values (1, 4, 'a') (2, 4, 'a') (3, 4, 'a') (4, 4, 'a') (5, 4, 'b') (6, 4, 'b') (7, 4, 'c') (8, 4, 'c');
insert into funnel_test_strict_order values (1, 5, 'a') (2, 5, 'a') (3, 5, 'b') (4, 5, 'b') (5, 5, 'd') (6, 5, 'c') (7, 5, 'c');
insert into funnel_test_strict_order values (1, 6, 'c') (2, 6, 'c') (3, 6, 'b') (4, 6, 'b') (5, 6, 'a') (6, 6, 'a');
insert into funnel_test_strict_order values (1, 7, 'a') (2, 7, 'c') (3, 7, 'b');
insert into funnel_test_u64(timestamp, event) values ( 1e14 + 1 ,1001),(1e14 + 2,1002),(1e14 + 3,1003),(1e14 + 4,1004),(1e14 + 5,1005),(1e14 + 6,1006),(1e14 + 7,1007),(1e14 + 8,1008);
INSERT INTO fuse_tbl SELECT number, number + 1 FROM numbers(1000);
INSERT INTO fuse_tbl VALUES (1, 1), (2, 2), (NULL, 3);
INSERT INTO geo VALUES ('MULTIPOLYGON(((0 0,10 0,10 10,0 10,0 0),(4 4,5 4,5 5,4 5,4 4)),((-10 -10,-10 -9,-9 10,-10 -10)))', 2);
INSERT INTO geo VALUES ('MULTIPOLYGON(((1 0,10 0,10 10,0 10,1 0),(4 4,5 4,5 5,4 5,4 4)),((-10 -10,-10 -9,-9 10,-10 -10)))', 1);
INSERT INTO geo VALUES ('MULTIPOLYGON(((2 0,10 0,10 10,0 10,2 0),(4 4,5 4,5 5,4 5,4 4)),((-10 -10,-10 -9,-9 10,-10 -10)))', 3);
INSERT INTO geo VALUES ('POINT(0 0)', 1);
INSERT INTO geo VALUES ('POINT(1 0)', 2);
INSERT INTO geo VALUES ('POINT(2 0)', 3);
INSERT INTO geo VALUES ('POLYGON((0 0,10 0,10 10,0 10,0 0))', 2);
INSERT INTO geo VALUES ('POLYGON((0 0,10 0,10 10,0 10,0 0),(4 4,5 4,5 5,4 5,4 4))', 4);
INSERT INTO geo VALUES ('POLYGON((1 0,10 0,10 10,0 10,1 0))', 1);
INSERT INTO geo VALUES ('POLYGON((1 0,10 0,10 10,0 10,1 0),(4 4,5 4,5 5,4 5,4 4))', 6);
INSERT INTO geo VALUES ('POLYGON((2 0,10 0,10 10,0 10,2 0))', 3);
INSERT INTO geo VALUES ('POLYGON((2 0,10 0,10 10,0 10,2 0),(4 4,5 4,5 5,4 5,4 4))', 5);
INSERT INTO geo VALUES ((0, 0), 1);
INSERT INTO geo VALUES ((0., 0.), 'b', 1);
INSERT INTO geo VALUES ((1, 0), 2);
INSERT INTO geo VALUES ((1., 0.), 'c', 2);
INSERT INTO geo VALUES ((2, 0), 3);
INSERT INTO geo VALUES ((2., 0.), 'd', 3);
INSERT INTO geo VALUES ([(0, 0), (10, 0), (10, 10), (0, 10)], 1);
INSERT INTO geo VALUES ([(0., 0.), (10, 0), (10, 10), (0, 10)], 'b', 1);
INSERT INTO geo VALUES ([(1, 0), (10, 0), (10, 10), (0, 10)], 2);
INSERT INTO geo VALUES ([(1., 0.), (10, 0), (10, 10), (0, 10)], 'c', 2);
INSERT INTO geo VALUES ([(2, 0), (10, 0), (10, 10), (0, 10)], 3);
INSERT INTO geo VALUES ([(2., 0.), (10, 0), (10, 10), (0, 10)], 'd', 3);
INSERT INTO geo VALUES ([[(0, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], 1);
INSERT INTO geo VALUES ([[(0., 0.), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], 'b', 1);
INSERT INTO geo VALUES ([[(1, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], 2);
INSERT INTO geo VALUES ([[(1., 0.), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], 'c', 2);
INSERT INTO geo VALUES ([[(2, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], 3);
INSERT INTO geo VALUES ([[(2., 0.), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], 'd', 3);
INSERT INTO geo VALUES ([[[(0, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], [[(-10, -10), (-10, -9), (-9, 10)]]], 1);
INSERT INTO geo VALUES ([[[(0., 0.), (10, 0), (10, 10), (0, 10)], [(4., 4.), (5, 4), (5, 5), (4, 5)]], [[(-10., -10.), (-10, -9), (-9, 10)]]], 'b', 1);
INSERT INTO geo VALUES ([[[(1, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], [[(-10, -10), (-10, -9), (-9, 10)]]], 2);
INSERT INTO geo VALUES ([[[(1., 0.), (10, 0), (10, 10), (0, 10)], [(4., 4.), (5, 4), (5, 5), (4, 5)]], [[(-10., -10.), (-10, -9), (-9, 10)]]], 'c', 2);
INSERT INTO geo VALUES ([[[(2, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (5, 4), (5, 5), (4, 5)]], [[(-10, -10), (-10, -9), (-9, 10)]]], 3);
INSERT INTO geo VALUES ([[[(2., 0.), (10, 0), (10, 10), (0, 10)], [(4., 4.), (5, 4), (5, 5), (4, 5)]], [[(-10., -10.), (-10, -9), (-9, 10)]]], 'd', 3);
INSERT INTO geo VALUES((0, 0), [(0, 0), (10, 0), (10, 10), (0, 10)], [[(20, 20), (50, 20), (50, 50), (20, 50)], [(30, 30), (50, 50), (50, 30)]], [[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]]);
INSERT INTO github_events SELECT * FROM gen LIMIT 100000;
INSERT INTO globalin VALUES (34, toDate('2017-10-02')), (42, toDate('2017-10-02')), (55, toDate('2017-10-01'));
INSERT INTO grop_uniq_array_date VALUES (toDate('2016-12-16'), toDateTime('2016-12-16 12:00:00'), 1) (toDate('2016-12-16'), toDateTime('2016-12-16 12:00:00'), 1);
INSERT INTO grop_uniq_array_date VALUES (toDate('2016-12-17'), toDateTime('2016-12-17 12:00:00'), 1), (toDate('2016-12-18'), toDateTime('2016-12-18 12:00:00'), 1), (toDate('2016-12-16'), toDateTime('2016-12-16 12:00:00'), 2);
INSERT INTO group_bitmap_data_test SELECT   '2019-01-01',   1,   number FROM numbers(1, 50);
INSERT INTO group_bitmap_data_test SELECT   '2019-01-02',   1,   number FROM numbers(11, 60);
INSERT INTO group_bitmap_data_test SELECT   '2019-01-03',   2,   number FROM numbers(1, 10);
insert into group_by_all values ('abc1', 1, 1), ('abc2', 1, 1), ('abc3', 1, 1), ('abc4', 1, 1);
INSERT INTO group_by_null_key VALUES (null, null), (null, null);
INSERT INTO group_by_pk SELECT number / 100, number FROM numbers(1000);
INSERT INTO group_by_pk_lc_uint128 SELECT number / 100, number FROM numbers(1000);
INSERT INTO group_by_pk_lc_uint256 SELECT number / 100, number FROM numbers(1000);
INSERT INTO group_uniq_str SELECT 2 as id, toString(number % 100) as v FROM system.numbers LIMIT 1000000;
INSERT INTO group_uniq_str SELECT 5 as id, toString(number % 100) as v FROM system.numbers LIMIT 10000000;
INSERT INTO grouping_sets SELECT   number % 2 + 1 AS fact_1_id,    number % 5 + 1 AS fact_2_id,    number % 10 + 1 AS fact_3_id,    number % 10 + 1 AS fact_4_id,    number % 100 AS sales_value FROM system.numbers limit 1000;
insert into h values ('2020-06-10', 16671268, 1);
INSERT INTO h3_geo VALUES (-147.4887686066785, 76.73237945824442, 9);
INSERT INTO h3_geo VALUES (-173.6412167681162, -14.130272474941535, 0);
INSERT INTO h3_geo VALUES (-70.40163237204142, -63.12562536833242, 12);
INSERT INTO h3_indexes VALUES (stringToH3('821c07fffffffff'));
INSERT INTO h3_indexes VALUES (stringToH3('85283473fffffff'));
INSERT INTO han_1 values (1, '2019-07-31');
insert into has_final_mark select number, number from numbers(10000);
INSERT INTO has_function(arr) values ([null, 'str1', 'str2']),(['str1', 'str2']), ([]), ([]);
INSERT INTO HASH_TEST_INSERT VALUES ('a');
INSERT INTO HASH_TEST_INSERT VALUES ('test');
INSERT INTO hierarchy_source_table VALUES (1, 0), (2, 1), (3, 1), (4, 2);
insert into histogram values(-1);
INSERT INTO hit SELECT * FROM generateRandom() LIMIT 10;
INSERT INTO huge_granularity_small_blocks (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
INSERT INTO huge_granularity_small_blocks (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 5, 3000, 4000), ('2018-05-17', 6, 5000, 6000), ('2018-05-19', 7, 7000, 8000);
INSERT INTO huge_granularity_small_blocks (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-19', 8, 7000, 8000);
INSERT INTO i20203_1 VALUES (2);
INSERT INTO id1 VALUES (1,1)(2,2)(3,3);
INSERT INTO id2 VALUES (1,1)(2,2)(3,3);
INSERT INTO id_join values ('CLICK', [1234]);
INSERT INTO ids SELECT * FROM numbers(10);
insert into left_table values (1,'c');
INSERT INTO left_table VALUES(1, 'somestr');
INSERT INTO legacy_column_name_of_tuple_literal SELECT number, number * 2 FROM numbers(8192 * 10) SETTINGS legacy_column_name_of_tuple_literal = true;
insert into lhs values ('abc');
INSERT INTO limit_by (Num, Name) VALUES (1, 'John');
INSERT INTO limit_by (Num, Name) VALUES (3, 'Mary');
INSERT INTO limit_by (Num, Name) VALUES (4, 'Mary');
INSERT INTO limit_by (Num, Name) VALUES (5, 'Bill');
INSERT INTO limit_by (Num, Name) VALUES (7, 'Bill');
INSERT INTO limit_by (Num, Name) VALUES (7, 'John');
INSERT INTO limit_by (Num, Name) VALUES (7, 'Mary');
insert into limit_by values(1, 100), (1, 110), (1, 120), (1, 130), (2, 200), (2, 210), (2, 220), (3, 300);
INSERT INTO limited_merge_table SELECT number FROM numbers(100);
INSERT INTO literal_alias_misclassification values(1, 'a', 1);
INSERT INTO literal_alias_misclassification values(2, 'b', 2);
insert into local (a) select number from numbers(10);
INSERT INTO local_01099_a SELECT number from system.numbers limit 3;
INSERT INTO local_01213 SELECT toString(number) FROM numbers(2);
insert into local_t_l5ydey values (1, 2, 3, '4');
INSERT INTO local_table SELECT number AS id, toString(number) AS val FROM numbers(100);
INSERT INTO local_table SELECT number FROM numbers(1);
INSERT INTO local_table VALUES(1, 'One', now(), 100);
INSERT INTO local_table VALUES(2, 'Two', now(), 200);
INSERT INTO location VALUES (1,'上海市'),(2,'北京市');
INSERT INTO log VALUES ('Hello'), ('World');
INSERT INTO log VALUES (0);
INSERT INTO log VALUES (1);
INSERT INTO log VALUES (2);
INSERT INTO LOG_T VALUES (123, ['Hello', 'ProcessName'], ['World', 'node']);
INSERT INTO logins  SELECT number as id, '2000-01-01 11:00:00' from numbers(1000);
INSERT INTO logins  SELECT number+2 as id, '2001-01-01 11:10:01' from numbers(1);
INSERT INTO logs VALUES('2019-11-20 00:00:00');
insert into long select number % 11, toDateTime('2021-01-01 00:00:00') + number from numbers(1000);
INSERT INTO low_card VALUES ( '1' );
INSERT INTO low_cardinality_all (d,x,s) VALUES ('2018-11-12',1,'123');
INSERT INTO low_null_float (a) SELECT if(number % 3 == 0, Null, number) FROM system.numbers LIMIT 1000000;
INSERT INTO lower_test (a,b) VALUES (1,'A'),(2,'B'),(3,'C');
INSERT INTO lwd_test SELECT number AS id, toString(number) AS value FROM numbers(10);
INSERT INTO lwd_test SELECT number, randomString(10) FROM system.numbers LIMIT 1000000;
INSERT INTO lwd_test_02521 SELECT number, randomString(10), now() - INTERVAL 2 MONTH FROM numbers(50000);
INSERT INTO lwd_test_02521 SELECT number, randomString(10), now() FROM numbers(50000);
INSERT INTO m VALUES ('a');
INSERT INTO m VALUES ('b');
insert into m values (1);
INSERT INTO m VALUES (123);
INSERT INTO m0 SELECT number FROM numbers(10);
INSERT INTO m1 SELECT number, 'boo' FROM numbers(10);
insert into m3 values (-1,1);
insert into m3 values (0,0);
INSERT INTO main VALUES ('sku_0001','black','women','nice shirt');
INSERT INTO make_series_test_table VALUES ('Aldi','Apple',4,'2016-09-10'), ('Costco','Apple',2,'2016-09-11'), ('Aldi','Apple',6,'2016-09-10'), ('Costco','Snargaluff',100,'2016-09-12'), ('Aldi','Apple',7,'2016-09-12'), ('Aldi','Snargaluff',400,'2016-09-11'),('Costco','Snargaluff',104,'2016-09-12'),('Aldi','Apple',5,'2016-09-12'),('Aldi','Snargaluff',600,'2016-09-11'),('Costco','Snargaluff',200,'2016-09-10');
INSERT INTO make_series_test_table2 VALUES ('Aldi','Apple',4,10),('Costco','Apple',2,11),('Aldi','Apple',6,10),('Costco','Snargaluff',100,12),('Aldi','Apple',7,12),('Aldi','Snargaluff',400,11),('Costco','Snargaluff',104,12),('Aldi','Apple',5,12),('Aldi','Snargaluff',600,11),('Costco','Snargaluff',200,10);
INSERT INTO mann_whitney_test VALUES (310, 0), (195, 0), (530, 0), (155, 0), (530, 0), (245, 0), (385, 0), (450, 0), (465, 0), (545, 0), (170, 0), (180, 0), (125, 0), (180, 0), (230, 0), (75, 0), (430, 0), (480, 0), (495, 0), (295, 0), (116, 1), (171, 1), (176, 1), (421, 1), (111, 1), (326, 1), (481, 1), (111, 1), (346, 1), (441, 1), (261, 1), (411, 1), (206, 1), (521, 1), (456, 1), (446, 1), (296, 1), (51, 1), (426, 1), (261, 1);
INSERT INTO map_comb VALUES (1, map(1, 10, 2, 10, 3, 10)),(1, map(3, 10, 4, 10, 5, 10)),(2, map(4, 10, 5, 10, 6, 10)),(2, map(6, 10, 7, 10, 8, 10)),(3, map(1, 10, 2, 10, 3, 10)),(4, map(3, 10, 4, 10, 5, 10)),(5, map(4, 10, 5, 10, 6, 10)),(5, map(6, 10, 7, 10, 8, 10));
INSERT INTO map_containsKeyLike_test VALUES (1, {'1-K1':'1-V1','1-K2':'1-V2'}),(2,{'2-K1':'2-V1','2-K2':'2-V2'});
INSERT INTO map_containsKeyLike_test VALUES (3, {'3-K1':'3-V1','3-K2':'3-V2'}),(4, {'4-K1':'4-V1','4-K2':'4-V2'});
INSERT INTO map_containsKeyLike_test VALUES (5, {'5-K1':'5-V1','5-K2':'5-V2'}),(6, {'6-K1':'6-V1','6-K2':'6-V2'});
INSERT INTO map_extractKeyLike_test VALUES (1, {'P1-K1':'1-V1','P2-K2':'1-V2'}),(2,{'P1-K1':'2-V1','P2-K2':'2-V2'});
INSERT INTO map_extractKeyLike_test VALUES (3, {'P1-K1':'3-V1','P2-K2':'3-V2'}),(4,{'P1-K1':'4-V1','P2-K2':'4-V2'});
INSERT INTO map_extractKeyLike_test VALUES (5, {'5-K1':'5-V1','5-K2':'5-V2'}),(6, {'P3-K1':'6-V1','P4-K2':'6-V2'});
INSERT INTO map_formats VALUES(map('k1', 1, 'k2', 2, 'k3', 3), map('k1', toDate('2020-05-05')), map('k1', [], 'k2', [7, 8]));
INSERT INTO map_formats VALUES(map('k1', 10, 'k3', 30), map('k2', toDate('2020-06-06')), map());
INSERT INTO map_json FORMAT JSONEachRow {"m1" : {"k1" : 1, "k2" : 2}, "m2" : {"1" : 2, "2" : 3}, "m3" : {"2020-10-10" : "foo"}};
INSERT INTO map_lc select map('a', 'b');
INSERT INTO map_subcolumns VALUES (1, map('a', 1, 'b', 2)) (2, map('a', 3, 'c', 4)), (3, map('b', 5, 'c', 6, 'd', 7));
INSERT INTO map_test (tags) VALUES (map('fruit','apple','color','red'));
INSERT INTO map_test_index_map_keys VALUES (0, {'K0':'V0'}), (1, {'K1':'V1'});
INSERT INTO map_test_index_map_values VALUES (0, {'K0':'V0'}), (1, {'K1':'V1'});
INSERT INTO markdown VALUES (1, 'name1', [1,2,3], 'Some long string', 'name1', 1.11), (2, 'name2', [4,5,60000], Null, 'Another long string', 222.222222), (30000, 'One more long string', [7,8,9], 'name3', 'name3', 3.33);
INSERT INTO mass_table_117 SELECT * FROM generateRandom('`dt` Date,`site_id` Int32,`site_key` String', 1, 10, 2) LIMIT 100;
INSERT INTO mass_table_312 SELECT * FROM generateRandom('`d` Date,`x` UInt64,`n.a` Array(String),`n.b` Array(String)', 1, 10, 2) LIMIT 100;
INSERT INTO mass_table_457 SELECT * FROM generateRandom('`key` Array(Tuple(Float64, Float64)),`name` String,`value` UInt64', 1, 10, 2) LIMIT 10;
INSERT INTO master VALUES (1, 'ONE');
INSERT INTO max_parts_in_total SELECT 123;
INSERT INTO max_parts_in_total SELECT number FROM numbers(10);
INSERT INTO md(key,t,bid,ask) VALUES (1,20,7,8),(1,5,1,2),(1,10,11,12),(1,15,5,6);
INSERT INTO md(key,t,bid,ask) VALUES (2,20,17,18),(2,5,11,12),(2,10,21,22),(2,15,5,6);
INSERT INTO mean_ztest SELECT number, 0 FROM numbers(100) WHERE number % 2 = 0;
INSERT INTO mean_ztest SELECT number, 1 FROM numbers(100) WHERE number % 2 = 1;
INSERT INTO mem1 VALUES (10);
INSERT INTO mem2 VALUES (100);
INSERT INTO mem3 VALUES (100, 'foo');
INSERT INTO mem_test SELECT   number,   number FROM numbers(100);
INSERT INTO memory ( x ) VALUES (5);
INSERT INTO memory ( x) VALUES (3);
INSERT INTO memory (x ) VALUES (4);
INSERT INTO memory (x) VALUES (2);
INSERT INTO memory VALUES (1);
INSERT INTO memory(x)VALUES(6);
INSERT INTO memory_01069.file VALUES (3), (4);
INSERT INTO memory_01069.mt VALUES (1), (2);
INSERT INTO merge (x) SELECT number   AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number   AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number + 10 AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number + 100 AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number + 5 AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number + 5 AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number + 9 AS x FROM system.numbers LIMIT 10;
INSERT INTO merge (x) SELECT number AS x FROM (SELECT * FROM system.numbers LIMIT 8200) ORDER BY rand();
INSERT INTO merge (x) SELECT number AS x FROM (SELECT number + 5000 AS number FROM system.numbers LIMIT 10000);
INSERT INTO merge (x) SELECT number AS x FROM (SELECT number FROM system.numbers LIMIT 10000);
INSERT INTO merge (x) VALUES (1), (2), (3);
INSERT INTO merge (x) VALUES (4), (5), (6);
insert into merge1 values (1, '2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3);
insert into merge1 values (1, 'Hello, Alter Table!','2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3);
insert into merge2 values (2, '2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3);
insert into merge_distributed1 values (1, '2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3);
insert into merge_distributed1 values (1, 'Hello, Alter Table!','2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3);
INSERT INTO merge_table_standard_delete select number, toString(number) from numbers(100);
INSERT INTO merge_tree SELECT 0 FROM numbers(1000000);
INSERT INTO merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO merge_tree VALUES ('2020-01-01'), ('2020-01-02'), ('2020-01-03'), ('2020-01-04'), ('2020-01-05'), ('2020-01-06');
INSERT INTO merge_tree VALUES (0), (1);
INSERT INTO merge_tree VALUES (1, '2000-01-01');
insert into merge_tree values (1, '2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3) alter table merge_tree add column dummy String after CounterID;
insert into merge_tree values (1, 'Hello, Alter Table!','2013-09-19', 1, 0, 2, '2013-09-19 12:43:06', 3) select CounterID, dummy from merge_tree where dummy <> '' limit 10;
INSERT INTO merge_tree_deduplication (key, value) VALUES (1, '1');
INSERT INTO merge_tree_deduplication (key, value) VALUES (10, '10');
INSERT INTO merge_tree_deduplication (key, value) VALUES (11, '11');
INSERT INTO merge_tree_deduplication (key, value) VALUES (12, '12');
INSERT INTO merge_tree_deduplication (key, value) VALUES (2, '2');
INSERT INTO merge_tree_deduplication (key, value) VALUES (3, '3');
INSERT INTO merge_tree_deduplication (key, value) VALUES (4, '4');
INSERT INTO merge_tree_deduplication (key, value) VALUES (5, '5');
INSERT INTO merge_tree_deduplication (key, value) VALUES (6, '6');
INSERT INTO merge_tree_deduplication (key, value) VALUES (7, '7');
INSERT INTO merge_tree_deduplication (key, value) VALUES (8, '8');
INSERT INTO merge_tree_deduplication (key, value) VALUES (9, '9');
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (1, '1', 33);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (1, '1', 44);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (11, '11', 88);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (2, '2', 33);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (2, '2', 44);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (3, '3', 33);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (3, '3', 44);
INSERT INTO merge_tree_deduplication (key, value, part) VALUES (4, '4', 44);
INSERT INTO merge_tree_in_subqueries VALUES(1, 'test1', 42);
INSERT INTO merge_tree_in_subqueries VALUES(2, 'test2', 8);
INSERT INTO merge_tree_in_subqueries VALUES(3, 'test3', 8);
INSERT INTO merge_tree_in_subqueries VALUES(4, 'test4', 1985);
INSERT INTO merge_tree_in_subqueries VALUES(5, 'test5', 0);
INSERT INTO merge_tree_no_deduplication (key, value) VALUES (1, '1');
INSERT INTO merge_tree_no_deduplication (key, value) VALUES (2, '2');
INSERT INTO merge_tree_no_deduplication (key, value) VALUES (3, '3');
INSERT INTO merge_tree_no_deduplication (key, value) VALUES (4, '4');
INSERT INTO merge_tree_pk VALUES (1, 'a');
INSERT INTO merge_tree_pk VALUES (1, 'c');
INSERT INTO merge_tree_pk VALUES (2, 'b');
INSERT INTO merge_tree_pk_sql VALUES (1, 'a');
INSERT INTO merge_tree_pk_sql VALUES (1, 'c');
INSERT INTO merge_tree_pk_sql VALUES (2, 'b');
INSERT INTO merge_tree_pk_sql VALUES (2, 'd', 555);
INSERT INTO merge_tree_pk_sql VALUES (2, 'e', 555);
INSERT INTO merge_tree_table VALUES(toDate('2016-03-01'), 4, 0, 0, 1486392);
insert into merge_tree_table1 values ('a', 1);
INSERT INTO merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO mergetree_00588 VALUES (1, 'hello'), (2, 'world');
INSERT INTO mergetree_00609 VALUES (1, 'hello'), (2, 'world');
INSERT INTO mergetree_00673 VALUES (1);
INSERT INTO mergetree_00698 VALUES (3, [4, 5, 6], [1, 2, 3]), (1, [111], [222]), (2, [], []);
INSERT INTO mergetree_00698 VALUES (3, [], [1, 2, 3]), (1, [111], []), (2, [], []);
INSERT INTO mergetree_00712 VALUES (1, 'Hello, world!');
INSERT INTO mergetree_00712 VALUES (2, 'Goodbye.', 3);
insert into middle_table values (1,'a');
insert into middle_table values (1,'b');
INSERT INTO min_if SELECT [1] AS arr, '2' AS str, toInt32(3) AS int;
INSERT INTO min_if SELECT emptyArrayUInt8() AS arr, '' AS str, toInt32(0) AS int FROM system.numbers LIMIT 100000;
INSERT INTO min_max_with_nullable_string(t) VALUES (now()) (now());
INSERT INTO min_max_with_nullable_string(t, nullable_str) VALUES (now(), '.') (now(), '.');
INSERT INTO min_max_with_nullable_string(t, nullable_str) VALUES (now(), NULL) (now(), '.') (now(), NULL) (now(), '.') (now(), NULL);
INSERT INTO minimum_sample_size_continuos VALUES (20, 10);
INSERT INTO minimum_sample_size_continuos VALUES (200, 10);
INSERT INTO minimum_sample_size_conversion VALUES (0.8);
INSERT INTO minimum_sample_size_conversion VALUES (0.9);
INSERT INTO minmax_compact VALUES (0, 2, 1), (1, 1, 1), (2, 1, 1), (3, 1, 1), (4, 1, 1), (5, 2, 1), (6, 1, 2), (7, 1, 2), (8, 1, 2), (9, 1, 2);
INSERT INTO minmax_idx VALUES (1, 2);
INSERT INTO minmax_idx VALUES (1, 4);
INSERT INTO minmax_idx VALUES (1, 5);
INSERT INTO minmax_idx VALUES (19, 9);
INSERT INTO minmax_idx1 VALUES (0, 5, 4.7, 6.5, 'cba', 'b', '2014-01-04');
INSERT INTO minmax_idx1 VALUES (1, 5, 4.7, 6.5, 'cba', 'b', '2014-03-11');
INSERT INTO minmax_idx1 VALUES (5, 5, 6.9, 1.57, 'bac', 'c', '2014-11-11');
INSERT INTO minmax_idx1 VALUES (6, 2, 4.5, 2.5, 'abc', 'a', '2014-02-11');
INSERT INTO minmax_idx1 VALUES (7, 5, 6.9, 1.57, 'bac', 'c', '2014-04-11');
INSERT INTO minmax_idx1 VALUES (8, 2, 4.5, 2.5, 'abc', 'a', '2014-05-11');
INSERT INTO minmax_idx2 VALUES (1, 2);
INSERT INTO minmax_idx2 VALUES (12, 5, 4.7, 6.5, 'cba', 'b', '2014-06-11');
INSERT INTO minmax_idx2 VALUES (13, 5, 4.7, 6.5, 'cba', 'b', '2015-01-01');
INSERT INTO minmax_idx2 VALUES (3, 5, 6.9, 1.57, 'bac', 'c', '2017-01-01');
INSERT INTO minmax_idx2 VALUES (4, 2, 4.5, 2.5, 'abc', 'a', '2016-01-01');
INSERT INTO minmax_idx2 VALUES (9, 5, 6.9, 1.57, 'bac', 'c', '2014-07-11');
INSERT INTO minmax_idx2_r VALUES (1, 3);
INSERT INTO minmax_idx_r VALUES (3, 2);
INSERT INTO minmax_idx_r VALUES (65, 75);
INSERT INTO modify_sample (x) SELECT toUInt8(number) AS x FROM system.numbers LIMIT 256;
INSERT INTO modify_sample_replicated (x, y) SELECT toUInt8(number) AS x, toUInt64(number) as y FROM system.numbers LIMIT 256;
insert into morton_numbers_02457 select n1.number, n2.number, 0, 0, 0, 0, 0, 0 from numbers(pow(2, 32)-8,8) n1   cross join numbers(pow(2, 32)-8, 8) n2   cross join numbers(pow(2, 32)-8, 8) n3   cross join numbers(pow(2, 32)-8, 8) n4 ;
insert into morton_numbers_02457 select n1.number, n2.number, n3.number, n4.number, 0, 0, 0, 0 from numbers(pow(2, 16)-8,8) n1   cross join numbers(pow(2, 16)-8, 8) n2   cross join numbers(pow(2, 16)-8, 8) n3   cross join numbers(pow(2, 16)-8, 8) n4 ;
insert into morton_numbers_02457 select n1.number, n2.number, n3.number, n4.number, n5.number, n6.number, n7.number, n8.number from numbers(256-4, 4) n1   cross join numbers(256-4, 4) n2   cross join numbers(256-4, 4) n3   cross join numbers(256-4, 4) n4   cross join numbers(256-4, 4) n5   cross join numbers(256-4, 4) n6   cross join numbers(256-4, 4) n7   cross join numbers(256-4, 4) n8 ;
insert into morton_numbers_1_02457 select untuple(mortonDecode(8, mortonEncode(n1, n2, n3, n4, n5, n6, n7, n8))) from morton_numbers_02457;
insert into morton_numbers_2_02457 select untuple(mortonDecode(4, mortonEncode(n1, n2, n3, n4))) from morton_numbers_02457;
insert into morton_numbers_3_02457 select untuple(mortonDecode(2, mortonEncode(n1, n2))) from morton_numbers_02457;
insert into morton_numbers_mask_02457 select n1.number, n2.number from      numbers(pow(2, 32)-64, 64) n1   cross join numbers(pow(2, 8)-64, 64) n2 ;
insert into morton_numbers_mask_02457 select n1.number, n2.number, n3.number from      numbers(pow(2, 16)-64, 64) n1          cross join numbers(pow(2, 16)-64, 64) n2   cross join numbers(pow(2, 8)-64, 64) n3 ;
insert into morton_numbers_mask_02457 select n1.number, n2.number, n3.number, n4.number from      numbers(256-16, 16) n1   cross join numbers(256-16, 16) n2   cross join numbers(256-16, 16) n3   cross join numbers(256-16, 16) n4 ;
insert into morton_numbers_mask_1_02457 select untuple(mortonDecode((1,2,1,2), mortonEncode((1,2,1,2), n1, n2, n3, n4))) from morton_numbers_mask_02457;
insert into morton_numbers_mask_2_02457 select untuple(mortonDecode((1,4), mortonEncode((1,4), n1, n2))) from morton_numbers_mask_02457;
insert into morton_numbers_mask_3_02457 select untuple(mortonDecode((1,1,2), mortonEncode((1,1,2), n1, n2, n3))) from morton_numbers_mask_02457;
INSERT INTO moving_sum_num  SELECT 'b' k, toDateTime('2001-02-03 00:00:00')+number as dt, number as v  FROM system.numbers  LIMIT 5  UNION ALL  SELECT 'a' k, toDateTime('2001-02-03 00:00:00')+number as dt, number as v  FROM system.numbers  LIMIT 5;
INSERT INTO moving_sum_num  SELECT 'b' k, toDateTime('2001-02-03 01:00:00')+number as dt, 5+number as v  FROM system.numbers  LIMIT 5;
INSERT INTO ms SELECT * FROM numbers(1000);
insert into mt select * from numbers(100);
INSERT INTO mt SELECT * FROM numbers(1000);
INSERT INTO mt VALUES ('2106-02-07', 'Hello'), ('1970-01-01', 'World');
INSERT INTO mt VALUES ('Hello, world', 1);
insert into mt values (1, '');
insert into mt values (1, 1), (2, 1);
insert into mt values (1, 2), (2, 2);
insert into mt values (3, '3'), (4, '4');
insert into mt values (42, 'mt');
INSERT INTO mt VALUES (52392, 1), (62677, 2);
insert into mt1 values (1);
INSERT INTO mt1 VALUES (1);
insert into mt1 values (2);
insert into mt1 values (3);
insert into mt1 values (4);
insert into mt1 values (6);
insert into mt1 values (7);
insert into mt1 values ([1]);
INSERT INTO mt2 VALUES (1);
insert into mt2 values (10);
INSERT INTO mt2 VALUES (2);
insert into mt2 values (20);
insert into mt2 values (30);
insert into mt2 values (40);
insert into mt2 values (60);
insert into mt2 values (70);
INSERT INTO mt_00160 (x) SELECT number AS x FROM system.numbers LIMIT 100000;
INSERT INTO mt_00160 (x, y, z) SELECT number AS x, number + 10 AS y, number / 2 AS z FROM system.numbers LIMIT 100000;
INSERT INTO mt_00168 (EventDate, UTCEventTime) VALUES ('2015-06-09', '2015-06-09 01:02:03');
INSERT INTO mt_00168_buffer (EventDate, UTCEventTime) VALUES ('2015-06-09', '2015-06-09 01:02:03');
INSERT INTO mt_01451 VALUES (0);
INSERT INTO mt_01451 VALUES (1);
INSERT INTO mt_01451 VALUES (2);
insert into mt_compact (a, s, n.x, lc) select number % 3, toString((number * 75434535 + 645645) % 2133443), [1, 2], toString(number) from numbers(5);
insert into mt_compact (a, s, n.y, lc) select number, toString((number * 2132214234 + 5434543) % 2133443), ['a', 'b', 'c'], number % 2 ? 'bar' : 'baz' from numbers(90);
INSERT INTO mt_compact SELECT toDate('2020-01-05'), number, toString(number) FROM numbers(1000);
INSERT INTO mt_compact SELECT toDate('2020-01-06'), number, toString(number) FROM numbers(1000);
insert into mt_compact_2 values (1, 'a');
INSERT INTO mt_match_pk VALUES ('a'), ('aaa'), ('aba'), ('bac'), ('acccca');
INSERT INTO mt_table VALUES (toDate('2018-01-01'), 1, 'old');
INSERT INTO mt_table VALUES (toDate('2019-01-02'), 1, 'Hello'), (toDate('2019-01-02'), 2, 'World');
INSERT INTO mt_table VALUES (toDate('2019-01-02'), 3, 'quick'), (toDate('2019-01-02'), 4, 'brown');
INSERT INTO mt_table VALUES (toDate('2019-02-03'), 5, '!'), (toDate('2019-02-03'), 6, '?');
INSERT INTO mt_table VALUES (toDate('2019-02-03'), 7, 'jump'), (toDate('2019-02-03'), 8, 'around');
INSERT INTO mt_with_pk (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 05:57:57'), ['a', 'a', 'a'], 14, [888, 999], ['Jack', 'Elvis']);
INSERT INTO mt_with_pk (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 07:57:57'), [4, 4, 4], 14, [111, 222], ['Lui', 'Dave']), (toDate('2018-10-01'), toDateTime('2018-10-01 08:57:57'), [5, 5, 5], 15, [333, 444], ['John', 'Mike']), (toDate('2018-10-01'), toDateTime('2018-10-01 09:57:57'), [6, 6, 6], 16, [555, 666, 777], ['Alex', 'Jim', 'Tom']);
INSERT INTO mt_with_pk (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 12:57:57'), [1, 1, 1], 11, [77], ['Joe']), (toDate('2018-10-01'), toDateTime('2018-10-01 16:57:57'), [2, 2, 2], 12, [88], ['Mark']), (toDate('2018-10-01'), toDateTime('2018-10-01 19:57:57'), [3, 3, 3], 13, [99], ['Robert']);
INSERT INTO mt_with_pk (d, x, y, z, `n.Age`, `n.Name`, w) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 03:57:57'), ['z', 'z', 'z'], 15, [1111, 2222], ['Garry', 'Ron'], 1);
INSERT INTO mt_with_small_granularity (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 07:57:57'), [4, 4, 4], 14, [111, 222], ['Lui', 'Dave']), (toDate('2018-10-01'), toDateTime('2018-10-01 08:57:57'), [5, 5, 5], 15, [333, 444], ['John', 'Mike']), (toDate('2018-10-01'), toDateTime('2018-10-01 09:57:57'), [6, 6, 6], 16, [555, 666, 777], ['Alex', 'Jim', 'Tom']);
INSERT INTO mt_with_small_granularity (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 12:57:57'), [1, 1, 1], 11, [77], ['Joe']), (toDate('2018-10-01'), toDateTime('2018-10-01 16:57:57'), [2, 2, 2], 12, [88], ['Mark']), (toDate('2018-10-01'), toDateTime('2018-10-01 19:57:57'), [3, 3, 3], 13, [99], ['Robert']);
INSERT INTO mt_without_pk (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 07:57:57'), [4, 4, 4], 14, [111, 222], ['Lui', 'Dave']), (toDate('2018-10-01'), toDateTime('2018-10-01 08:57:57'), [5, 5, 5], 15, [333, 444], ['John', 'Mike']), (toDate('2018-10-01'), toDateTime('2018-10-01 09:57:57'), [6, 6, 6], 16, [555, 666, 777], ['Alex', 'Jim', 'Tom']);
INSERT INTO mt_without_pk (d, x, y, z, `n.Age`, `n.Name`) VALUES (toDate('2018-10-01'), toDateTime('2018-10-01 12:57:57'), [1, 1, 1], 11, [77], ['Joe']), (toDate('2018-10-01'), toDateTime('2018-10-01 16:57:57'), [2, 2, 2], 12, [88], ['Mark']), (toDate('2018-10-01'), toDateTime('2018-10-01 19:57:57'), [3, 3, 3], 13, [99], ['Robert']);
INSERT INTO mt_without_pk VALUES (1, 2);
INSERT INTO mult_aggregation VALUES(1, 1);
INSERT INTO mult_aggregation VALUES(1, 3);
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 0, if(number % 2, -1, 1) from system.numbers limit 1000000;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 0, if(number % 2, -1, 1) from system.numbers limit 10;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 0, if(number % 2, 1, -1) from system.numbers limit 1000000;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 0, if(number % 2, 1, -1) from system.numbers limit 10;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 1, if(number % 2, -1, 1) from system.numbers limit 10;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 1, if(number % 3 = 0, 1, -1) from system.numbers limit 10;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 1, if(number % 3 = 1, 1, -1) from system.numbers limit 10;
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 1, if(number % 3 = 2, 1, -1) from system.numbers limit 10;
insert into mult_tab select '2018-01-31', number, number + 128, 0, if(number < 64, -1, 1) from system.numbers limit 128;
insert into mult_tab select '2018-01-31', number, number, 0, if(number < 64, 1, -1) from system.numbers limit 128;
INSERT INTO multi_if_check VALUES ('1');
INSERT INTO multi_if_check(col1) SELECT toUInt64((number * 37 + 13) % 3) AS col1 FROM system.numbers LIMIT 10;
INSERT INTO multi_if_check(col1) VALUES (1),(65),(208),(9),(154),(20),(191),(2),(66),(970),(56),(144),(49),(10317),(145),(21623),(225);
INSERT INTO multi_if_check(col1) VALUES (10398),(221),(975),(80),(162),(28051),(10838),(10765),(1058),(11464),(74),(21134),(21422),(10313),(28401),(20539);
INSERT INTO multi_if_check(col1) VALUES (10418),(235),(25),(179),(26030),(28381),(11091),(27398),(11108),(968),(10300),(11469),(35393),(10733),(11283),(11202);
INSERT INTO multi_if_check(col1) VALUES (10658),(11182),(11036),(194),(16),(54),(23),(172),(10748),(52),(63),(11282),(237),(55),(190);
INSERT INTO multi_if_check(col1) VALUES (10664),(966),(11256),(53),(10945),(10871),(158),(20544),(20540),(163),(10262),(11080),(0),(11159),(239);
INSERT INTO multi_if_check(col1) VALUES (10995),(11),(11143),(11212),(24893),(10318),(68),(21949),(28),(971),(153),(10689),(38),(11474),(11029);
INSERT INTO multi_if_check(col1) VALUES (11002),(99),(42),(142),(40),(20259),(15),(976),(11220),(193),(21),(3),(973),(35),(148),(10277),(10253);
INSERT INTO multi_if_check(col1) VALUES (11067),(21636),(965),(10761),(10324),(164),(977),(45),(10),(10944),(964),(20224),(20536),(102880),(33);
INSERT INTO multi_if_check(col1) VALUES (11139),(10347),(146),(11079),(961),(11231),(10358),(10653),(11358),(165),(11115),(1095),(960),(10992),(20221);
INSERT INTO multi_if_check(col1) VALUES (11162),(197),(4),(64),(17),(59),(51),(1091),(14),(13),(10645),(73),(157),(169),(43),(47),(11111);
INSERT INTO multi_if_check(col1) VALUES (11225),(20273),(213),(240),(12),(187),(29252);
INSERT INTO multi_if_check(col1) VALUES (11232),(10315),(78),(11217),(10373),(11514),(10343),(48),(22),(20197),(10367),(36),(11116),(195),(10274);
INSERT INTO multi_if_check(col1) VALUES (11453),(26),(147),(44),(19),(76),(29349),(10987),(28896),(75),(11168),(11084),(62),(46),(10747),(24);
INSERT INTO multi_if_check(col1) VALUES (115),(11069),(30),(11266),(10891),(11235),(112529),(206),(10393),(10712),(10649),(11164),(10511),(10295);
INSERT INTO multi_if_check(col1) VALUES (155),(972),(159),(959),(39),(50),(236),(969),(114678),(143),(37),(20167),(20086),(10536),(28948),(10355);
INSERT INTO multi_if_check(col1) VALUES (5),(10716),(102),(974),(10691),(102444),(11391),(10897),(10306),(10298),(10896),(21609),(118),(11148),(11451);
INSERT INTO multi_if_check(col1) VALUES (7),(192),(11119),(67),(6),(8),(10841),(141),(10951),(222),(10752),(10363),(10842),(24881),(11287),(198);
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(1, 'A', 'AB', 'ABC');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(10, 'J', 'JK', 'JKL');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(2, 'B', 'BC', 'BCD');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(3, 'C', 'CD', 'CDE');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(4, 'D', 'DE', 'DEF');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(5, 'E', 'EF', 'EFG');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(6, 'F', 'FG', 'FGH');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(7, 'G', 'GH', 'GHI');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(8, 'H', 'HI', 'HIJ');
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES(9, 'I', 'IJ', 'IJK');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(1, 'A', 'AB', 'ABC', 'ABCD', 'ABCDE', 'ABCDEF');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(10, 'J', 'JK', 'JKL', 'JKLM', 'JKLMN', 'JKLMNO');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(2, 'B', 'BC', 'BCD', 'BCDE', 'BCDEF', 'BCDEFG');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(3, 'C', 'CD', 'CDE', 'CDEF', 'CDEFG', 'CDEFGH');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(4, 'D', 'DE', 'DEF', 'DEFG', 'DEFGH', 'DEFGHI');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(5, 'E', 'EF', 'EFG', 'EFGH', 'EFGHI', 'EFGHIJ');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(6, 'F', 'FG', 'FGH', 'FGHI', 'FGHIJ', 'FGHIJK');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(7, 'G', 'GH', 'GHI', 'GHIJ', 'GHIJK', 'GHIJKL');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(8, 'H', 'HI', 'HIJ', 'HIJK', 'HIJKL', 'HIJKLM');
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES(9, 'I', 'IJ', 'IJK', 'IJKL', 'IJKLM', 'IJKLMN');
INSERT INTO multidimensional (t) VALUES (('Hello', ['World', NULL], (123, '2000-01-01')));
INSERT INTO multidimensional VALUES (1, [['Hello', 'World'], ['Goodbye'], []]);
INSERT INTO multidimensional VALUES (1, [['Hello', 'World'], ['Goodbye'], []], ('Hello', ['World', NULL], (123, '2000-01-01')));
INSERT INTO multiword_types(a) VALUES (1);
insert into mut values (1);
insert into mut values (1, 2, 3), (10, 20, 30);
INSERT INTO mutate_and_zero_copy_replication1 VALUES (1, '1', 1.0);
INSERT INTO mutation_1 VALUES (1, 'Hello');
INSERT INTO mutation_delete_null_rows VALUES ('2020-01-01', '', 2)('2020-01-02', 'aaa', 0);
INSERT INTO mutation_delete_null_rows VALUES ('2020-01-03', '', 2)('2020-01-04', '', 2)('2020-01-05', NULL, 2)('2020-01-06', 'aaa', 0)('2020-01-07', 'aaa', 0)('2020-01-08', 'aaa', NULL);
INSERT INTO mutation_table (id, price) VALUES (1, 100);
insert into mutation_table (name, dt) values ('car', '2020-02-28');
insert into mutation_table (name, dt) values ('car', Null);
insert into mutation_table (name, dt) values ('cat', Null);
insert into mutation_table (name, dt) values ('dog', '2020-03-28');
insert into mutation_table (name, dt) values (Null, '2020-08-05');
INSERT INTO mutation_table SELECT toDate('2019-10-01'), number, '42' FROM numbers(100);
INSERT INTO mutation_table SELECT toDate('2019-10-02'), number, 'Hello' FROM numbers(100);
INSERT INTO mutations_and_escaping_1648 (d, e) VALUES ('2018-01-01', 'foo');
INSERT INTO mutations_and_escaping_1648 (d, e) VALUES ('2018-01-02', 'bar');
INSERT INTO mutations_and_quorum1 VALUES ('2019-01-01', 'test1'), ('2019-02-01', 'test2'), ('2019-03-01', 'test3'), ('2019-04-01', 'test4'), ('2019-05-01', 'test1'), ('2019-06-01', 'test2'), ('2019-07-01', 'test3'), ('2019-08-01', 'test4'), ('2019-09-01', 'test1'), ('2019-10-01', 'test2'), ('2019-11-01', 'test3'), ('2019-12-01', 'test4');
INSERT INTO mv SELECT toString(number + 1000) FROM numbers(1000);
INSERT INTO mv_expand_test_table VALUES (1, ['Salmon', 'Steak','Chicken'],[1,2,3,4],[5,6,7,8]);
INSERT INTO mv_extra_columns_src VALUES (0, 0), (1, 1), (2, 2);
INSERT INTO mv_source VALUES (1),(2),(3);
INSERT INTO mv_source VALUES (1);
INSERT INTO my_table (values) VALUES ([12, 3, 1]);
INSERT INTO myTable (myDay, myOrder) VALUES ('2021-01-01', 1);
INSERT INTO myTable (myDay, myOrder) VALUES ('2021-01-02', 2);
INSERT INTO mytable (timestamp, insert_timestamp, key, value) VALUES (1900000010000, 1675159000000, 5, 555), (1900000010000, 1675159770000, 5, -1), (1900000020000, 1675159770000, 5, -0.0002), (1900000030000, 1675159770000, 5, 0), (1900000020000, 1675159700000, 5, 555), (1900000040000, 1675159770000, 5, 0.05), (1900000050000, 1675159770000, 5, 1);
INSERT INTO mytable VALUES (0);
INSERT INTO mytable VALUES (1);
INSERT INTO mytable VALUES (1, 2, 3);
INSERT INTO mytable VALUES (2);
INSERT INTO mytable VALUES (3);
INSERT INTO mytable VALUES (3, -100, 200, 10), (0, 0, 10, 4), (3, 0, 10, 3), (4.333, 1, 11, 3), (4.34, 1, 11, 3), (-7.6, -10, 0, 4), (-6, -5, -1, 2), (1, 3, 0, 1), (3, 2, 5, 0);
INSERT INTO mytable VALUES (4);
INSERT INTO mytable VALUES (5);
INSERT INTO mytable VALUES (6);
INSERT INTO mytable VALUES (7);
INSERT INTO mytable VALUES (8);
INSERT INTO mytable VALUES (9);
INSERT INTO mytable_local SELECT   toDateTime('2020-06-01 00:00:00') + toIntervalMinute(number) AS created,   toDate(created) AS eventday,   if((number % 100) > 50, 742522, number % 32141) AS user_id FROM numbers(100000);
insert into n values (null);
INSERT INTO needle_table select concat(toString(number + 30), '/tclwebkit', toString(number)) from system.numbers limit 15;
INSERT INTO neighbor_test VALUES (1, 'String 1', 'String 1'), (2, 'String 1', 'String 1'), (3, 'String 2', 'String 2');
INSERT INTO nested SELECT number, arrayMap(x -> (x, arrayMap(y -> (toString(y * x), y + x), range(number % 17))), range(number % 19)) FROM numbers(100000);
INSERT INTO nested SELECT number, number % 2, range(number % 10) FROM system.numbers LIMIT 100000;
INSERT INTO nested VALUES (1, [2, 3], ['Hello', 'World']);
INSERT INTO nested VALUES (4, [5], ['Goodbye']);
INSERT INTO nested VALUES (['GoodBye'], [['1', '2']], [['PU', 'US', 'OTHER']]);
INSERT INTO nested VALUES (['Hello', 'World'], [['a'], ['b', 'c']], [['PU', 'US'], ['OTHER']]);
INSERT INTO nested VALUES ([(1, 'q'), (2, 'w'), (3, 'e')], [(4, [('a', 5), ('s', 6), ('d', 7)])], [([(8, 9), (10, 11)], [('z', 'x'), ('c', 'v')])]);
INSERT INTO nested VALUES ([(12, 'qq')], [(4, []), (5, [('b', 6), ('n', 7)])], [([], []), ([(44, 55), (66, 77)], [])]);
INSERT INTO nested VALUES ([1, 2, 3], [4, 5, 6]);
INSERT INTO nested VALUES ([1, 2]);
INSERT INTO nested VALUES ([1, 2], ['hello', 'world']);
INSERT INTO nested1 (x, n.a, n.b) VALUES (1, ['Hello', 'World'], ['abc', 'def']), (2, [], []);
INSERT INTO nested2 SELECT * FROM nested1;
INSERT INTO nested_01800_log VALUES (['Hello', 'World'], [['a'], ['b', 'c']], [['PU', 'US'], ['OTHER']]);
INSERT INTO nested_01800_stripe_log VALUES (['Hello', 'World'], [['a'], ['b', 'c']], [['PU', 'US'], ['OTHER']]);
INSERT INTO nested_01800_tiny_log VALUES (['Hello', 'World'], [['a'], ['b', 'c']], [['PU', 'US'], ['OTHER']]);
INSERT INTO nested_alter VALUES ('2015-01-01', 6,38,'2014-07-15 13:26:50',[10,20,30],['asd','qwe','qwe'],['2000-01-01','2000-01-01','2000-01-03'],'100500');
insert into nested_map (k, `SomeMap.ID`, `SomeMap.Num`) values (0,['1'],[100]),(1,['1'],[100]),(2,['1'],[100]),(3,['1','2'],[100,150]);
insert into nested_map (k, `SomeMap.ID`, `SomeMap.Num`) values (0,['2'],[150]),(1,['1'],[150]),(2,['1','2'],[150,150]),(3,['1'],[-100]);
insert into nested_map (k, `SomeMap.ID`, `SomeMap.Num`) values (0,[1],[100]),(1,[1],[100]),(2,[1],[100]),(3,[1,2],[100,150]);
insert into nested_map (k, `SomeMap.ID`, `SomeMap.Num`) values (0,[2],[150]),(1,[1],[150]),(2,[1,2],[150,150]),(3,[1],[-100]);
insert into nested_map_explicit (k, `SomeIntExcluded`, `SomeMap.ID`, `SomeMap.Num`) values (0, 20, [1],[100]),(1, 20, [1],[100]),(2, 20, [1],[100]),(3, 20, [1,2],[100,150]);
insert into nested_map_explicit (k, `SomeIntExcluded`, `SomeMap.ID`, `SomeMap.Num`) values (0, 20, [2],[150]),(1, 20, [1],[150]),(2, 20, [1,2],[150,150]),(3, 20, [1],[-100]);
insert into nested_map_multiple_values values (0,[1],[100],[1.0]),(1,[1],[100],[1.0]),(2,[1],[100],[1.0]),(3,[1,2],[100,150],[1.0,1.5]);
insert into nested_map_multiple_values values (0,[2],[150],[-2.5]),(1,[1],[150],[-1.0]),(2,[1,2],[150,150],[2.5,3.5]),(3,[1],[-100],[-1]);
INSERT INTO nested_name_tuples VALUES(('asd', (12, 'ddd')));
insert into nested_not_a_map values (0,[1],[1],['2015-04-08'],[1],[200]);
insert into nested_not_a_map values (0,[1],[1],['2015-04-09'],[1],[100]);
insert into nested_smt values ('2023-10-05', 1, [1,2,3], [10,20,30]);
insert into nested_smt values ('2023-10-05', 2, [1,2,3], [1,1,1]);
INSERT INTO nested_test (x, `nest.col1`, `nest.col2`) values (1, ['a', 'b'], [3, 4]);
INSERT INTO nested_test VALUES ('Hello', [1,2], [10,20]), ('World', [3,4,5], [30,40,50]), ('Goodbye', [], []);
INSERT INTO new_table_test VALUES ('test');
INSERT INTO ngrambf_tab VALUES (1, 'Hello ClickHouse'), (2, 'Hello World'), (3, 'Good Weather'), (4, 'Say Hello'), (5, 'OLAP Database'), (6, 'World Champion');
INSERT INTO ngrambf_v1_hasany_test VALUES (1, ['this is a test', 'example.com']), (2, ['another test', 'another example']);
INSERT INTO nnd VALUES (1, toDateTime64('1979-12-12 21:21:21.123456788', 9, 'UTC'), 1.1), (2, toDateTime64('1979-12-12 21:21:21.123456789', 9, 'UTC'), 2.34), (3, toDateTime64('1979-12-12 21:21:21.127', 3, 'UTC'), 3.7);
INSERT INTO nnd VALUES (4, toDateTime64('1979-12-12 21:21:21.129', 3, 'UTC'), 2.1), (5, toDateTime('1979-12-12 21:21:22', 'UTC'), 1.3345), (6, toDateTime('1979-12-12 21:21:23', 'UTC'), 1.54), (7, toDateTime('1979-12-12 21:21:23', 'UTC'), 1.54);
INSERT INTO non_ascii VALUES ('hello', 'world');
INSERT INTO normal SELECT   number,   toDateTime('2021-12-06 00:00:00') + number,   number FROM numbers(100000);
INSERT INTO normalize_test (id, value) VALUES (1, 'ё');
INSERT INTO normalize_test (id, value) VALUES (10, 'Q̹̣̩̭̰̰̹̄ͬ̿͋̃ṷ̬̰ͥe̘͚͈̰̺̍͐s͎̜̖t͔̣̯̲̜̠ͣ̑ͨ̉̈̈o̲͙̺͊ͯͣ̐̋̂̔ ̳͉͍̒̂è̗ͥͯͨ̍ͮ͛ ̦̹̣̰̐̅̑͑̅̂t͙̭̻̖͛̾e̺͙ͣ͒̚ṣ̠͉͓͔̲̦̎t̖͖̝͓̣ͭ͑̈́̂ỏ̥͕͈͛̓ ̀ͦ̽ͅZͯ̑̎a͆l̻ͨ̋ͧͣͨͬg͉̙̟̾̅̾ͬo̠ͮ͒');
INSERT INTO normalize_test (id, value) VALUES (2, 'ё');
INSERT INTO normalize_test (id, value) VALUES (3, 'జ్ఞ‌ా');
INSERT INTO normalize_test (id, value) VALUES (4, '本気ですか');
INSERT INTO normalize_test (id, value) VALUES (5, 'ﷺ');
INSERT INTO normalize_test (id, value) VALUES (6, 'ᾂ');
INSERT INTO normalize_test (id, value) VALUES (7, 'ΐ');
INSERT INTO normalize_test (id, value) VALUES (8, 'שּׁ');
INSERT INTO normalize_test (id, value) VALUES (9, '𝅘𝅥𝅮');
INSERT INTO nORX SELECT 111, number, number FROM numbers(10000000);
INSERT INTO not_partitioned VALUES (1), (2), (3);
INSERT INTO not_partitioned VALUES (4), (5);
INSERT INTO not_partitioned_replica1_00502 VALUES (1), (2), (3);
INSERT INTO not_partitioned_replica1_00502 VALUES (4), (5);
INSERT INTO nr VALUES (2, NULL);
INSERT INTO nt (x) SELECT NULL as x FROM numbers(1000);
INSERT INTO nt (x) VALUES ('id'), (NULL), ('1');
INSERT INTO ntxy (x, y) VALUES ('id', 'id'), (NULL, NULL), ('1', '1');
INSERT INTO null_00117 (a) VALUES ([1,2]), ([3, 4]), ([ 5 ,6]), ([ 7 ,  8   ]), ([]), ([  ]);
INSERT INTO null_00117 (b) VALUES ([ 'Hello' , 'World' ]);
INSERT INTO null_00117 (c) VALUES ([  ]), ([ [ ] ]), ([[],[]]), ([['2015-01-01', '2015-01-02'], ['2015-01-03', '2015-01-04']]);
INSERT INTO null_00481 VALUES (1);
INSERT INTO null_00549 SELECT   k,   a,   b FROM (   SELECT     number AS k,     toString(number) AS a   FROM system.numbers   LIMIT 2 ) js1 ANY LEFT JOIN (   SELECT     number AS k,     toString(number) AS b   FROM system.numbers   LIMIT 1, 2 ) js2 USING (k) ORDER BY k ASC;
insert into null_01016 values (null);
INSERT INTO null_in VALUES (1, 1, 1, '1') (2, 2, NULL, NULL) (3, 3, 3, '3') (4, 4, NULL, NULL) (5, 5, 5, '5');
INSERT INTO null_in_1 VALUES (1, NULL) (0, NULL) (NULL, NULL) (NULL, 1) (NULL, 0) (0, 0) (1, 1);
INSERT INTO null_in_1 VALUES (1, NULL), (2, 2), (3, NULL), (4, 4), (5, NULL);
insert into null_in__fuzz_6 select * from generateRandom() limit 1;
INSERT INTO null_in_subquery SELECT number % 3, number, number FROM system.numbers LIMIT 99999;
INSERT INTO null_in_subquery VALUES (0, 123456780, NULL);
INSERT INTO null_in_subquery VALUES (1, 123456781, NULL);
INSERT INTO null_in_tuple VALUES (1, 1, (1, '1')) (2, 2, (2, NULL)) (3, 3, (NULL, '3')) (4, 4, (NULL, NULL)) SET transform_null_in = 0;
INSERT INTO null_issue_3767 (value) VALUES ('A String'), (NULL);
INSERT INTO null_lc_set_index VALUES (1550883010, 'subscribe', 'alice');
INSERT INTO null_lc_set_index VALUES (1550883020, 'follow', 'bob');
INSERT INTO null_subcolumns VALUES (1, 'foo') (2, NULL) (3, NULL) (4, 'abc');
INSERT INTO null_table_buffer VALUES (1);
INSERT INTO points_01862 VALUES ( 0.0, -1.1);
INSERT INTO points_01862 VALUES ( 0.1, 0.0);
INSERT INTO points_01862 VALUES ( 3.0, 3.0);
INSERT INTO points_01862 VALUES (-0.1, 0.0);
insert into polygon_01302 values ([[[(23.725750, 37.971536)]]], [[[(4.3826169, 50.8119483)]]]);
INSERT INTO polygon_dictionary_array_source_table VALUES ([[[(0, 0), (0, 1), (1, 1), (1, 0)]]], [0, 1, 2]);
INSERT INTO polygons VALUES (1, (-9, 0), [[(0, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (6, 4), (6, 6), (4, 6)]]);
INSERT INTO polygons VALUES (1, [(0, 0), (10, 0), (10, 10), (0, 10)]);
INSERT INTO polygons VALUES (1, [[(0, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (6, 4), (6, 6), (4, 6)]]);
INSERT INTO polygons VALUES (10, (4, 4), [(-5, -5), (5, -5), (5, 5), (-5, 5)]);
INSERT INTO polygons VALUES (10, (4, 4), [[(-5, -5), (5, -5), (5, 5), (-5, 5)], [(-1, -1), (1, -1), (1, 1), (-1, 1)]]);
INSERT INTO polygons VALUES (11, (9, 9), [(0, 0), (10, 0), (10, 10), (0, 10)]);
INSERT INTO polygons VALUES (11, (9, 9), [[(0, 0), (10, 0), (10, 10), (0, 10)], [(4, 4), (6, 4), (6, 6), (4, 6)]]);
INSERT INTO polygons_01862 VALUES ([[[(-1, -1), (1, -1), (1, -3), (-1, -3)]]], 'Click West');
INSERT INTO polygons_01862 VALUES ([[[(-1, 1), (1, 1), (1, 3), (-1, 3)]]], 'Click North');
INSERT INTO polygons_01862 VALUES ([[[(-3, 1), (-3, -1), (0, -1), (0, 1)]]], 'Click South');
INSERT INTO polygons_01862 VALUES ([[[(3, 1), (0, 1), (0, -1), (3, -1)]]], 'Click East');
INSERT INTO polygons_test_table VALUES ([[[(3, 1), (0, 1), (0, -1), (3, -1)]]], 'Value');
INSERT INTO post_metrics SELECT   repeat('a', (number % 10) + 1),   toString(number),   now() - toIntervalMinute(number),   number * 100,   number * 10,   now() FROM numbers(100000);
INSERT INTO posts SELECT   repeat('a', (number % 10) + 1),   toString(number),   number % 10,   number,   now() - toIntervalMinute(number),   now() FROM numbers(100000);
insert into pr_t select number % 1000, number % 1000 from numbers_mt(1e6);
INSERT INTO predicate_table VALUES (0), (1);
INSERT INTO prefetched_table SELECT rand(), randomString(5) from numbers(1000);
INSERT INTO prewhere SELECT 0, randomPrintableASCII(10000) FROM numbers(10000);
INSERT INTO prewhere VALUES ('2015-01-01', 'hello', 'world');
INSERT INTO prewhere VALUES ('2015-01-01', 'hello1', 'xxx', 'world1');
insert into prewhere_alias values (1, 1);
insert into prewhere_alias values(1, 1);
insert into prewhere_column_missing (x) values (0);
INSERT INTO prewhere_defaults (x) VALUES (1);
INSERT INTO prewhere_defaults (x) VALUES (2);
INSERT INTO prewhere_int128 VALUES (1);
INSERT INTO prewhere_int256 VALUES (1);
INSERT INTO prewhere_move SELECT number, number, number, number FROM numbers(1000);
INSERT INTO prewhere_move SELECT number, toString(number) FROM numbers(1000);
INSERT INTO prewhere_move_select_final SELECT number, number * 2, number * 3 FROM numbers(1000);
INSERT INTO prewhere_uint128 VALUES (1);
INSERT INTO prewhere_uint256 VALUES (1);
INSERT INTO primary_key (x) VALUES (1), (2), (3);
INSERT INTO primary_key (x) VALUES (1), (3), (2);
INSERT INTO primary_key (x) VALUES (2), (1), (3);
INSERT INTO primary_key (x) VALUES (2), (3), (1);
INSERT INTO quorum1 VALUES (6, '2020-12-16');
INSERT INTO quorum2 VALUES (1, '2018-11-15');
INSERT INTO quorum2 VALUES (4, toDate('2018-12-16'));
INSERT INTO quorum2 VALUES (4, toDate('2020-12-16'));
INSERT INTO r (a, c) VALUES ('a', ('b', 'c')), ('x', ('y', 'z'));
INSERT INTO r (a, c) VALUES ('a', ['b', 'c']), ('x', ['y', 'z']);
insert into r select number%100 x,    'x' a,    quantilesTimingState(0.5, 0.95, 0.99)(number::Int64) q,    sum(1) s from numbers(1000) group by x,a;
INSERT INTO r SELECT number, toString(number) FROM numbers(2, 8);
INSERT INTO r VALUES (NULL, NULL);
INSERT INTO r1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (4, '4');
INSERT INTO r1 VALUES ('Hello, world');
INSERT INTO r1 VALUES(1, '1');
INSERT INTO r1 VALUES(2, '2');
INSERT INTO r1 VALUES(3, '3');
INSERT INTO r2 VALUES ('Hello, world');
INSERT INTO r2 VALUES(2, '2');
INSERT INTO r2 VALUES(3, '3');
INSERT INTO r_prop_table1 (column_codec, column_comment, column_ttl) VALUES ('rts', now() - INTERVAL 1 YEAR, 3);
INSERT INTO r_prop_table1 (column_codec, column_comment, column_ttl) VALUES ('str', toDate('2100-01-01'), 1);
INSERT INTO r_prop_table1 (column_codec, column_comment, column_ttl) VALUES ('tsr', now(), 2);
insert into radacct values (1, 'a', 'b', 'c', 'd', 'e', 2, 'a', 'b', 'c', 'd', 'e', 'f', 3, 4, 5, 6, 7, 'a', 'Stop', 'c', 'd', 'e', 'f', 'g', 'h', '2018-10-10 15:54:21', '2018-10-10 15:54:21', 8, 'a', 9, 10, 'a', 'b', '2018-10-10 15:54:21', 'a', 'b', 11, 12, '2018-10-10', 'a', 'b', 'c', 'd', 'e');
INSERT INTO random_mt VALUES (1, 'Hello');
INSERT INTO range_dictionary_array_source_table VALUES(1, toDate('2019-05-05'), toDate('2019-05-20'), [0, 1, 2]);
INSERT INTO range_dictionary_nullable_default_source_table VALUES (2, 2), (3, NULL);
INSERT INTO range_dictionary_nullable_source_table VALUES (0, toDate('2019-05-05'), toDate('2019-05-20'), 0), (1, toDate('2019-05-05'), toDate('2019-05-20'), NULL);
INSERT INTO range_key_dictionary_source_table VALUES(1, toDate('2019-05-20'), toDate('2019-05-20'), 'First', 'First');
INSERT INTO range_key_dictionary_source_table VALUES(2, toDate('2019-05-20'), toDate('2019-05-20'), 'Second', NULL);
INSERT INTO range_key_dictionary_source_table VALUES(3, toDate('2019-05-20'), toDate('2019-05-20'), 'Third', 'Third');
INSERT INTO range_key_dictionary_source_table__fuzz_323 FORMAT Values (1, toDate('2019-05-20'), toDate('2019-05-20'), 'First', 'First');
INSERT INTO range_key_source_table_01862 VALUES (1, 'First', today(), today());
insert into rate_test values (0,1000),(1,1001),(2,1002),(3,1003),(4,1004),(5,1005),(6,1006),(7,1007),(8,1008);
insert into rate_test2(timestamp, event) values ('2018-01-01 01:01:01',1001),('2018-01-01 01:01:02',1002),('2018-01-01 01:01:03',1003),('2018-01-01 01:01:04',1004),('2018-01-01 01:01:05',1005),('2018-01-01 01:01:06',1006),('2018-01-01 01:01:07',1007),('2018-01-01 01:01:08',1008);
INSERT INTO raw VALUES ('3', '3'), ('42', '42');
INSERT INTO rdb   SELECT     toUInt32(sipHash64(number) % 10) as key,     [key, key+1] as value,     ('val2' || toString(key)) as value2   FROM numbers_mt(10);
INSERT INTO rdb VALUES (1, 'a'), (2, 'b'), (3, 'c'), (4, 'd'), (5, 'e');
INSERT INTO rdst VALUES (0, '1', 2);
INSERT INTO rdst VALUES (1, '1', 2), (1, '2', 2);
INSERT INTO rdst VALUES (2, '1', 2);
INSERT INTO rdst VALUES (3, '1', 2), (3, '2', 2);
INSERT INTO readonly00542 (ID)   SELECT CAST(number * 10 AS Int) FROM system.numbers LIMIT 10;
INSERT INTO readonly00542 (ID)   VALUES (1), (2), (3), (4), (5);
insert into realtimebuff (amount,transID,userID,appID,appName,transType,orderSource,nau,fau,transactionType,supplier,fMerchant,bankConnCode,reqDate) values (100, '200312000295032','200223000028708','14', 'Data','1', '20','1', '0','123','abc', '1234a','ZPVBIDV', 1598256583);
INSERT INTO recompression_table SELECT now() - INTERVAL 2 MONTH, 2, toString(number) from numbers(1000, 1000);
INSERT INTO recompression_table SELECT now() - INTERVAL 2 YEAR, 3, toString(number) from numbers(2000, 1000);
INSERT INTO recompression_table SELECT now(), 1, toString(number) from numbers(1000);
INSERT INTO recompression_table_compact SELECT now() - INTERVAL 2 MONTH, 2, toString(number) from numbers(1000, 1000);
INSERT INTO recompression_table_compact SELECT now() - INTERVAL 2 YEAR, 3, toString(number) from numbers(2000, 1000);
INSERT INTO recompression_table_compact SELECT now(), 1, toString(number) from numbers(1000);
INSERT INTO regex_test_table VALUES ('\d[a-z]');
INSERT INTO regexp_dictionary_source_table VALUES (1, 0, '(\d+)/tclwebkit', ['name', 'version'], ['Android', '$1']);
INSERT INTO regexp_dictionary_source_table VALUES (1, 2, 'Linux/(\d+[\.\d]*).+tlinux', ['name', 'version'], ['TencentOS', '\1']) INSERT INTO regexp_dictionary_source_table VALUES (2, 3, '(\d+)/tclwebkit(\d+[\.\d]*)', ['name', 'version', 'comment'], ['Android', '$1', 'test $1 and $2']) INSERT INTO regexp_dictionary_source_table VALUES (3, 1, '(\d+)/tclwebkit(\d+[\.\d]*)', ['name', 'version', 'comment'], ['Android', '$1', 'test $1 and $2']) SYSTEM RELOAD dictionary regexp_dict1;
INSERT INTO regexp_dictionary_source_table VALUES (3, 1, '33/tclwebkit', ['name'], ['Android1']);
INSERT INTO regexp_dictionary_source_table VALUES (6, 2, '3[12]/tclwebkit', ['version'], ['10']) SYSTEM RELOAD dictionary regexp_dict1;
INSERT INTO regression_for_in_operator SELECT today(), toString(number % 10), number FROM system.numbers limit 1000;
insert into regular_mt_table values ('abc');
INSERT INTO remote_test SELECT toString(number) AS uid, number % 3 AS its, toString(number % 3) AS action_code, '2000-01-01' FROM system.numbers LIMIT 10000;
INSERT INTO rename1 VALUES (0, 1, 0);
INSERT INTO rename1 VALUES (0, 1, 1);
INSERT INTO rename1 VALUES (0, 1, 2);
INSERT INTO rename_table VALUES (1, 2, 3);
INSERT INTO rename_table VALUES (4, 5, 6);
INSERT INTO rename_table_multiple VALUES (1, 2, 3);
INSERT INTO rename_table_multiple VALUES (4, '5', 6);
INSERT INTO rename_table_multiple VALUES (7, '8', 9, 10);
INSERT INTO rename_table_multiple_compact VALUES (1, 2, 3);
INSERT INTO rename_table_multiple_compact VALUES (4, '5', 6);
INSERT INTO rename_table_multiple_compact VALUES (7, '8', 9, 10);
INSERT INTO rename_table_polymorphic VALUES (1, 2, 3);
INSERT INTO rename_table_polymorphic VALUES (4, 5, 6);
INSERT INTO rep_data VALUES (1, now());
insert into rep_fsync_r1 values (1);
insert into rep_fsync_r2 values (2);
INSERT INTO replace VALUES ('2016-06-02', 1, 'version 0', 0);
INSERT INTO replace VALUES ('2016-06-02', 1, 'version 1', 1);
INSERT INTO replace VALUES ('2016-06-02', 2, 'version 1', 1);
INSERT INTO replace_partition_source VALUES (1);
INSERT INTO replaceall (fs) VALUES ('54db0d43009d\0\0\0\0'), ('fe2b58224766cf10'), ('54db0d43009d\0\0\0\0'), ('fe2b58224766cf10');
INSERT INTO replaceall VALUES ('bao');
INSERT INTO replaceall VALUES ('bar');
INSERT INTO replaceall VALUES ('boa');
INSERT INTO replaceall VALUES ('foo');
INSERT INTO replacing VALUES ('2017-10-23', 1, 'a');
INSERT INTO replacing VALUES ('2017-10-23', 1, 'b');
INSERT INTO replacing VALUES ('2017-10-23', 1, 'c');
insert into replacing values (1,'1970-01-01 08:25:46.300800000','a');
insert into replacing values (1,'1970-01-01 08:25:46.300800002','a2');
insert into replacing values (1,'1970-01-01 08:25:46.300800003','a1');
insert into replacing values (2,'1970-01-01 08:25:46.300800002','b');
insert into replacing values (2,'1970-01-01 08:25:46.300800004','b1');
insert into replacing values (2,'1970-01-01 08:25:46.300800005','a1');
insert into replacing values (3,'1970-01-01 08:25:46.300800005','c1');
insert into replacing_m3 values (-1,1);
insert into replacing_m3 values (-2,2);
insert into replacing_m3 values (0,0);
INSERT INTO replacing_merge_tree VALUES (1, '2020-01-01'), (2, '2020-01-02'), (1, '2020-01-01'), (2, '2020-01-02');
insert into replacing_mt values ('abc');
INSERT INTO replacing_table SELECT 100, number, number from numbers(16);
INSERT INTO replacing_table SELECT if(number == 8192, 8191, number), 1 FROM numbers(8193);
INSERT INTO replacing_table SELECT number, number, number from numbers(16);
INSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (0);
INSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (1);
INSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (2);
INSERT INTO replica2 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (1);
INSERT INTO replica2 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (2);
INSERT INTO replicated_aggregating_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_aggregating_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_alter1 VALUES ('2015-01-01', 10, 42);
INSERT INTO replicated_alter1 VALUES ('2015-01-01', 6,38,'2014-07-15 13:26:50',[10,20,30],['asd','qwe','qwe'],['2000-01-01','2000-01-01','2000-01-03'],'100500');
INSERT INTO replicated_alter1 VALUES ('2015-01-01', 7, 39, '2014-07-14 13:26:50', [10,20,30], ['120','130','140'],['2000-01-01','2000-01-01','2000-01-03']);
INSERT INTO replicated_alter1 VALUES ('2015-01-01', 8, 40, '2012-12-12 12:12:12', [1,2,3], ['12','13','14']);
INSERT INTO replicated_alter1 VALUES ('2015-01-01', 9, 41, '1992-01-01 08:00:00');
INSERT INTO replicated_collapsing VALUES ('2017-10-23', 1, -1), ('2017-10-23', 2, 1);
INSERT INTO replicated_collapsing VALUES ('2017-10-23', 1, 1);
INSERT INTO replicated_collapsing_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_collapsing_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_constraints1 VALUES (1, 2);
INSERT INTO replicated_constraints1 VALUES (10, 10);
INSERT INTO replicated_constraints1 VALUES (10, 11);
INSERT INTO replicated_constraints2 VALUES (10, 10);
INSERT INTO replicated_constraints2 VALUES (3, 4);
INSERT INTO replicated_deduplicate_by_columns_r2 VALUES (1, 1001), (2, 2002), (3, 1003), (4, 1004), (5, 2005), (5, 2005);
INSERT INTO replicated_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_merge_tree_pk_sql VALUES (1, 'a');
INSERT INTO replicated_merge_tree_pk_sql VALUES (1, 'c');
INSERT INTO replicated_merge_tree_pk_sql VALUES (2, 'b');
INSERT INTO replicated_merge_tree_pk_sql VALUES (2, 'd', 555);
INSERT INTO replicated_merge_tree_pk_sql VALUES (2, 'e', 555);
INSERT INTO replicated_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_mt_without_pk VALUES (1, 2);
INSERT INTO replicated_report VALUES ('IU', 'lada', '2101', toDateTime('1970-04-19 15:00:00'));
INSERT INTO replicated_report VALUES ('PS', 'jeep', 'Grand Cherokee', toDateTime('2005-10-03 15:00:00'));
INSERT INTO replicated_summing_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_summing_merge_tree_with_list_of_columns_to_sum VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_summing_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_summing_merge_tree_with_sampling_with_list_of_columns_to_sum VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_table_detach_all1 VALUES (1, '1'), (2, '2');
INSERT INTO replicated_table_for_alter1 VALUES (3, '3'), (4, '4');
INSERT INTO replicated_table_for_alter2 VALUES (1, '1'), (2, '2');
INSERT INTO replicated_table_for_alter2 VALUES (3, '1'), (4, '2');
INSERT INTO replicated_table_r1 select number, toString(number) FROM numbers(100);
INSERT INTO replicated_truncate1 VALUES ('2015-01-01', 10, 42);
INSERT INTO replicated_versioned_collapsing VALUES ('2017-10-23', 1, -1, 0), ('2017-10-23', 2, 1, 0);
INSERT INTO replicated_versioned_collapsing VALUES ('2017-10-23', 1, -1, 1), ('2017-10-23', 2, 1, 2);
INSERT INTO replicated_versioned_collapsing VALUES ('2017-10-23', 1, 1, 0);
INSERT INTO replicated_versioned_collapsing_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_versioned_collapsing_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO replicated_with_sampling VALUES (1), (128);
INSERT INTO report VALUES ('IU', 'lada', '2101', toDateTime('1970-04-19 15:00:00'));
INSERT INTO report VALUES ('PS', 'jeep', 'Grand Cherokee', toDateTime('2005-10-03 15:00:00'));
INSERT INTO report(id,event_date,priority,description) VALUES (1, '2015-01-01', 1, 'foo')(2, '2015-02-01', 2, 'bar')(3, '2015-03-01', 3, 'foo')(4, '2015-04-01', 4, 'bar')(5, '2015-05-01', 5, 'foo');
INSERT INTO report1(id,event_date,priority,description) VALUES (1, '2015-01-01', 1, 'foo')(2, '2015-02-01', 2, 'bar')(3, '2015-03-01', 3, 'foo')(4, '2015-04-01', 4, 'bar')(5, '2015-05-01', 5, 'foo');
INSERT INTO report2(id,event_date,priority,description) VALUES (1, '2016-01-01', 6, 'bar')(2, '2016-02-01', 7, 'foo')(3, '2016-03-01', 8, 'bar')(4, '2016-04-01', 9, 'foo')(5, '2016-05-01', 10, 'bar');
INSERT INTO requests (event_time) VALUES ('2010-01-01 00:00:00');
INSERT INTO retention_test SELECT '2018-08-06', number FROM numbers(8);
INSERT INTO retention_test SELECT '2018-08-06', number FROM numbers(80);
INSERT INTO retention_test SELECT '2018-08-07', number FROM numbers(50);
INSERT INTO retention_test SELECT '2018-08-07', number FROM numbers(6);
INSERT INTO retention_test SELECT '2018-08-08', number FROM numbers(60);
INSERT INTO retention_test SELECT '2018-08-08', number FROM numbers(7);
insert into rhs values ('abc');
INSERT INTO right SELECT number, toString(number) FROM numbers(23124707);
INSERT INTO right_join (x, s) VALUES (2, 'b1'), (2, 'b2'), (4, 'b3'), (4, 'b4'), (4, 'b5'), (5, 'b6');
insert into right_table select toDate('2020-01-01') + number, number, number / 2 from numbers(10);
insert into right_table values (1,'a');
insert into right_table values (1,'b');
insert into right_table values (1,'c');
INSERT INTO right_table VALUES(1, 'hello'), (2, 'WORLD');
insert into right_table_local values (1,'a');
insert into right_table_local values (1,'b');
insert into right_table_local values (1,'c');
insert into rmt select * from numbers(10) settings max_block_size=1;
insert into rmt select number, number from numbers(50);
insert into rmt values (1);
insert into rmt values (1, '1'), (2, '2');
insert into rmt values (1, 2);
insert into rmt values (1, 3);
insert into rmt values (1, 4);
insert into rmt values (1, 5);
insert into rmt values (1, 6);
insert into rmt values (1, 7);
insert into rmt values (1, 8);
insert into rmt values (1, 9);
insert into rmt values (1,'1'), (2, '2');
insert into rmt(n, m) values (0, 42);
insert into rmt(n, m) values (1, 42);
insert into rmt(n, m) values (2, 42);
insert into rmt(n, m) values (3, 42);
insert into rmt(n, m) values (4, 42);
insert into rmt(n, m) values (5, 42);
insert into rmt(n, m) values (6, 42);
insert into rmt(n, m) values (7, 42);
insert into rmt(n, m) values (8, 42);
insert into rmt(n, m) values (9, 42);
insert into rmt1 values (1);
insert into rmt1 values (1, 1, 1);
insert into rmt1 values (123);
insert into rmt1 values (2);
insert into rmt1 values (2, 2, 2);
insert into rmt1 values (200);
insert into rmt1 values (4);
insert into rmt1 values (5);
insert into rmt1 values (now(), arrayJoin([1, 2]));
insert into rmt1 values (now(), rand());
insert into rmt1 values (rand(), rand(), now(), now());
insert into rmt1 values(1, 1, 1);
insert into rmt1 values(3, 3, 3);
insert into rmt1 values(5, 5, 5);
insert into rmt2 values (1);
insert into rmt2 values (100);
insert into rmt2 values (2);
insert into rmt2 values (200);
insert into rmt2 values (3);
insert into rmt2 values (30);
insert into rmt2 values (4);
insert into rmt2 values (40);
insert into rmt2 values (5);
insert into rmt2 values (50);
insert into rmt2 values (500);
insert into rmt2 values (600);
insert into rmt2 values(2, 2, 2);
insert into rmt2 values(4, 4, 4);
insert into rmt3 values (1);
insert into rmt3 values (2);
insert into rmt3 values (3);
INSERT INTO rollup VALUES ('a', 1, 10), ('a', 1, 15), ('a', 2, 20);
INSERT INTO rollup VALUES ('a', 2, 25), ('b', 1, 10), ('b', 1, 5);
INSERT INTO rollup VALUES ('b', 2, 20), ('b', 2, 15);
INSERT INTO rollup_having VALUES ('a', 'b');
INSERT INTO rollup_having VALUES ('a', NULL);
INSERT INTO rollup_having VALUES (NULL, NULL);
INSERT INTO row_level_policy_prewhere(y, x) VALUES ('A',1), ('B',2), ('C',3);
INSERT INTO runningConcurrency_test VALUES ('2020-12-01 00:00:00', '2020-12-01 00:59:59'), ('2020-12-01 00:30:00', '2020-12-01 00:59:59'), ('2020-12-01 00:40:00', '2020-12-01 01:30:30'), ('2020-12-01 01:10:00', '2020-12-01 01:30:30'), ('2020-12-01 01:50:00', '2020-12-01 01:59:59');
INSERT INTO runningConcurrency_test VALUES ('2020-12-01 00:00:00.000', '2020-12-01 00:00:00.100'), ('2020-12-01 00:00:00.010', '2020-12-01 00:00:00.100'), ('2020-12-01 00:00:00.020', '2020-12-01 00:00:00.200'), ('2020-12-01 00:00:00.150', '2020-12-01 00:00:00.200'), ('2020-12-01 00:00:00.250', '2020-12-01 00:00:00.300');
INSERT INTO runningConcurrency_test VALUES ('2020-12-01', '2020-12-10'), ('2020-12-02', '2020-12-10'), ('2020-12-03', '2020-12-12'), ('2020-12-10', '2020-12-12'), ('2020-12-13', '2020-12-20');
INSERT INTO s VALUES ('a', 0, 0);
insert into s values (1,1);
INSERT INTO s VALUES(1, 'OK');
insert into s values(2,2,'a');
INSERT INTO s2_indexes VALUES (10173921221664598133, 5.161979, -46.718242);
INSERT INTO s2_indexes VALUES (10654167528317613967, -64.364998, -13.206226);
INSERT INTO s2_indexes VALUES (10670400906708524495, -61.761938, -24.969589);
INSERT INTO s2_indexes VALUES (10868726821406046149, -79.245460, -22.940849);
INSERT INTO s2_indexes VALUES (12793606480989360601, 74.006104, -68.321240);
INSERT INTO s2_indexes VALUES (13202270384266773545, 10.610774, -64.184103);
INSERT INTO s2_indexes VALUES (13606307743304496111, -89.810962, -57.013984);
INSERT INTO s2_indexes VALUES (145638248314527629, -19.826140, -41.192912);
INSERT INTO s2_indexes VALUES (1723620528513492581, 40.768274, 2.853563);
INSERT INTO s2_indexes VALUES (1913723177026859705, 8.774109, -3.271374);
INSERT INTO s2_indexes VALUES (2414200527355011659, 54.724353, -19.210608);
INSERT INTO s2_indexes VALUES (2446780491369950853, 49.94229, -18.633856);
INSERT INTO s2_indexes VALUES (4590287096029015693, 51.390374, 29.368252);
INSERT INTO s2_indexes VALUES (525948609053546189, -41.564128, -16.777073);
INSERT INTO s2_indexes VALUES (6317132534461540391, -165.907973, 54.205178);
INSERT INTO s2_indexes VALUES (6944470717485986643, 140.428834, 28.399755);
INSERT INTO s2_indexes VALUES (7280210779810727639, 170.145748, 7.606449);
INSERT INTO s2_indexes VALUES (8094352344009072761,-170.423649, -10.102188);
INSERT INTO s2_indexes VALUES (8295275405228383207, -168.258979, -38.271170);
INSERT INTO s64 VALUES (-1);
INSERT INTO s64 VALUES (1);
insert into s_00725_2 values(1,1);
insert into s_00725_4 values(1,1,'a');
insert into s_00818 values(1,1,'a');
INSERT INTO sales VALUES ('2021-01-01',1,1,10),('2021-01-02',2,2,20);
INSERT INTO sample_00276 (x) SELECT toUInt16(number) AS x FROM system.numbers LIMIT 65536;
INSERT INTO sample_00276 (x) SELECT toUInt8(number) AS x FROM system.numbers LIMIT 256;
INSERT INTO sample_00314_1 (x) SELECT number AS x FROM system.numbers LIMIT 1000000;
INSERT INTO sample_00314_2 (x) SELECT number AS x FROM system.numbers LIMIT 2000000;
INSERT INTO sample_00579_1 (x) SELECT number AS x FROM system.numbers LIMIT 1000;
INSERT INTO sample_00579_2 (x) SELECT number AS x FROM system.numbers LIMIT 2000;
INSERT INTO sample_00632 (x) SELECT toUInt16(number) AS x FROM system.numbers LIMIT 65536;
insert into sample_final select number / (8192 * 4), toDate('2019-01-01'), toDateTime('2019-01-01 00:00:01') + number, number / (8192 * 2), number % 3 = 1 ? -1 : 1 from numbers(1000000);
INSERT INTO sample_merge_tree VALUES (toDateTime('2018-10-31 05:05:00'), 0), (toDateTime('2018-10-31 06:06:00'), 10), (toDateTime('2018-10-28 10:00:00'), 20);
insert into sample_prewhere values ('2019-01-01', 1, toDateTime('2019-07-20 00:00:02'));
insert into sample_prewhere values ('2019-01-01', 2, toDateTime('2019-07-20 00:00:01'));
insert into sample_prewhere values ('2019-01-02', 3, toDateTime('2019-07-20 00:00:03'));
INSERT INTO samples VALUES (1, 1)(2, 2)(3, 3)(4, 4)(5, 5);
INSERT INTO segfault SELECT * FROM generateRandom('id UInt32, uuid UUID, c Array(UInt32)', 10, 5, 5) LIMIT 100;
INSERT INTO segfault_table VALUES (1111), (2222);
INSERT INTO select_final SELECT toDate('2000-01-01'), number + 1, '' FROM numbers(2);
INSERT INTO select_final SELECT toDate('2000-01-01'), number, '' FROM numbers(2);
INSERT INTO select_final SELECT toDate('2000-01-01'), number, '' FROM numbers(500000);
INSERT INTO select_final SELECT toDate('2000-01-01'), number, 'updated' FROM numbers(2);
INSERT INTO select_final SELECT toDate('2020-01-01'), number + 1, '' FROM numbers(2);
INSERT INTO select_final SELECT toDate('2020-01-01'), number, '' FROM numbers(2);
INSERT INTO select_final SELECT toDate('2020-01-01'), number, 'updated' FROM numbers(2);
INSERT INTO select_in_test VALUES (-1), (2), (3);
INSERT INTO select_in_test VALUES (1), (2), (3);
INSERT INTO semi_left_join (x, s) VALUES (2, 'b1'), (2, 'b2'), (4, 'b3'), (4, 'b4'), (4, 'b5'), (5, 'b6');
INSERT INTO semi_right_join (x, s) VALUES (2, 'b1'), (2, 'b2'), (4, 'b3'), (4, 'b4'), (4, 'b5'), (5, 'b6');
INSERT INTO sensor_value (received_at, device_id, sensor_id, value, low_warning, low_critical, high_warning, high_critical) VALUES ('2018-12-18 00:16:07', 'a4d92414-09aa-4dbd-80b2-124ddaacf333', 'ed87e57c-9331-462a-80b4-9f0c005e88c8', '0.4400', '-10000000.0000', '-10000000.0000', '10000000.0000', '10000000.0000');
INSERT INTO sequence SELECT 1, 'D', 1e14;
INSERT INTO sequence SELECT 1, number = 0 ? 'A' : (number < 1000000 ? 'B' : 'C'), number FROM numbers(1000001);
insert into sequence_test values (0,0),(1,0),(2,0),(3,0),(4,1),(5,2),(6,0),(7,0),(8,0),(9,0),(10,1),(11,1);
INSERT INTO series(i, x, y) VALUES (1, 5.6,-4.4),(2, -9.6,3),(3, -1.3,-4),(4, 5.3,9.7),(5, 4.4,0.037),(6, -8.6,-7.8),(7, 5.1,9.3),(8, 7.9,-3.6),(9, -8.2,0.62),(10, -3,7.3);
INSERT INTO series(i, x_value, y_value) VALUES (1, 5.6,-4.4),(2, -9.6,3),(3, -1.3,-4),(4, 5.3,9.7),(5, 4.4,0.037),(6, -8.6,-7.8),(7, 5.1,9.3),(8, 7.9,-3.6),(9, -8.2,0.62),(10, -3,7.3);
INSERT INTO series__fuzz_35(i, x_value, y_value) VALUES (1, 5.6,-4.4),(2, -9.6,3),(3, -1.3,-4),(4, 5.3,9.7),(5, 4.4,0.037),(6, -8.6,-7.8),(7, 5.1,9.3),(8, 7.9,-3.6),(9, -8.2,0.62),(10, -3,7.3);
INSERT INTO session_events SELECT   141,   '693de636-6d9b-47b7-b52a-33bd303b6255',   1686053240314,   number,   number,   toString(number % 10),   '' FROM numbers_mt(100000);
INSERT INTO sessions VALUES ('2018-01-01 00:00:00', 'v1', 's1'), ('2018-01-02 00:00:00', 'v1', 's2'), ('2018-01-03 00:00:00', 'v2', 's3'), ('2018-01-04 00:00:00', 'v1', 's4'), ('2018-01-05 00:00:00', 'v2', 's5'), ('2018-01-06 00:00:00', 'v3', 's6');
insert into sessions values(1);
INSERT INTO set VALUES ('Hello'), ('World');
INSERT INTO set VALUES ('hello');
INSERT INTO set VALUES (1);
INSERT INTO set2 VALUES ('abc'), ('World');
INSERT INTO set2 VALUES ('Hello'), ('World');
INSERT INTO set_array select  toString(intDiv(number, 1000000)) as primary_key,  array(number) as index_array from system.numbers limit 10000000;
INSERT INTO set_crash VALUES (-1, 1, 0);
insert into set_index values (1, 2);
INSERT INTO set_index__fuzz_41 (a) VALUES (today());
insert into set_index_not values ('Jon','alive'),('Ramsey','rip');
INSERT INTO set_null VALUES (NULL, 2, NULL, NULL, NULL);
insert into shard1 (id) values (0), (1);
insert into shard2 (id) values (1), (2);
insert into shard_0.data_02346 values (1, 'a'), (2, 'bb'), (3, 'ccc'), (4, 'dddd');
insert into shard_0.from_0 select number + 10 from numbers(10);
insert into shard_0.from_0 select number from numbers(10);
insert into shard_0.from_1 select number + 20 from numbers(10);
insert into shard_0.from_1 select number + 30 from numbers(10);
INSERT INTO shard_0.l VALUES (0);
insert into shard_0.num2_01232 select number from numbers(3);
insert into shard_0.num_01232 select number from numbers(2);
insert into shard_0.shard_01231_distributed_aggregation_memory_efficient select * from numbers(1);
insert into shard_1.data_02346 values (5, 'a'), (6, 'bb'), (7, 'ccc'), (8, 'dddd');
INSERT INTO shard_1.l VALUES (1);
insert into shard_1.num2_01232 select number from numbers(2);
insert into shard_1.num_01232 select number from numbers(3);
insert into shard_1.shard_01231_distributed_aggregation_memory_efficient select * from numbers(10);
insert into shard_1.t_different_dbs select number % 1000, number % 1000 from numbers_mt(1e6);
insert into short select number % 11, toDateTime('2021-01-01 00:00:00') + number from numbers(1000);
INSERT INTO signed_table(k, v, s) VALUES (1, 'a', 1);
insert into simple select number,number from system.numbers limit 10;
insert into simple values(1,'1','1','1.1.1.1', 1, ([1,2], [1,1]), ([1,2], [1,1]), ([1,2], [1,1]), [1,2], [1,2]);
insert into simple values(1,null,'2','2.2.2.2', 2, ([1,3], [1,1]), ([1,3], [2,2]), ([1,3], [2,2]), [2,3,4], [2,3,4]);
insert into simple values(10,'2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222','20','20.20.20.20', 1, ([2, 4], [1,1]), ([2, 4], [4,4]), ([2, 4], [4,4]), [], []);
insert into simple_agf_summing_mt select 1 a, groupUniqArrayArrayState([toUInt64(number)]), groupUniqArrayArray([toUInt64(number)]) from numbers(1) group by a;
insert into simple_agf_summing_mt select 1 a, groupUniqArrayArrayState([toUInt64(number)]), groupUniqArrayArray([toUInt64(number)]) from numbers(2) group by a;
insert into simple_agg_groupArrayLastArray values (1, [1,2,3]), (1, [4,5,6]), (2, [4,5,6]), (2, [1,2,3]);
insert into simple_agg_groupArrayLastArray values (1, [7,8]), (2, [7,8]);
INSERT INTO simple_key_dictionary_source_table VALUES (1, 'First', 'First');
INSERT INTO simple_key_dictionary_source_table VALUES (2, 'Second', NULL);
INSERT INTO simple_key_dictionary_source_table VALUES (3, 'Third', 'Third');
INSERT INTO simple_key_source_table_01862 VALUES (1, 'First');
INSERT INTO single_column_bloom_filter SELECT number AS u64, number AS i32, number AS i64 FROM system.numbers LIMIT 100;
INSERT INTO sipHashKeyed_keys VALUES ((2, 2), 4);
INSERT INTO sipHashKeyed_keys VALUES ((4, 4), 4);
INSERT INTO sipHashKeyed_keys VALUES (2, 2);
INSERT INTO sipHashKeyed_keys VALUES (2, 2, 4);
INSERT INTO sipHashKeyed_keys VALUES (4, 4);
INSERT INTO sipHashKeyed_keys VALUES (4, 4, 4);
INSERT INTO sites VALUES (1,[1],[[]]);
INSERT INTO sites VALUES (2,[1],[['2018-06-22']]);
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 1, 1000, 2000, -1, 1), ('2018-05-16', 1, 1000, 2000, 1, 2);
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 1, 1000, 2000, 1, 1), ('2018-05-16', 1, 1000, 2000, -1, 2);
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 2, 1000, 2000, -1, 1), ('2018-05-16', 2, 1000, 2000, 1, 2);
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 2, 1000, 2000, 1, 1), ('2018-05-16', 2, 1000, 2000, -1, 2);
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 3, 1000, 2000, -1, 1), ('2018-05-16', 3, 1000, 2000, 1, 2);
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 3, 1000, 2000, 1, 1), ('2018-05-16', 3, 1000, 2000, -1, 2);
INSERT INTO size_hint SELECT arrayMap(x -> 'Hello', range(1000)) FROM numbers(10000);
INSERT INTO skip_idx_comp_parts SELECT number, number FROM numbers(200);
insert into smta(k, city) values (1, 'x');
insert into smta(k, city) values (1, 'y');
INSERT INTO some_invalid VALUES (1, 'SELECT 1') (2, 'SeLeCt 2') (3, 'bad 3') (4, 'select 4') (5, 'bad 5') (6, '') (7, 'SELECT 7');
INSERT INTO sometable (date, time, value) VALUES ('2019-11-08', 1573185600, 100);
INSERT INTO sometable (date, time, value, time) VALUES ('2019-11-08', 1573185600, 100, 1573185600);
INSERT INTO sorted (x) SELECT (intHash64(number) % 1000 = 0 ? 999 : intDiv(number, 100000)) AS x FROM system.numbers LIMIT 1000000;
INSERT INTO sorted (x) SELECT intDiv(number, 100000) AS x FROM system.numbers LIMIT 1000000;
insert into sorting_key_contain_function values ('2000-01-01', 1);
insert into sorting_key_contain_function values ('2000-01-01', 2);
insert into sorting_key_empty_tuple select number % 2, number % 5 from numbers(1,10);
INSERT INTO source SELECT number FROM numbers(2000) SETTINGS min_insert_block_size_rows=1500, max_insert_block_size=1500;
INSERT INTO source values ('2021-12-31 23:00:00', 0);
INSERT INTO source values ('2022-12-31', '2022-12-31 23:59:59', '2022-12-31', '2022-12-31 23:59:59.123', 0);
INSERT INTO source values ('2023-01-01', '2023-01-01 00:00:00', '2023-01-01', '2023-01-01 00:00:00.000', 1);
INSERT INTO source values ('2023-12-01', '2023-12-01 00:00:00', '2023-12-01', '2023-12-01 00:00:00.000', 2);
INSERT INTO source values ('2023-12-31', '2023-12-31 23:59:59', '2023-12-31', '2023-12-31 23:59:59.123', 3);
INSERT INTO source values ('2024-01-01', '2024-01-01 00:00:00', '2024-01-01', '2024-01-01 00:00:00.000', 4);
INSERT INTO source_data (pk, sk, val) VALUES (0, 0, 0), (0, 0, 0), (1, 1, 2), (1, 1, 3);
INSERT INTO source_table (date, datetime, zoneId) VALUES ('2018-12-10', '2018-12-10 23:59:59', 1);
INSERT INTO source_table SELECT * FROM system.numbers LIMIT 10;
INSERT INTO source_table VALUES (1, 'First');
INSERT INTO source_table VALUES (2, 'Second');
INSERT INTO source_table1 VALUES (42, 'qwe');
INSERT INTO source_table2 VALUES (42, 'qwe');
INSERT INTO source_table_dictionary VALUES (1, 'First');
INSERT INTO source_table_log SELECT * FROM system.numbers LIMIT 10;
INSERT INTO source_table_merge_tree SELECT * FROM system.numbers LIMIT 10;
INSERT INTO source_table_stripe_log SELECT * FROM system.numbers LIMIT 10;
INSERT INTO source_table_tiny_log SELECT * FROM system.numbers LIMIT 10;
INSERT INTO spark_bar_test VALUES (1,'2020-01-01'), (3,'2020-01-02'), (4,'2020-01-02'), (-3,'2020-01-02'), (5,'2020-01-03'), (2,'2020-01-04'), (3,'2020-01-05'), (7,'2020-01-06'), (6,'2020-01-07'), (8,'2020-01-08'), (2,'2020-01-11');
INSERT INTO spark_bar_test VALUES(1,'2020-01-01'),(4,'2020-01-02'),(5,'2020-01-03'),(2,'2020-01-04'),(3,'2020-01-05'),(7,'2020-01-06'),(6,'2020-01-07'),(8,'2020-01-08'),(2,'2020-01-11');
INSERT INTO sparse_tuple SELECT number, (if (number % 20 = 0, number, 0), (if (number % 15 = 0, number, 0), repeat('a', number % 10 + 1))) FROM numbers(1000);
INSERT INTO sparse_tuple SELECT number, (if (number % 20 = 0, number, 0), repeat('a', number % 10 + 1)) FROM numbers(1000);
INSERT INTO special_set_table VALUES (0), (1);
insert into src select * from numbers(1e6) settings log_queries=1, max_untracked_memory=0, parallel_view_processing=1;
INSERT INTO src SELECT number, toString(number) FROM numbers(1000);
INSERT INTO src VALUES (0, '0', 1);
INSERT INTO src VALUES (1), (2);
INSERT INTO src VALUES (1, '0', 1);
INSERT INTO src VALUES (1, '1', 1);
INSERT INTO src VALUES (1, 'Hello\0World');
INSERT INTO src VALUES (2, '0', 1);
INSERT INTO src VALUES (3), (4);
INSERT INTO src VALUES (3);
INSERT INTO src VALUES (3, '0', 1);
INSERT INTO src VALUES (3, '1', 1);
insert into src values('one', 'one', 'test');
insert into src values(1, 'one', 'test');
insert into src1 values(1);
insert into src2 values(2);
INSERT INTO src_00726 VALUES (1), (2);
INSERT INTO src_00726 VALUES (3), (4);
INSERT INTO src_00942 VALUES (1), (2), (3);
INSERT INTO src_01019 VALUES (1), (2), (3);
INSERT INTO src_01019 VALUES (42);
insert into src_02224 values (1);
insert into src_table select * from numbers(2);
insert into stack select number%99991, number%11, number%1111, toDateTime('2020-01-01 00:00:00')+number/100,   toDateTime('2020-02-01 00:00:00')+number/10, intDiv(number,100)+1 from numbers_mt(10000000);
INSERT INTO startsWith_test values ('11', '22', '33'), ('a', 'a', 'bb'), ('abc', 'ab', '23');
INSERT INTO storage(UserID) values (6460432721393873721)(6460432721393873721)(6460432721393873721)(6460432721393873721)(6460432721393873721)(6460432721393873721)(6460432721393873721)(402895971392036118)(402895971392036118)(402895971392036118);
INSERT INTO store VALUES (1,'店铺1','启用'),(2,'店铺2','停用');
INSERT INTO store_of_hash_00804 SELECT sum(cityHash64(*)) FROM large_alter_table_00804;
INSERT INTO store_of_hash_00926 SELECT sum(cityHash64(*)) FROM large_alter_table_00926;
INSERT INTO store_sales (ss_cdemo_sk) VALUES (0.1);
INSERT INTO store_sales (ss_sold_time_sk) VALUES (1);
INSERT INTO stored_aggregates SELECT   toDate('2014-06-01') AS d,   uniqState(number) AS Uniq FROM (   SELECT * FROM system.numbers LIMIT 1000 );
INSERT INTO stored_aggregates SELECT   toDate('2014-06-01') AS d,   uniqState(number) AS Uniq,   uniqThetaState(number) AS UniqThetaSketch FROM (   SELECT * FROM system.numbers LIMIT 1000 );
INSERT INTO stored_aggregates SELECT   toDate(toUInt16(toDate('2014-06-01')) + intDiv(number, 100)) AS d,   uniqState(intDiv(number + 50, 10)) AS Uniq FROM (   SELECT * FROM system.numbers LIMIT 500, 1000 ) GROUP BY d;
INSERT INTO stored_aggregates SELECT   toDate(toUInt16(toDate('2014-06-01')) + intDiv(number, 100)) AS d,   uniqState(intDiv(number, 10)) AS Uniq FROM (   SELECT * FROM system.numbers LIMIT 1000 ) GROUP BY d;
INSERT INTO stored_aggregates SELECT  toDate('2014-06-01') AS d, intDiv(number, 100) AS k1, toString(intDiv(number, 10)) AS k2,   sumState(number) AS Sum,  avgState(number) AS Avg,  uniqState(toUInt64(number % 7)) AS Uniq,  anyState(toString(number)) AS Any, anyIfState(toString(number), number % 7 = 0) AS AnyIf, quantilesState(0.5, 0.9)(number) AS Quantiles, groupArrayState(toString(number)) AS GroupArray FROM ( SELECT * FROM system.numbers LIMIT 1000 ) GROUP BY d, k1, k2 ORDER BY d, k1, k2;
INSERT INTO stored_aggregates SELECT  toDate('2014-06-01') AS d, intDiv(number, 100) AS k1, toString(intDiv(number, 10)) AS k2,   uniqState(toUInt64(number % 7)) AS Uniq,   uniqThetaState(toUInt64(number % 7)) AS UniqThetaSketch FROM (   SELECT * FROM system.numbers LIMIT 1000 ) GROUP BY d, k1, k2 ORDER BY d, k1, k2;
INSERT INTO stored_aggregates SELECT  toDate(toUInt16(toDate('2014-06-01')) + intDiv(number, 100)) AS d, uniqState(intDiv(number + 50, 10)) AS Uniq FROM (  SELECT * FROM system.numbers LIMIT 500, 1000 ) GROUP BY d;
INSERT INTO stored_aggregates SELECT  toDate(toUInt16(toDate('2014-06-01')) + intDiv(number, 100)) AS d, uniqState(intDiv(number, 10)) AS Uniq FROM (  SELECT * FROM system.numbers LIMIT 1000 ) GROUP BY d;
insert into strict_BiteTheDDDD values (1,'a') (2,'b') (3,'c') (4,'b') (5,'d');
INSERT INTO strings VALUES ('test', 'string');
insert into strings values (1, '1');
INSERT INTO strings_00469 VALUES ('abcde\0', 'abcde'), ('aa\0a', 'aa\0b'), ('aa', 'aa\0'), ('a\0\0\0\0', 'a\0\0\0'), ('a\0\0', 'a\0'), ('a', 'a');
INSERT INTO stripelog VALUES (1), (2);
INSERT INTO subcolumns VALUES (([1, NULL], 2, 'a'), ['foo', NULL, 'bar'], [['123'], ['456', '789']], 'qqqq', ['zzz', 'xxx'], [42, 43]);
INSERT INTO sum_map VALUES ('2000-01-01', '2000-01-01 00:00:00', [1, 2, 3], [10, 10, 10]), ('2000-01-01', '2000-01-01 00:00:00', [3, 4, 5], [10, 10, 10]), ('2000-01-01', '2000-01-01 00:01:00', [4, 5, 6], [10, 10, 10]), ('2000-01-01', '2000-01-01 00:01:00', [6, 7, 8], [10, 10, 10]);
INSERT INTO sum_map_decimal VALUES ([1, 2, 3], [1.0, 2.0, 3.0]), ([3, 4, 5], [3.0, 4.0, 5.0]), ([4, 5, 6], [4.0, 5.0, 6.0]), ([6, 7, 8], [6.0, 7.0, 8.0]);
INSERT INTO sum_map_decimal VALUES (map(1,'1.0',2,'2.0',3,'3.0')), (map(3,'3.0',4,'4.0',5,'5.0')), (map(4,'4.0',5,'5.0',6,'6.0')), (map(6,'6.0',7,'7.0',8,'8.0'));
INSERT INTO sum_map_decimal_nullable VALUES ([1, 2, 3], [1.0, 2.0, 3.0]), ([3, 4, 5], [3.0, 4.0, 5.0]), ([4, 5, 6], [4.0, 5.0, 6.0]), ([6, 7, 8], [6.0, 7.0, 8.0]);
INSERT INTO sum_map_overflow VALUES ([1], [255]), ([1], [2]);
INSERT INTO summing (k, s) VALUES (0, 1), (666, 1), (666, 0);
INSERT INTO summing (k, s) VALUES (0, 1);
INSERT INTO summing SELECT '', 1, e FROM generateRandom('e Enum(\'hello\' = 1, \'world\' = 2)', 1) LIMIT 1000;
INSERT INTO summing(x, y, z, val) values (1, 2, 0, 10), (1, 2, 1, 30), (1, 2, 2, 40);
INSERT INTO summing(x, y, z, val) values (1, 2, 0, 20), (1, 2, 2, 50);
INSERT INTO summing_composite_key VALUES ('2000-01-01', 1, [1,2], ['3','4'], [10,11], [0,1,2], [3,4,5], [-1,-2,-3], [1,10,100]), ('2000-01-01', 1, [2,1], ['4','3'], [20,22], [2,2,1], [5,5,0], [-3,-3,-33], [10,100,1000]), ('2000-01-01', 2, [1,2], ['3','4'], [10,11], [0,1,2], [3,4,5], [-1,-2,-3], [1,10,100]), ('2000-01-01', 2, [2,1,1], ['4','3','3'], [20,22,33], [2,2], [5,5], [-3,-3], [10,100]), ('2000-01-01', 2, [1,2], ['3','4'], [10,11], [0,1,2], [3,4,5], [-1,-2,-3], [1,10,100]);
INSERT INTO summing_merge_tree VALUES ('2000-01-01', 'Goodbye', 1, 2, 3);
INSERT INTO summing_merge_tree VALUES ('2000-01-01', 'Hello', 1, 2, 3);
INSERT INTO summing_merge_tree VALUES ('2000-01-01', 'Hello', 4, 5, 6);
INSERT INTO summing_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO summing_merge_tree VALUES (1, 1, '2020-01-01'), (2, 1, '2020-01-02'), (1, 5, '2020-01-01'), (2, 5, '2020-01-02');
insert into summing_merge_tree_aggregate_function select 1, 1, topKState(2)(1);
insert into summing_merge_tree_aggregate_function select 1, 1, topKState(2)(2);
insert into summing_merge_tree_aggregate_function select 1, 1, topKState(2)(3);
insert into summing_merge_tree_aggregate_function select 1, 1, topKWeightedState(2)(1, 1);
insert into summing_merge_tree_aggregate_function select 1, 1, topKWeightedState(2)(2, 2);
insert into summing_merge_tree_aggregate_function select 1, 1, topKWeightedState(2)(3, 5);
insert into summing_merge_tree_aggregate_function select 1, 1, uniqState(1), uniqExactState(1);
insert into summing_merge_tree_aggregate_function select 1, 1, uniqState(2), uniqExactState(2);
insert into summing_merge_tree_aggregate_function select 1, 1, uniqState(3), uniqExactState(2);
insert into summing_merge_tree_aggregate_function select 1, 1, uniqState(3), uniqExactState(3);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.0);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.125);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.25);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.375);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.4375);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.5);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.5625);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.625);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.75);
insert into summing_merge_tree_aggregate_function select 1, avgState(0.875);
insert into summing_merge_tree_aggregate_function select 1, avgState(1.0);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.0);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.1);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.2);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.3);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.4);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.5);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.6);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.7);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.8);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.9);
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(1.0);
insert into summing_merge_tree_aggregate_function select today() as d,    number + 5000 as k,    uniqState(toUInt64(number % 500)) from numbers(5000) group by d, k;
insert into summing_merge_tree_aggregate_function select today() as d,    number as k,    uniqState(toUInt64(number % 500)) from numbers(5000) group by d, k;
INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 1 value;
INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 2 value;
INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 3 value;
INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 4 value;
INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 5 value;
INSERT INTO summing_merge_tree_with_list_of_columns_to_sum VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO summing_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO summing_merge_tree_with_sampling_with_list_of_columns_to_sum VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO summing_mt_aggregating_column SELECT 1, 2, [333, 444], groupArrayArrayState([toUInt64(33), toUInt64(44)]);
INSERT INTO summing_mt_aggregating_column SELECT 1, 3, [555, 999], groupArrayArrayState([toUInt64(55), toUInt64(99)]);
INSERT INTO summing_r1(x, y, z, val) values (1, 2, 0, 10), (1, 2, 1, 30), (1, 2, 2, 40);
INSERT INTO summing_r1(x, y, z, val) values (1, 2, 0, 20), (1, 2, 2, 50);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values (1, ['1.2.3.4'], [1], ['::1'], [2], ['00130949-0cd4-4c3d-84c4-cc421eff480f'], [3]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(1, ['1.2.3.4'], [10], ['::1'], [11], ['00130949-0cd4-4c3d-84c4-cc421eff480f'], [12]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(1, ['1.2.3.4'], [22], ['::1'], [23], ['00000000-0cd4-4c3d-84c4-cc421eff480f'], [24]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(1, ['1.2.3.4'], [4], ['::1'], [5], ['00130949-0cd4-4c3d-84c4-cc421eff480f'], [6]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(1, ['2.3.4.5'], [13], ['::2'], [14], ['00000000-0cd4-4c3d-84c4-cc421eff480f'], [15]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(2, ['1.2.3.4'], [19], ['::2'], [20], ['00130949-0cd4-4c3d-84c4-cc421eff480f'], [21]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(2, ['1.2.3.4'], [7], ['::1'], [8], ['00130949-0cd4-4c3d-84c4-cc421eff480f'], [9]);
INSERT INTO summing_table(id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total)   values(2, ['2.3.4.5'], [16], ['::1'], [17], ['00130949-0cd4-4c3d-84c4-cc421eff480f'], [18]);
insert into summing_table01747 values ('name', 2, 20, 'USD'),('name', 1, 10, 'USD');
insert into system.zookeeper (name, path, value) SELECT name, '/' || currentDatabase() || path, value from test_zkinsert;
insert into t (`arr.key`, `arr.value`) values (['a'], ['b']);
insert into t (c1, c18) select number, -number from numbers(2000000);
INSERT INTO t (d, s, c) VALUES ('2020-01-01', 'ABC', 1);
INSERT INTO t (d, s, c) VALUES ('2020-01-01', 'ABC', 2);
INSERT INTO t (s) VALUES ('I am inverted');
INSERT INTO t (timestamp) VALUES ('2022-11-25 22:33:19'::DateTime), ('2022-11-25 22:33:19'::DateTime - INTERVAL 1 DAY), ('2022-11-25 22:33:19'::DateTime + INTERVAL 1 DAY), ('2022-11-25 22:33:19'::DateTime - INTERVAL 2 DAY), ('2022-11-25 22:33:19'::DateTime + INTERVAL 2 DAY);
INSERT INTO t (x) VALUES ('id'), ('1');
INSERT INTO t SELECT   number,   if(number < (8129 * 1024), arrayStringConcat(arrayMap(x -> toString(x), range(number % 128)), ' '), '') FROM numbers_mt((8129 * 1024) * 3) settings max_insert_threads=8;
INSERT INTO t SELECT   toDate('2023-09-10', 'UTC') AS d,   [number % 99999, NULL][number % 2] AS f1,   ['x', NULL][number % 2] AS f2,   [number, NULL][number % 2] AS c FROM numbers(100000);
INSERT INTO t SELECT   toDate('2023-09-10', 'UTC') AS d,   NULL AS f1,   ['x', 'y', 'z'][number % 3] AS f2,   number AS c FROM numbers(1000);
insert into t select * from numbers(2);
insert into t select * from numbers_mt(10e6) settings max_threads = 16, max_insert_threads=16, max_block_size=100000;
insert into t select * from numbers_mt(1e3);
INSERT INTO t SELECT * FROM numbers_mt(1e3);
insert into t select * from numbers_mt(1e6);
INSERT INTO t SELECT * FROM system.numbers LIMIT 11;
INSERT INTO t SELECT * FROM system.numbers LIMIT 1500;
INSERT INTO t SELECT * FROM t;
INSERT INTO t SELECT -number * number * number AS x, x AS i256, x AS u256, x AS d256 FROM numbers(10000);
insert into t select 0, 0 from numbers(50);
insert into t select 0, 1 from numbers(350);
INSERT INTO t SELECT 1 AS key, today() + (number % 30), number FROM numbers(1000);
insert into t select 1, 2 from numbers(400);
insert into t select 2, 2 from numbers(400);
insert into t select 3, 0 from numbers(100);
insert into t select 3, sum(number) as c, getSetting('max_threads') from numbers_mt(10000000) group by 3 settings max_insert_threads=4, max_threads=2;
insert into t select 4, sum(number) as c, getSetting('max_threads') as mt from numbers_mt(10000000) group by mt settings max_insert_threads=4, max_threads=2;
INSERT INTO t SELECT multiIf(n = 0, 'abc', n = 1, 'def', n = 2, 'abc', n = 3, 'jkl', '<unused>') FROM (SELECT number % 4 AS n FROM numbers(1200));
INSERT INTO t SELECT number % 10, number FROM numbers(10000);
insert into t select number % 2, number from numbers(10);
INSERT INTO t SELECT number * number * number AS x, x AS i256, x AS u256, x AS d256 FROM numbers(10000);
insert into t select number + 100 from numbers(100);
INSERT INTO t SELECT number FROM numbers(10);
insert into t select number from numbers(100);
insert into t select number from numbers(10000);
INSERT INTO t SELECT number FROM numbers(10000000);
insert into t select number from numbers(300);
insert into t select number from numbers_mt(10000000) settings max_insert_threads=8;
INSERT INTO t SELECT number FROM numbers_mt(1e6);
INSERT INTO t SELECT number+2 FROM numbers(2);
insert into t select number, 'hello, world!' from numbers (5);
insert into t SELECT number, -number, number FROM numbers(10000);
INSERT INTO t SELECT number, 0, 1 FROM numbers(1e3);
INSERT INTO t SELECT number, NULL FROM numbers(10);
INSERT INTO t SELECT number, number * 2, number * 3 FROM numbers(100);
insert into t select number, number from numbers_mt(1e6);
insert into t select number, number, number from numbers(10);
INSERT INTO t SELECT number, rand()%1000 FROM numbers(10000);
INSERT INTO t SELECT number, toString(number) FROM numbers(5);
INSERT INTO t SELECT toDate('2019-10-01') + number % 3, toString(number), toString(number) from numbers(9);
INSERT INTO t SELECT toString(number) FROM numbers(1000);
INSERT INTO t SELECT value FROM system.events WHERE event = 'OverflowAny';
INSERT INTO t SELECT value FROM system.events WHERE event = 'OverflowBreak';
INSERT INTO t SELECT value FROM system.events WHERE event = 'OverflowThrow';
insert into t settings bool_true_representation='да' values ('да');
insert into t VALUES ('00000000-0000-0000-0000-000000000000', now());
INSERT INTO t VALUES ('2000-01-02 03:04:05'), ('1234567890'), (1111111111);
INSERT INTO t VALUES ('2017-01-01', 1);
insert into t values ('2019-01-01', 'test1'), ('2019-02-01', 'test2'), ('2019-03-01', 'test3');
INSERT INTO t VALUES ('a', 0), ('a', 1), ('b', 0);
INSERT INTO t values ('abc') ('def') ('ghi') ('jkl');
INSERT INTO t VALUES ('abcdefgh', -2, -2),('12345678', -3, -3);
INSERT INTO t VALUES ('Hello');
insert into t values (-1, -1, -1, -1), (-2, -2, -2, -2), (-3, -3, -3, -3), (-4, -4, -4, -4), (-5, -5, -5, -5);
INSERT INTO t values (-1.5, -1.5, -1.5, -1.5, 1.5, 1.5);
INSERT INTO t values (-2.5, 2.5, -25.5, 25.5, 3.5, -2.5);
INSERT INTO t values (-4.5, 4.5, -45.5, 45.5, 2.5, -3.5);
INSERT INTO t VALUES (0), (1), (2);
INSERT INTO t VALUES (0);
INSERT INTO t VALUES (0, 0);
insert into t values (0.9);
INSERT INTO t VALUES (0x1.f7ced916872b0p-4);
insert into T values (1), (2), (3), (4), (5);
INSERT INTO t VALUES (1), (2), (3);
INSERT INTO t VALUES (1),(1);
INSERT INTO t VALUES (1);
insert into t values (1);
insert into t values (1, 'a');
INSERT INTO t VALUES (1, 'Hello World');
INSERT INTO t VALUES (1, 'hello'), (2, 'world');
INSERT INTO t VALUES (1, 'hello');
INSERT INTO t VALUES (1, 'l');
INSERT INTO t VALUES (1, -1, 11, 111, 1111), (2, -2, 22, 222, 2222), (3, -3, 33, 333, 2222), (4, -4, 44, 444, 4444), (5, -5, 55, 555, 5555);
insert into t values (1, 0) (2, 1) (3, 0) (4, 0) (5, 0);
insert into t values (1, 1) (2, 1) (3, 0) (4, 0) (5, 0);
insert into t values (1, 1);
insert into t values (1, 1, 'a') (2, 1, 'a') (3, 1, 'a') (4, 1, 'a');
INSERT INTO t VALUES (1, 100, '1970-01-01'), (1, 200, '1970-01-02');
INSERT INTO t VALUES (1, 1111111111222);
insert into t values (1, 2);
INSERT INTO t VALUES (1, 2, 3) (1, 2, 4) (2, 3, 4), (2, 3, 5);
insert into t values (1, 4);
insert into t values (1, 5);
insert into t values (1, [1,2,3]), (2, [4,5]), (3, [6]);
insert into t values (1,1), (2,2);
insert into t values (1,1.1), (1,1.2), (2,2.1);
INSERT INTO t VALUES (1.1);
INSERT INTO t values (1.5, 1.5, 1.5, 1.5, -1.5, -1.5);
INSERT INTO t VALUES (1000);
INSERT INTO t VALUES (1231, 'John', 11, 1, 1), (6666, 'Ksenia', 1, 2, 2), (8888, 'Alice', 1, 3, 3), (6667, 'Ksenia', null, 4, 4);
INSERT INTO t VALUES (2),(3);
INSERT INTO t VALUES (2, 1111111111.222);
INSERT INTO t values (2.5, -2.5, 25.5, -25.5, -2.5, 3.5);
INSERT INTO t VALUES (3, '1111111111222');
INSERT INTO t VALUES (4), (5), (6);
INSERT INTO t VALUES (4, '1111111111.222');
INSERT INTO t values (4.5, -4.5, 45.5, -45.5, -3.5, 2.5);
insert into t values ([1, 2, 3, 4, 5, 6, 7, 8], -2, -2), ([1, 2, 3, 4, 5, 6, 7, 8], -3, -3);
INSERT INTO t VALUES (NULL, NULL);
INSERT INTO t VALUES('Hallo Welt');
insert into t values(1,1,'a');
INSERT INTO t VALUES;
INSERT INTO t(a, b, c, d ,e) VALUES ('1648804224','','','',5);
INSERT INTO t(a, b, c, d ,e) VALUES ('2022-03-31 10:18:56','','','',3);
INSERT INTO t(a, b, c, d ,e) VALUES ('2022-03-31','','','',1);
INSERT INTO t(a, b, c, d ,e) VALUES ('2022-03-31T10:18:56','','','',4);
INSERT INTO t(a, b, c, d ,e) VALUES (1648804224,'','','',2);
insert into t(id, dealer_id) values('1','2');
INSERT INTO t0 SELECT   number,   -number,   number FROM numbers_mt(1e5);
INSERT INTO t0 SELECT quantileArrayState(0.10)([number]) FROM numbers(100);
insert into t0 values ('a', 1, 2);
INSERT INTO t0 VALUES (0, 0);
INSERT INTO t0 VALUES (15, 25000, 58);
insert into t0 values (19000, 1);
INSERT INTO t0(c0) VALUES (1), (2);
INSERT INTO t0(c0) VALUES (1);
INSERT INTO t0(c0, c1) VALUES ("1",1) ;
INSERT INTO t02176 VALUES (1559952000);
insert into t02845 values ([1,2,3,4,5,6], 2, 1),([1,2,3,4,5,6], 3, 2),([1,2,3,4], 3, 3),([4,8,15,16,23,42], 5, 4),([2, 7, 18, 28, 18, 28, 45, 90, 45], 7, 5),([3, 14, 159, 26, 5], 11, 6);
INSERT INTO t1 (a) VALUES ('OK');
INSERT INTO t1 (c1, c2) VALUES (1, 10), (1, 20), (1, 30);
INSERT INTO t1 (c1,c2,c3) VALUES(now() + INTERVAL '1 day 1 hour 1 minute 1 second', now(), now());
insert into t1 (date, s1,s2) values(today(),'aaa2','bbb2');
insert into t1 (date, s1,s2) values(today()-1,'aaa','bbb');
INSERT INTO t1 (id, value1) VALUES (1, 'val11');
INSERT INTO t1 (x, s) VALUES (0, 'a1'), (1, 'a2'), (2, 'a3'), (3, 'a4'), (4, 'a5'), (2, 'a6');
INSERT INTO t1 (x, s) VALUES (0, 'a1'), (1, 'a2'), (2, 'a3'), (3, 'a4'), (4, 'a5');
INSERT INTO t1 (x, str) VALUES (0, 'a1'), (1, 'a2'), (2, 'a3'), (3, 'a4'), (4, 'a5');
INSERT INTO t1 (x, y) VALUES (0, 0);
INSERT INTO t1 (x, y) VALUES (1, 10) (2, 20);
INSERT INTO t1 (x, y) VALUES (4, 40) (3, 30);
insert into t1 select 'AAAAAAAAAAA', 'BBBBBB';
INSERT INTO t1 SELECT * FROM generateRandom('k UInt32, v UInt32') LIMIT 1;
INSERT INTO t1 SELECT * FROM numbers(10);
INSERT INTO t1 SELECT if (number % 13 = 0, toString(number), '') FROM numbers(2000);
INSERT INTO t1 SELECT number % 2, number FROM numbers(10);
insert into t1 select number % 4, toString(number) from numbers(1000, 1000);
INSERT INTO t1 SELECT number as k from numbers_mt(10);
insert into t1 select number from numbers_mt(1e6);
INSERT INTO t1 select number, -number, generateUUIDv4() FROM system.numbers LIMIT 10000;
INSERT INTO t1 SELECT number, number * 10, number * 100, number * 1000 FROM numbers(1000000);
INSERT INTO t1 SELECT number, number FROM numbers(0, 3);
insert into t1 select number, number from numbers(1000);
insert into t1 select number, number from numbers(1000, 1000);
INSERT INTO t1 SELECT number, number FROM numbers(12, 2);
INSERT INTO t1 SELECT number, number FROM numbers(14, 1);
INSERT INTO t1 SELECT number, number FROM numbers(15, 2);
INSERT INTO t1 SELECT number, number FROM numbers(17, 1);
INSERT INTO t1 SELECT number, number FROM numbers(18, 2);
INSERT INTO t1 SELECT number, number FROM numbers(20, 2);
insert into t1 select number, number from numbers(2000, 1000);
INSERT INTO t1 SELECT number, number FROM numbers(22, 2);
INSERT INTO t1 SELECT number, number FROM numbers(24, 2);
INSERT INTO t1 SELECT number, number FROM numbers(26, 2);
INSERT INTO t1 SELECT number, number FROM numbers(28, 2);
INSERT INTO t1 SELECT number, number FROM numbers(3, 2);
INSERT INTO t1 SELECT number, number FROM numbers(5, 7);
INSERT INTO t1 SELECT number, number FROM system.numbers LIMIT 100;
INSERT INTO t1 SELECT number, number, toString(number), number from numbers(4);
insert into t1 select number, toString(number) from numbers(1000, 1000);
INSERT INTO t1 SELECT quantileDistinctState(0.10)(number) FROM numbers(100);
INSERT INTO t1 SELECT toString(number), toDecimal64(number, 8) FROM system.numbers LIMIT 1000000;
INSERT INTO t1 VALUES ( 1 ), ( 2 ), ( 3 );
INSERT INTO t1 VALUES ('111', 1, 1);
insert into t1 values ('1900-01-01'),('1899-01-01'),('2299-12-15'),('2300-12-31'),('2021-06-22');
INSERT INTO t1 VALUES ('2020-01-01 12:00:00', 'fact1', 't1_val1'), ('2020-02-02 13:00:00', 'fact2', 't1_val2'), ('2020-01-01 13:00:00', 'fact3', 't1_val3');
INSERT INTO t1 VALUES ('Hello');
insert into t1 values (-1), (1);
INSERT INTO t1 VALUES (0, '');
INSERT INTO t1 VALUES (0, 0);
INSERT INTO t1 VALUES (0, 1);
INSERT INTO t1 VALUES (1), (2), (3);
INSERT INTO t1 VALUES (1), (2);
insert into t1 values (1),(2),(3),(4),(5);
INSERT INTO t1 VALUES (1),(2);
INSERT INTO t1 VALUES (1, '1'), (2, '2');
insert into t1 values (1, 'test');
insert into t1 values (1, 'x'), (2, 'y'), (3, 'z');
INSERT INTO t1 VALUES (1, -1), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4);
INSERT INTO t1 VALUES (1, -1, 11), (2, -2, 22), (3, -3, 33), (4, -4, 44), (5, -5, 55);
INSERT INTO t1 VALUES (1, 1), (2, 2);
INSERT INTO t1 VALUES (1, 1);
INSERT INTO t1 VALUES (1, 1, 1), (1, 1, 2), (2, 2, 2), (1, 2, 2);
INSERT INTO t1 VALUES (1, 2), (3, 4), (5, 6);
INSERT INTO t1 VALUES (1, toDateTime('2023-07-20 21:53:01') + INTERVAL '1 day 1 hour 1 minute 1 second'), (2, toDateTime('2023-07-20 21:53:01') + INTERVAL '1 day');
INSERT INTO t1 values (1,1), (2,2), (3,3), (4,4);
INSERT INTO t1 VALUES (1,42), (2,2), (3,3), (NULL,NULL);
insert into t1 values (101, '2023-05-28 00:00:00'), (102, '2023-05-28 00:00:00');
INSERT INTO t1 VALUES (1231), (123);
INSERT INTO t1 VALUES (1554690688);
insert into t1 values (2, null);
insert into t1 values (2.4);
insert into t1 values (21585718595728998), (null);
insert into t1 values (3);
INSERT INTO t1 VALUES (3, toDateTime('2023-07-20 21:53:01') + INTERVAL 1 DAY), (4, toDateTime('2023-07-20 21:53:01') + (toIntervalMinute(1), toIntervalSecond(1)));
insert into t1 values('1', 's', 1);
INSERT INTO t1 values(1);
insert into t1 values(1);
INSERT INTO t1 values(1, '1');
INSERT INTO t1 with toDateTime64('2023-01-01 00:00:00.000000001', 9, 'US/Eastern') as c SELECT EXTRACT(MINUTE FROM c+toIntervalSecond(number * 60)) from numbers(2);
insert into t1(a, b) values (1, 'one'), (2, 'two');
INSERT INTO t1(c1) VALUES (1);
insert into t1(ID, name) values (1, 'abc'), (2, 'bbb');
INSERT INTO t10 (c0) FORMAT Values (-1);
insert into t10 select number, number from numbers_mt(100);
insert into t11 select number, number from numbers_mt(100);
insert into t12 select number, number from numbers_mt(100);
insert into t13 select number, number from numbers_mt(100);
insert into t14 select number, number from numbers_mt(100);
insert into t15 select number, number from numbers_mt(100);
insert into t16 select number, number from numbers_mt(100);
insert into t17 select number, number from numbers_mt(100);
insert into t18 select number, number from numbers_mt(50);
insert into t19 select number, number from numbers_mt(50);
INSERT INTO t1_00203 VALUES (1, 2, 3, 'aaa'), (2, 3, 4, 'bbb');
insert into t1_00729 (id,val,nid,eDate) values (1,['background','foreground','heading','image'],1,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (2,['background','foreground','heading','image'],1,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (2,[],2,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (3,[],4,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (3,[],5,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (3,[],6,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (3,[],7,'2018-09-27');
insert into t1_00729 (id,val,nid,eDate) values (3,[],8,'2018-09-27');
INSERT INTO t1_00816 VALUES (1, 123);
INSERT INTO t1_00826 values (1,1), (2,2);
INSERT INTO t1_00841 VALUES (1);
insert into t1_00844 values(1,'1');
insert into t1_00848 values ('l');
INSERT INTO t1__fuzz_13 VALUES (1);
insert into t1__fuzz_17 select * from generateRandom() limit 1;
INSERT INTO t1__fuzz_8 VALUES (1, 1), (2, 2);
insert into t1_local values (1), (2), (3);
INSERT INTO t1_local VALUES('partition1', 1,1);
INSERT INTO t1_local VALUES('partition1', 2,3);
INSERT INTO t1_local VALUES('partition2', 1,1);
INSERT INTO t1_local VALUES('partition2', 1,2);
INSERT INTO t1_local VALUES('partition2', 2,4);
insert into t1_shard values (42);
INSERT INTO t2 (a) VALUES ('OK');
INSERT INTO t2 (c1, c2, c3) VALUES (1, 5, 'a'), (1, 15, 'b'), (1, 25, 'c');
INSERT INTO t2 (id, value2) VALUES (1, 'val21');
INSERT INTO t2 (k, s) VALUES (3, 'ghi');
INSERT INTO t2 (x, k) VALUES ([3, 4, 5], 4);
INSERT INTO t2 (x, s) VALUES (2, 'b1'), (2, 'b2'), (4, 'b3'), (4, 'b4'), (4, 'b5'), (5, 'b6');
INSERT INTO t2 (x, s) VALUES (2, 'b1'), (4, 'b2'), (5, 'b4');
INSERT INTO t2 (x, y) VALUES (0, 0) (5, 50) (4, 42);
INSERT INTO t2 (x, y) VALUES (4, 41) (2, 21) (2, 22);
INSERT INTO t2 SELECT * FROM generateRandom('k UInt32, v UInt32') LIMIT 1;
INSERT INTO t2 SELECT if (number % 14 = 0, toString(number), '') FROM numbers(2000);
INSERT INTO t2 SELECT number % 2 FROM numbers(10);
insert into t2 select number % 4, toString(number) from numbers(2000, 1000);
INSERT INTO t2 SELECT number as k from numbers_mt(10);
insert into t2 select number from numbers_mt(1e6);
INSERT INTO t2 SELECT number, number FROM numbers(0, 2);
INSERT INTO t2 SELECT number, number FROM numbers(10, 5);
INSERT INTO t2 SELECT number, number from numbers(100);
INSERT INTO t2 SELECT number, number FROM numbers(15, 15);
INSERT INTO t2 SELECT number, number FROM numbers(2, 3);
insert into t2 select number, number from numbers(3000, 1000);
insert into t2 select number, number from numbers(4000, 1000);
INSERT INTO t2 SELECT number, number FROM numbers(5, 5);
insert into t2 select number, number from numbers(5000, 1000);
insert into t2 select number, toString(number) from numbers(2000, 1000);
INSERT INTO t2 SELECT quantileForEachState(0.10)([number]) FROM numbers(100);
INSERT INTO t2 SELECT toString(number), toDecimal64(number, 8) FROM system.numbers LIMIT 1000000;
INSERT INTO t2 VALUES ( 2 ), ( 3 ), ( 4 );
INSERT INTO t2 VALUES ('2020-01-01 12:00:00', 'fact1', 't2_val2'), ('2020-02-05 13:00:00', 'fact2', 't1_val2'), ('2019-01-01 12:00:00', 'fact4', 't2_val2');
insert into t2 values ('2023-05-31 00:00:00');
INSERT INTO t2 VALUES ('abc', [0], 1), ('def', [1, 2], 2);
INSERT INTO t2 VALUES (0, '');
INSERT INTO t2 VALUES (0, 0);
insert into t2 values (1),(2),(3),(4),(5);
INSERT INTO t2 VALUES (1),(2);
INSERT INTO t2 VALUES (1, '61f0c404-5cb3-11e7-907b-a6006ad3dba2');
INSERT INTO t2 VALUES (1, 'a'), (2, 'b'), (2, 'c');
INSERT INTO t2 VALUES (1, 'abc'), (2, 'def');
INSERT INTO t2 VALUES (1, 1), (1, NULL), (1, 2);
INSERT INTO t2 VALUES (1, 1);
INSERT INTO t2 VALUES (1, 2);
INSERT INTO t2 values (1,1), (1, Null);
INSERT INTO t2 VALUES (2), (3);
INSERT INTO t2 VALUES (2, '2');
insert into t2 values (2, 'w'), (4, 'y');
INSERT INTO t2 VALUES (2, 2), (3, 3);
insert into t2 values (2.4);
INSERT INTO t2 VALUES (3, 'd'), (3, 'e'), (4, 'f');
INSERT INTO t2 VALUES (3, 4), (5, 6), (7, 8);
INSERT INTO t2 VALUES (369, 50);
INSERT INTO t2 VALUES (4), (5), (6);
INSERT INTO t2 values (4, 3, 4);
INSERT INTO t2 VALUES (6, 'ghi');
INSERT INTO t2 VALUES (6666, 48);
INSERT INTO t2 VALUES (928386547), (1541944097), (2086579505), (1990427322), (-542998757), (390253678), (554855248), (203290629), (1504693323);
INSERT INTO t2 VALUES (NULL,NULL), (2,2), (3,33), (4,42);
insert into t2 values('2', 's', 2);
insert into t2(a, b) values (2, 'two'), (3, 'three');
insert into t20 select number, number from numbers_mt(50);
insert into t21 select number, number from numbers_mt(1e6);
insert into t22 select number, number from numbers_mt(1e6);
INSERT INTO t2_00203 VALUES ('ccc', 4, 3, 2), ('ddd', 7, 6, 5);
INSERT INTO t2_00816 VALUES (1, 456);
INSERT INTO t2_00826 (a) values (2), (3);
INSERT INTO t2_00826 values (1,1), (1,2);
insert into t2_00844 values('1','name1');
insert into t2__fuzz_0 select * from generateRandom() limit 1;
INSERT INTO t2__fuzz_47 VALUES (1);
insert into t2_local values (1), (2), (3);
INSERT INTO t2_local VALUES('partition1', 3,3);
INSERT INTO t2_local VALUES('partition2', 6,6);
insert into t2_shard values (42);
INSERT INTO t3 (id, value3) VALUES (1, 'val31');
insert into t3 select number % 4, toString(number) from numbers(3000, 1000);
insert into t3 select number from numbers_mt(1e6);
insert into t3 select number, number from numbers(6000, 1000);
insert into t3 select number, number from numbers(7000, 1000);
insert into t3 select number, number from numbers(8000, 1000);
insert into t3 select number, toString(number) from numbers(3000, 1000);
INSERT INTO t3 SELECT quantileIfState(0.10)(number, number % 2) FROM numbers(100);
INSERT INTO t3 VALUES (1);
INSERT INTO t3 VALUES (1, 1);
INSERT INTO t3 values (1,1), (1, Null);
insert into t3 values (3);
INSERT INTO t3 VALUES (5, 6), (7, 8), (9, 10);
insert into t3 values('3', 's', 3);
insert into t3_00848 (id) values ('r');
insert into t4 select number from numbers_mt(1e6);
INSERT INTO t4 SELECT quantileMergeState(0.10)(state) FROM (SELECT quantileState(0.10)(number) as state FROM numbers(100));
INSERT INTO t4 VALUES (1);
INSERT INTO t4 values (1,1), (1, Null);
insert into t4 values('4', 's', 4);
insert into t5 select number from numbers_mt(1e6);
INSERT INTO t5 SELECT quantileOrNullState(0.10)(number) FROM numbers(100);
INSERT INTO t5 VALUES (3, 13000, 73.90, 83);
insert into t50 select number, multiIf(number < 5, 1, number < 50, 0, number < 55, 1, number < 100, 0, number < 105, 1, 0), '' from numbers(150);
insert into t6 select number from numbers_mt(1e6);
INSERT INTO t6 SELECT quantileOrDefaultState(0.10)(number) FROM numbers(100);
INSERT INTO t64 SELECT (1 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (1 - toInt64(intExp2(24)) + number) AS x, x, x, x, x, x, x, x FROM numbers(129);
INSERT INTO t64 SELECT (1 - toInt64(intExp2(32)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (1 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(513);
INSERT INTO t64 SELECT (1 - toInt64(intExp2(48)) + number) AS x, x, x, x, x, x, x, x FROM numbers(1025);
INSERT INTO t64 SELECT (1 - toInt64(intExp2(56)) + number) AS x, x, x, x, x, x, x, x FROM numbers(2049);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(11);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(24)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(24)) + number) AS x, x, x, x, x, x, x, x FROM numbers(11);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(32)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(32)) + number) AS x, x, x, x, x, x, x, x FROM numbers(11);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(48)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(48)) + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(56)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(56)) + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(64);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(24)) + number) AS x, x, x, x, x, x, x, x FROM numbers(128);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(24)) + number) AS x, x, x, x, x, x, x, x FROM numbers(129);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(32)) + number) AS x, x, x, x, x, x, x, x FROM numbers(64);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(32)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(512);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(513);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(48)) + number) AS x, x, x, x, x, x, x, x FROM numbers(1024);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(48)) + number) AS x, x, x, x, x, x, x, x FROM numbers(1025);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(56)) + number) AS x, x, x, x, x, x, x, x FROM numbers(2048);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(56)) + number) AS x, x, x, x, x, x, x, x FROM numbers(2049);
INSERT INTO t64 SELECT (intExp2(16) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (intExp2(16) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(16) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(11);
INSERT INTO t64 SELECT (intExp2(16) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(64);
INSERT INTO t64 SELECT (intExp2(16) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (intExp2(24) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(129);
INSERT INTO t64 SELECT (intExp2(24) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(24) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(11);
INSERT INTO t64 SELECT (intExp2(24) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(128);
INSERT INTO t64 SELECT (intExp2(24) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(129);
INSERT INTO t64 SELECT (intExp2(32) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(257);
INSERT INTO t64 SELECT (intExp2(32) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (intExp2(32) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(32) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (intExp2(32) - 2 + number) AS x, x, x, x, x, x, x, x FROM numbers(2);
INSERT INTO t64 SELECT (intExp2(32) - 2 + number) AS x, x, x, x, x, x, x, x FROM numbers(3);
INSERT INTO t64 SELECT (intExp2(32) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(256);
INSERT INTO t64 SELECT (intExp2(32) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(257);
INSERT INTO t64 SELECT (intExp2(32) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(64);
INSERT INTO t64 SELECT (intExp2(32) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
INSERT INTO t64 SELECT (intExp2(40) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(513);
INSERT INTO t64 SELECT (intExp2(40) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(40) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (intExp2(40) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(512);
INSERT INTO t64 SELECT (intExp2(40) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(513);
INSERT INTO t64 SELECT (intExp2(48) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(1025);
INSERT INTO t64 SELECT (intExp2(48) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(48) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (intExp2(48) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(1024);
INSERT INTO t64 SELECT (intExp2(48) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(1025);
INSERT INTO t64 SELECT (intExp2(56) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(2049);
INSERT INTO t64 SELECT (intExp2(56) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(56) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT (intExp2(56) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(2048);
INSERT INTO t64 SELECT (intExp2(56) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(2049);
INSERT INTO t64 SELECT (intExp2(63) + number * intExp2(62)) AS x, x, x, x, x, x, x, x FROM numbers(10);
INSERT INTO t64 SELECT (intExp2(8) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
INSERT INTO t64 SELECT 42 AS x, x, x, x, x, x, x, x FROM numbers(4);
INSERT INTO t64 SELECT number AS x, x, x, x, x, x, x, x FROM numbers(1);
INSERT INTO t64 SELECT number AS x, x, x, x, x, x, x, x FROM numbers(2);
INSERT INTO t64 SELECT number AS x, x, x, x, x, x, x, x FROM numbers(intExp2(8));
INSERT INTO t64 SELECT number AS x, x, x, x, x, x, x, x FROM numbers(intExp2(9));
INSERT INTO t64 SELECT toInt32(number)-1 AS x, x, x, x, x, x, x, x FROM numbers(2);
INSERT INTO t64 SELECT toInt32(number)-1 AS x, x, x, x, x, x, x, x FROM numbers(3);
insert into t7 select number from numbers_mt(100);
INSERT INTO t7 SELECT quantileResampleState(0.10, 1, 2, 42)(number, number) FROM numbers(100);
insert into t8 select number from numbers_mt(100);
INSERT INTO t8 SELECT quantileState(0.10)(number) FROM numbers(100);
insert into t9 select number from numbers_mt(100);
INSERT INTO t9 SELECT quantileArrayResampleOrDefaultIfState(0.10, 1, 2, 42)([number], number, number % 2) FROM numbers(100);
INSERT INTO t_00284_lc_str SELECT toString(number) FROM numbers_mt(1e6);
INSERT INTO t_00284_str SELECT toString(number) FROM numbers_mt(1e6);
insert into t_00575 values ('2018-02-20');
insert into t_00712_1 values (1, 1);
insert into t_00712_2 values ('2018-01-01', 1, 1);
insert into t_00725_2 values(1,1);
insert into t_00725_2 values(2,2);
insert into t_00725_3 values(1,1);
insert into t_00725_3 values(2,2);
insert into t_00725_4 values(1,1,'a'),(2,2,'b');
insert into t_00818 values(1,1,'a'), (2,2,'b');
INSERT INTO t_01411 (str) SELECT concat('asdf', toString(number % 10000)) FROM numbers(1000000);
INSERT INTO t_01411_num (num) SELECT number % 1000 FROM numbers(1000000);
INSERT INTO t_01906 SELECT   number,   toDateTime('2020-01-01 00:00:00'),   1 FROM numbers(100);
INSERT INTO t_02156_log SELECT number, toString(number) FROM numbers(10000);
INSERT INTO t_02156_mt1 SELECT number, toString(number) FROM numbers(10000);
INSERT INTO t_02156_mt2 SELECT number, toString(number) FROM numbers(10000);
INSERT INTO t_02267 (b, a, c) SELECT 0, ['x'], ['1','2','3','4','5','6'] FROM numbers(1) ;
INSERT INTO t_02267 (b, a, c) SELECT 1, [],   ['1','2','3','4','5','6'] FROM numbers(300000);
INSERT INTO t_02559 SELECT number, if (number < 100 OR number > 1000,   [toString(number)],   emptyArrayString())   FROM numbers(2000);
INSERT INTO t_02559 SELECT number, number, number FROM numbers(3);
INSERT INTO t_02709__fuzz_23 values (1, 1, '2023-12-01 00:00:00.000');
INSERT INTO t_02784 SELECT number, number FROM numbers(1);
INSERT INTO t_02833 VALUES ((1, 2));
INSERT INTO t_02848_mt1 SELECT number, toString(number) FROM numbers(100);
INSERT INTO t_02848_mt2 SELECT number, toString(number), number, 'aaaabbbbccccddddtestxxxyyy' FROM numbers(100);
INSERT INTO t_1 select rowNumberInAllBlocks(), *, '1984-01-01' from t_random_1 limit 1000000;
insert into t_2354_dist_with_external_aggr select number, toString(number) as s, toFixedString(s, 100) from numbers_mt(5e7);
insert into t_306 values (1);
INSERT INTO t__fuzz_282 VALUES (1, 2, 3) (1, 2, 4) (2, 3, 4), (2, 3, 5);
insert into t__fuzz_307 select * from generateRandom() limit 10;
INSERT INTO t_arr VALUES ([1]) ([]) ([1, 2, 3]) ([1, 2]);
INSERT INTO t_array_index VALUES (['a', 'b'], ['c', 'd']);
INSERT INTO t_async_insert_02193_1 FORMAT JSONEachRow {"id": 4, "s": "ddd"};
INSERT INTO t_async_insert_02193_1 SETTINGS async_insert = 1 FORMAT CSV 1,aaa ;
INSERT INTO t_async_insert_02193_1 SETTINGS async_insert = 1 FORMAT Values (2, 'bbb');
INSERT INTO t_async_insert_02193_1 VALUES (3, 'ccc');
INSERT INTO t_async_insert_skip_settings VALUES (1);
INSERT INTO t_async_insert_skip_settings VALUES (2);
INSERT INTO t_async_inserts_flush FORMAT JSONEachRow {"a": "str"} INSERT INTO t_async_inserts_flush FORMAT JSONEachRow {"a": 100} {"a": 200} INSERT INTO t_async_inserts_flush VALUES (3) (4) (5);
INSERT INTO t_async_inserts_flush FORMAT JSONEachRow {"a": 10} {"a": 20};
INSERT INTO t_async_inserts_flush VALUES (1) (2);
INSERT INTO t_bad_constraint SELECT number, randomPrintableASCII(100) FROM numbers(10000);
insert into t_buf values (1);
INSERT INTO t_cache_sparse SELECT number, 0 FROM numbers(10000);
INSERT INTO t_cache_sparse SELECT number, number FROM numbers(10000);
INSERT INTO t_collisions VALUES (1, 1);
INSERT INTO t_comp_subcolumns SELECT number, 'a', [range(number % 11), range(number % 13)] FROM numbers(20000);
INSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);
INSERT INTO t_constraints_where VALUES (1, 7);
INSERT INTO t_d SELECT number FROM numbers(2);
insert into t_delete_projection select number, toString(number) from numbers(8192 * 10);
insert into t_delete_skip_index select number, toString(number) from numbers(8192 * 10);
insert into t_different_dbs select number % 1000, number % 1000 from numbers_mt(1e6);
insert into t_dist values (1);
insert into t_distinct_limit select '2021-12-15', -1 from numbers(1e6);
insert into t_distinct_limit select '2022-12-15', 1 from numbers(1e6);
insert into t_distinct_limit select '2022-12-16', 11 from numbers(1);
insert into t_distinct_limit select '2023-12-16', 12 from numbers(1);
insert into t_distinct_limit select '2023-12-16', 13 from numbers(1);
insert into t_distinct_limit select '2023-12-16', 14 from numbers(1);
INSERT INTO t_dst VALUES (1, 1);
INSERT INTO t_dst VALUES (1, 2);
INSERT INTO t_dst VALUES (1, 3);
INSERT INTO t_enum(x) SELECT x from t_source WHERE x in ('hello', 'world');
INSERT INTO t_enum16 Values('hello'),('world'),('hello');
INSERT INTO t_enum8 Values('hello'),('world'),('hello');
INSERT INTO t_ephemeral_02205_1 VALUES (DEFAULT, 2);
INSERT INTO t_filter SELECT toString(number), ['foo', 'bar'], number, toUInt8(number) FROM numbers(1000);
INSERT INTO t_flatten_object VALUES ('{"id": 1, "obj": {"k1": 1, "k2": {"k3": 2, "k4": [{"k5": 3}, {"k5": 4}]}}, "s": "foo"}');
INSERT INTO t_flatten_object VALUES ('{"id": 2, "obj": {"k2": {"k3": "str", "k4": [{"k6": 55}]}, "some": 42}, "s": "bar"}');
INSERT INTO t_flatten_tuple VALUES (([(1, 'a'), (2, 'b')], 3, ('c', 4)));
INSERT INTO t_full_pk SELECT number % 10, number % 4 = 0 FROM numbers(1000);
INSERT INTO t_full_pk SELECT number % 10, number % 6 = 0 FROM numbers(1000);
INSERT INTO t_func_to_subcolumns VALUES (1, [1, 2, 3], 'abc', map('foo', 1, 'bar', 2)) (2, [], NULL, map());
INSERT INTO t_functions_to_subcolumns_alias VALUES (1, (100, 'abc'), map('foo', 1, 'bar', 2)) (2, NULL, map());
INSERT INTO t_get_subcolumn VALUES (1, [42], ['foo']);
INSERT INTO t_github_json (message_raw) FORMAT JSONEachRow {"message_raw": "{\"type\":\"PushEvent\", \"created_at\": \"2022-01-04 07:00:00\", \"actor\":{\"avatar_url\":\"https://avatars.githubusercontent.com/u/123213213?\",\"display_login\":\"github-actions\",\"gravatar_id\":\"\",\"id\":123123123,\"login\":\"github-actions[bot]\",\"url\":\"https://api.github.com/users/github-actions[bot]\"},\"repo\":{\"id\":1001001010101,\"name\":\"some-repo\",\"url\":\"https://api.github.com/repos/some-repo\"}}"} SELECT * FROM t_github_json ORDER BY event_type, repo_name;
insert into t_group_by_lowcardinality select today() as p_date, Null as val from numbers(100);
insert into t_group_by_lowcardinality select today() as p_date, toString(number/5) as val from numbers(10000);
insert into t_hardware_error values (1), (2), (3), (4), (5);
insert into t_hardware_error values (11), (12), (13), (14), (15);
insert into t_hardware_error values (6), (7), (8), (9), (10);
INSERT INTO t_having SELECT number, number FROM numbers(1000);
INSERT INTO t_in_tuple_index VALUES ('1', 33, 'insta'), ('2', 33, 'insta');
INSERT INTO t_index_non_materialized VALUES (1);
INSERT INTO t_inter_02233 VALUES (1),(3),(3),(6),(6),(6);
INSERT INTO t_json FORMAT JSONEachRow {"id": 1, "data": {"k1": "aa", "k2": {"k3": "bb", "k4": "c"}}} {"id": 2, "data": {"k1": "ee", "k5": "ff"}};
INSERT INTO t_json FORMAT JSONEachRow {"id": 1, "data": {"k1":[{"k2":"aaa","k3":[{"k4":"bbb"},{"k4":"ccc"}]},{"k2":"ddd","k3":[{"k4":"eee"},{"k4":"fff"}]}]}};
INSERT INTO t_json FORMAT JSONEachRow {"id": 1, "data": {"name": "a", "value": 42 }}, {"id": 2, "data": {"name": "b", "value": 4200 }};
INSERT INTO t_json format JSONEachRow {"id": 1, "obj": {"foo": 1, "k1": 2}};
INSERT INTO t_json format JSONEachRow {"id": 2, "obj": {"foo": 1, "k2": 2}};
INSERT INTO t_json FORMAT JSONEachRow {"id": 3, "data": {"k5":"foo"}};
INSERT INTO t_json FORMAT JSONEachRow {"id": 3, "data": {"name": "a", "value": 42.123 }};
INSERT INTO t_json FORMAT JSONEachRow {"id": 4, "data": {"name": "a", "value": "some" }};
INSERT INTO t_json SELECT   number,   (     arrayMap(x -> 'col' || toString(x), range(number % 10)),     range(number % 10)   )::Map(FixedString(4), UInt64) FROM numbers(1000000);
INSERT INTO t_json SELECT id, m FROM t_map;
INSERT INTO t_json SELECT number, '{"k1": 1, "k2": 2}' FROM numbers(1000000);
INSERT INTO t_json SELECT number, (range(number % 10), range(number % 10))::Map(UInt64, UInt64) FROM numbers(1000000);
INSERT INTO t_json VALUES (1000001, '{"foo": 1}');
INSERT INTO t_json_10 FORMAT JSONAsObject {"a": {"b": 1, "c": [{"d": 10, "e": [31]}, {"d": 20, "e": [63, 127]}]}} {"a": {"b": 2, "c": []}} INSERT INTO t_json_10 FORMAT JSONAsObject {"a": {"b": 3, "c": [{"f": 20, "e": [32]}, {"f": 30, "e": [64, 128]}]}} {"a": {"b": 4, "c": []}} SELECT DISTINCT toTypeName(o) FROM t_json_10;
INSERT INTO t_json_14 VALUES (1, '{"key_10":65536,"key_11":"anve","key_0":{"key_1":{"key_2":1025,"key_3":1},"key_4":1,"key_5":256}}');
INSERT INTO t_json_14 VALUES (2, '{"key_0":[{"key_12":"buwvq","key_11":0.0000000255}]}');
INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 1, "arr": [{"k1": [{"k2": "aaa", "k3": "bbb"}, {"k2": "ccc"}]}]} INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 2, "arr": [{"k1": [{"k3": "ddd", "k4": 10}, {"k4": 20}], "k5": {"k6": "foo"}}]} SELECT toTypeName(obj) FROM t_json_17 LIMIT 1;
INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 1, "arr": [{"k1": [{"k2": "aaa"}]}]} INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 2, "arr": [{"k1": [{"k2": "bbb", "k3": [{"k4": 10}]}, {"k2": "ccc", "k3": [{"k4": 20}]}]}]} SELECT toTypeName(obj) FROM t_json_17 LIMIT 1;
INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 1, "arr": [{"k3": "qqq"}, {"k3": "www"}]} INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 2, "arr": [{"k1": [{"k2": "aaa"}], "k3": "eee"}]} INSERT INTO t_json_17 FORMAT JSONAsObject {"id": 3, "arr": [{"k1": [{"k2": "bbb", "k4": [{"k5": 10}]}, {"k2": "ccc", "k4": [{"k5": 20}]}], "k3": "rrr"}]} SELECT toTypeName(obj) FROM t_json_17 LIMIT 1;
INSERT INTO t_json_2 FORMAT JSONEachRow {"id": 1, "data" : {"k1": 1}};
INSERT INTO t_json_2 FORMAT JSONEachRow {"id": 1, "data" : {"k1": [1, 2]}};
INSERT INTO t_json_2 FORMAT JSONEachRow {"id": 1, "data": {"k1": 1, "k2" : 2}} {"id": 2, "data": {"k2": 3, "k3" : 4}};
INSERT INTO t_json_2 FORMAT JSONEachRow {"id": 3, "data": {"k3" : 10}} {"id": 4, "data": {"k2": 5, "k3" : "str"}};
INSERT INTO t_json_5 SELECT data FROM t_json_str_5;
INSERT INTO t_json_analyzer VALUES ('{"id": 2, "obj": {"k2": {"k3": "str", "k4": [{"k6": 55}]}, "some": 42}, "s": "bar"}');
INSERT INTO t_json_array FORMAT JSONEachRow {"id": 1, "arr": [{"k1": 1, "k2": {"k3": 2, "k4": 3}}, {"k1": 2, "k2": {"k5": "foo"}}]} INSERT INTO t_json_array FORMAT JSONEachRow {"id": 2, "arr": [{"k1": 3, "k2": {"k3": 4, "k4": 5}}]} SET output_format_json_named_tuples_as_objects = 1;
INSERT INTO t_json_array FORMAT JSONEachRow {"id": 1, "arr": [{"k1": [{"k2": "aaa", "k3": "bbb"}, {"k2": "ccc"}]}]} INSERT INTO t_json_array FORMAT JSONEachRow {"id": 2, "arr": [{"k1": [{"k3": "ddd", "k4": 10}, {"k4": 20}], "k5": {"k6": "foo"}}]} SELECT * FROM t_json_array ORDER BY id FORMAT JSONEachRow;
INSERT INTO t_json_attach_partition FORMAT JSONEachRow {"b": 1, "c" : {"k1": 1}};
INSERT INTO t_json_attach_partition FORMAT JSONEachRow {"b": 1, "c" : {"k1": [1, 2]}};
INSERT INTO t_json_bools VALUES ('{"k1": true, "k2": false}');
INSERT INTO t_json_desc FORMAT JSONAsObject {"k1": "q", "k2": [1, 2, 3]} ;
INSERT INTO t_json_desc FORMAT JSONAsObject {"k1": 10} ;
INSERT INTO t_json_empty_str VALUES (1, ''), (2, '{"k1": 1, "k2": "v1"}'), (3, '{}'), (4, '{"k1": 2}');
INSERT INTO t_json_field VALUES (1, (10, 'a')::Tuple(a UInt32, s String));
INSERT INTO t_json_field VALUES (2, ('sss', 300, 'b')::Tuple(a String, b UInt64, s String)), (3, (20, 'c')::Tuple(a UInt32, s String));
INSERT INTO t_json_field VALUES (4, map('a', 30, 'b', 400)), (5, map('s', 'qqq', 't', 'foo'));
INSERT INTO t_json_field VALUES (6, map(1, 2, 3, 4));
INSERT INTO t_json_local FORMAT JSONAsObject {"k1": 2, "k2": {"k3": "qqq", "k4": [44, 55]}} ;
insert into t_json_merge select number, format('{{ "k{0}": {0} }}', toString(number * 2)), format('{{ "k{0}": {0} }}', toString(number * 2 + 1)) from numbers(5);
insert into t_json_merge select number, format('{{ "k{0}": {0} }}', toString(number * 2)), format('{{ "k{0}": {0}, "k{1}": 222 }}', toString(number * 2 + 1), toString(number * 2)) from numbers(5, 5);
INSERT INTO t_json_mutations VALUES (1, 'q', '{"k1": 1, "k2": 2, "k3": [{"k4": "aaa"}, {"k4": "bbb"}]}');
INSERT INTO t_json_mutations VALUES (2, 'w', '{"k1": 3, "k2": 4, "k3": [{"k4": "ccc"}]}');
INSERT INTO t_json_mutations VALUES (3, 'e', '{"k1": 5, "k2": 6}');
INSERT INTO t_json_null FORMAT JSONEachRow {"id": 1, "data": {"k1": 1, "k2" : 2}} {"id": 2, "data": {"k2": 3, "k3" : 4}};
INSERT INTO t_json_null FORMAT JSONEachRow {"id": 3, "data": {"k3" : 10}} {"id": 4, "data": {"k2": 5, "k3" : "str"}};
INSERT INTO t_json_parallel SELECT materialize('{"k1":1, "k2": "some"}') FROM numbers_mt(500000);
INSERT INTO t_json_partitions FORMAT JSONEachRow {"id": 1, "obj": {"k1": "v1"}} {"id": 2, "obj": {"k2": "v2"}};
INSERT INTO t_json_sparse SELECT '{"k1": 2}' FROM numbers(200000);
INSERT INTO t_json_sparse VALUES ('{"k1": 1, "k2": {"k3": 4}}');
INSERT INTO t_json_str_5 FORMAT JSONAsString {"k1": 1, "k2": {"k4": [22, 33]}}, {"k1": 2, "k2": {"k3": "qqq", "k4": [44]}} ;
INSERT INTO t_json_wide_parts VALUES ('{"k1": 1}');
INSERT INTO t_json_wide_parts VALUES ('{"k2": 2}');
INSERT INTO t_key_condition_float VALUES (0.1), (0.2);
INSERT INTO t_key_condition_float VALUES (1), (2);
insert into t_l5ydey values (5, 6, 7, '8');
INSERT INTO t_large SELECT number + 1, number + 1 FROM numbers(100000);
INSERT INTO t_leading_zeroes VALUES (1, '00000', 00000, 0), (2, '0', 0, 0), (3, '00', 00, 0), (4, '01', 01, 1), (5, '+01', +01, 1);
INSERT INTO t_leading_zeroes VALUES (10, '0017', 0017, 17), (11, '0021', 0021, 21), (12, '0051', 0051, 51), (13, '00000123', 00000123, 123);
INSERT INTO t_leading_zeroes VALUES (14, '0b10000', 0b10000, 16), (15, '0x0abcd', 0x0abcd, 43981), (16, '0000.008', 0000.008, 0) INSERT INTO t_leading_zeroes VALUES (17, '1000.0008', 1000.0008, 1000), (18, '0008.0008', 0008.0008, 8);
INSERT INTO t_leading_zeroes VALUES (6, '-01', -01, -1), (7, '0001', 0001, 1), (8, '0005', 0005, 5), (9, '0008', 0008, 8);
INSERT INTO t_leading_zeroes_f VALUES (1, '00000', 00000, 0), (2, '00009.00009', 00009.00009, 9.00009), (3, '00009e9', 00009e9, 9e9), (4, '00009e09', 00009e09, 9e9), (5, '00009e0009', 00009e0009, 9e9);
INSERT INTO t_leading_zeroes_f VALUES (11, '+00000', +00000., 0), (12, '+00009.00009', +00009.00009, 9.00009), (13, '+00009e9', +00009e9, 9e9), (14, '+00009e09', +00009e09, 9e9), (15, '+00009e0009', +00009e0009, 9e9);
INSERT INTO t_leading_zeroes_f VALUES (6, '-00000', -00000.1, -0.1), (7, '-00009.00009', -00009.00009, -9.00009), (8, '-00009e9', -00009e9, -9e9), (9, '-00009e09', -00009e09, -9e9), (10, '-00009e0009', -00009e0009, -9e9);
INSERT INTO t_light SELECT number, number, number FROM numbers(10);
INSERT INTO t_light_r1 SELECT number, number, number FROM numbers(10);
INSERT INTO t_light_sync_r1 SELECT number, number, number FROM numbers(10);
INSERT INTO t_local VALUES (1), (2);
INSERT INTO t_local VALUES (1);
INSERT INTO t_lwd_mutations SELECT number, 0 FROM numbers(1000);
INSERT INTO t_map SELECT   number,   (     arrayMap(x -> 'col' || toString(x), range(number % 10)),     range(number % 10)   )::Map(String, UInt64) FROM numbers(1000000);
INSERT INTO t_map VALUES (map('a', 1, 'b', 2)) (map('a', 3, 'c', 4)), (map('b', 5, 'c', 6));
INSERT INTO t_map_02014 VALUES ('aaa', 'bbb', map('aaa', 'foo', 'bbb', 'bar'), map('aaa', 'foo', 'bbb', 'bar'));
INSERT INTO t_map_02014 VALUES (1, -1, map(1, 'foo', 2, 'bar'), map(-1, 'foo', 1, 'bar'), map(-1, 'foo', 1, 'bar'));
INSERT INTO t_map_contains VALUES (map('a', 1, 'b', 2)), (map('c', 3, 'd', 4));
INSERT INTO t_map_int_key FORMAT CSV "{1:2, 3: 4, 5 :6, 7 : 8}","{'2021-05-20':1, '2021-05-21': 2, '2021-05-22' :3, '2021-05-23' : 4}" ;
INSERT INTO t_map_null VALUES (map('a', 'b', 'c', 'd'), 'foo');
INSERT INTO t_materialize_column (i) VALUES (2);
INSERT INTO t_materialize_column VALUES (1);
INSERT INTO t_materialize_delete SELECT number, number FROM numbers(100);
INSERT INTO t_max_rows_to_read SELECT number FROM numbers(100);
INSERT INTO t_memory_compressed VALUES (1, 'foo', range(5), map('k1', 'v1'));
INSERT INTO t_memory_compressed VALUES (2, 'bar', range(5), map('k2', 'v2'));
INSERT INTO t_missed_subcolumns VALUES (1, 'aaa', '{"k1": {"k2": "foo"}, "k3": 5}');
INSERT INTO t_missed_subcolumns VALUES (2, 'bbb', '{"k1": {"k2": "fee"}, "k3": 4}');
INSERT INTO t_missed_subcolumns VALUES (3, 'ccc', '{"k1": {"k2": "foo", "k4": "baz"}, "k3": 4}');
INSERT INTO t_missed_subcolumns VALUES (4, 'ddd', '{"k1": {"k2": "foo"}, "k3": 4}');
INSERT INTO t_modify_from_lc_1 SELECT number, number FROM numbers(100000);
INSERT INTO t_modify_from_lc_2 SELECT number, number FROM numbers(100000);
INSERT INTO t_modify_to_nullable SELECT 1, number, 'foo' FROM numbers(10000);
INSERT INTO t_modify_to_nullable SELECT 2, number, if (number % 23 = 0, 'bar', '') FROM numbers(10000);
INSERT INTO t_move_to_prewhere SELECT 1, number % 2 = 0, number % 3 = 0, number % 5 = 0, repeat('a', 1000) FROM numbers(1000);
INSERT INTO t_move_to_prewhere SELECT 2, number % 2 = 0, number % 3 = 0, number % 5 = 0, repeat('a', 1000) FROM numbers(10);
insert into t_multi_prewhere select number, number, number from numbers(10000);
INSERT INTO t_mutations_nondeterministic VALUES (10, '2000-10-10'), (20, '2100-10-10');
INSERT INTO t_mutations_nondeterministic VALUES (10, '2020-10-10');
INSERT INTO t_mutations_nondeterministic VALUES (10, 10);
INSERT INTO t_mutations_nondeterministic VALUES (10, 20);
INSERT INTO t_mutations_nondeterministic VALUES (10, [20]);
INSERT INTO t_mutations_nondeterministic VALUES (10, initializeAggregation('uniqExactState', 1::UInt64));
INSERT INTO t_mutations_subcolumns VALUES (1, 'aaa', '{"k1": {"k2": "foo"}, "k3": 5}');
INSERT INTO t_mutations_subcolumns VALUES (1, '{"k1": 1}');
INSERT INTO t_mutations_subcolumns VALUES (2, 'bbb', '{"k1": {"k2": "fee"}, "k3": 4}');
INSERT INTO t_mutations_subcolumns VALUES (2, '{"k2": 1}');
INSERT INTO t_mutations_subcolumns VALUES (3, 'ccc', '{"k1": {"k2": "foo", "k4": "baz"}, "k3": 4}');
INSERT INTO t_mutations_subcolumns VALUES (3, '{"k3": 1}');
INSERT INTO t_mutations_subcolumns VALUES (4, 'ddd', '{"k1": {"k2": "foo"}, "k3": 4}');
INSERT INTO t_mutations_subcolumns VALUES (5, 'eee', '{"k1": {"k2": "foo"}, "k3": 4}');
INSERT INTO t_mutations_subcolumns VALUES (6, 'fff', '{"k1": {"k2": "foo"}, "k3": 4}');
INSERT INTO t_nested_modify VALUES (1, [2], ['aa']);
INSERT INTO t_nested_modify VALUES (2, [44, 55], ['bb', 'cc']);
INSERT INTO t_nested_tuple FORMAT JSONEachRow {"endUserIDs":{"_experience":{"aaid":{"id":"id_1","namespace":{"code":"code_1"},"primary":1},"mcid":{"id":"id_2","namespace":{"code":"code_2"},"primary":2}}}};
INSERT INTO t_nested_with_dots VALUES ((('a', 1), 'b'));
INSERT INTO t_nested_with_dots VALUES ([(1, [1])]);
INSERT INTO t_nested_with_dots VALUES ([1], [[1]]);
INSERT INTO t_nul VALUES (1) (NULL) (2) (NULL);
INSERT INTO t_obj select number, '{"a" : "' || toString(number) || '"}' FROM numbers(100);
INSERT INTO t_object_convert FORMAT JSONEachRow {"id": 3, "data": {"x": 1, "y" : 2}};
INSERT INTO t_object_convert SELECT 1, CAST(CAST('{"x" : 1}', 'Object(\'json\')'), 'Object(Nullable(\'json\'))');
INSERT INTO t_object_convert SELECT 2, CAST(CAST('{"y" : 2}', 'Object(\'json\')'), 'Object(Nullable(\'json\'))');
INSERT INTO t_object_convert2 SELECT 1, CAST(CAST('{"x" : 1}', 'Object(\'json\')'), 'Object(Nullable(\'json\'))');
INSERT INTO t_object_convert2 SELECT 2, CAST(CAST('{"y" : 2}', 'Object(\'json\')'), 'Object(Nullable(\'json\'))');
INSERT INTO t_parse_tuples VALUES (1, [[]]), (2, [[(500, -10)]]), (3, [[(500, '10')]]);
INSERT INTO t_parts_columns_filenames SELECT number, 0, 0, range(number % 5), range(number % 5) FROM numbers(10);
INSERT INTO t_parts_profile_events SELECT number FROM numbers(20);
INSERT INTO t_parts_profile_events VALUES (1);
INSERT INTO t_proj SELECT number + 1, number + 1 FROM numbers(1000);
INSERT INTO t_proj_external SELECT 1, number%2, number%4, number FROM numbers(100000) LIMIT 50000, 100000;
INSERT INTO t_proj_external SELECT 1, number%2, number%4, number FROM numbers(50000);
INSERT INTO t_projections_lwd SELECT number, number FROM numbers(100);
INSERT INTO t_read_in_order SELECT '2020-10-10', number % 10, number FROM numbers(100000);
INSERT INTO t_read_in_order SELECT '2020-10-11', number % 10, number FROM numbers(100000);
INSERT INTO t_read_in_order SELECT '2020-10-12', number, number FROM numbers(100000);
INSERT INTO t_read_in_order SELECT toDateTime('2020-10-10 00:00:00') + number, 1 / (number % 100 + 1), number FROM numbers(1000);
INSERT INTO t_read_in_order VALUES (0, 100), (1, 2), (1, 3), (1, 4), (2, 5);
INSERT INTO t_remove_sample_by VALUES (1);
INSERT INTO t_reverse_order_virt_col SELECT number, '1984-01-01' FROM numbers(1000000);
insert into t_row_exists values(1,1);
INSERT INTO t_s3_compressed_blocks SELECT number, randomPrintableASCII(128) from numbers(57344);
INSERT INTO t_s3_events_02496 SELECT number FROM numbers(10) SETTINGS s3_truncate_on_insert=1;
INSERT INTO t_s3_filter_02495 SELECT number FROM numbers(10) SETTINGS s3_truncate_on_insert=1;
INSERT INTO t_skip_index_in VALUES ('a', 'b', 'c');
INSERT INTO t_source (x) VALUES ('hello');
INSERT INTO t_source_part_is_intact SELECT   number,   if (number % 11 = 0, number, 0) FROM numbers(2000);
INSERT INTO t_sparse SELECT   number,   if (number % 10 = 0, number, 0),   if (number % 5 = 0, toString(number), ''),   if (number % 7 = 0, arrayMap(x -> toString(x), range(number % 10)), []),   if (number % 12 = 0, range(number % 10), []) FROM numbers (200);
INSERT INTO t_sparse SELECT   number,   if (number % 20 = 0, number, 0),   if (number % 50 = 0, toString(number), '') FROM numbers(1, 100000);
INSERT INTO t_sparse SELECT   number, number, toString(number) FROM numbers (1, 100000);
INSERT INTO t_sparse_02235 SELECT 0 FROM numbers(1000);
INSERT INTO t_sparse_02235 SELECT 1 FROM numbers(1000);
INSERT INTO t_sparse_1 VALUES (1, 6), (2, 1), (3, 0), (4, -1), (5, 0), (6, 0), (7, -2), (8, 0), (9, 0), (10, 4), (11, 0);
INSERT INTO t_sparse_alter SELECT   number,   if (number % 11 = 0, number, 0),   if (number % 13 = 0, toString(number), '') FROM numbers(2000);
INSERT INTO t_sparse_columns_clear SELECT [number], 0 FROM numbers(1000);
INSERT INTO t_sparse_detach SELECT number, number % 21 = 0 ? toString(number) : '' FROM numbers(10000);
INSERT INTO t_sparse_distinct SELECT number % 10, toString(number % 100 = 0) FROM numbers(100);
INSERT INTO t_sparse_distinct SELECT number, number % 100 = 0 FROM numbers(100000);
INSERT INTO t_sparse_distinct SELECT number, number % 6 FROM numbers(100000);
INSERT INTO t_sparse_distinct(id) SELECT number % 10 FROM numbers(100);
INSERT INTO t_sparse_full SELECT   number,   if (number % 10 = 0, number, 0),   if (number % 7 = 0, toString(number), '') FROM numbers(1000);
INSERT INTO t_sparse_full SELECT   number,   number,   toString(number) FROM numbers(500);
INSERT INTO t_sparse_intersect SELECT if (number % 10 = 0, number, 0), number FROM numbers(1000);
INSERT INTO t_sparse_intersect SELECT number, number FROM numbers(1000);
INSERT INTO t_sparse_mutation select number, if (number % 21 = 0, number, 0) FROM numbers(10000);
INSERT INTO t_sparse_mutations_1 SELECT 1, number, if (number % 21 = 0, 'foo', '') FROM numbers (10000);
INSERT INTO t_sparse_mutations_1 SELECT 2, number, if (number % 21 = 0, 'foo', '') FROM numbers (10000);
INSERT INTO t_sparse_mutations_2 SELECT 1, number, toString(number) FROM numbers (10000);
INSERT INTO t_sparse_mutations_3 SELECT 1, number, toString(tuple(1, 0, '1', '0', '')) FROM numbers (10000);
INSERT INTO t_sparse_mutations_4 SELECT number, 0 FROM numbers(10000);
INSERT INTO t_sparse_mutations_5 SELECT number, (0, 0) FROM numbers(10000);
INSERT INTO t_sparse_pk SELECT number % 10, number % 4 = 0 FROM numbers(1000);
INSERT INTO t_sparse_pk SELECT number % 10, number % 6 = 0 FROM numbers(1000);
INSERT INTO t_sparse_pk VALUES (0, 'a'), (0, 'b'), (1, ''), (2, ''), (2, 'e'), (3, 'f'), (4, 'g');
INSERT INTO t_sparse_reload SELECT number, 0 FROM numbers(100000);
INSERT INTO t_sparse_s3 SELECT 1, number % 2, '' FROM numbers(8192);
INSERT INTO t_sparse_s3 SELECT 10, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 11, number % 2, '' FROM numbers(8000);
INSERT INTO t_sparse_s3 SELECT 12, number % 2, 'foo' FROM numbers(192);
INSERT INTO t_sparse_s3 SELECT 13, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 14, number % 2, 'foo' FROM numbers(8192);
INSERT INTO t_sparse_s3 SELECT 15, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 16, number % 2, 'foo' FROM numbers(4730);
INSERT INTO t_sparse_s3 SELECT 17, number % 2, 'foo' FROM numbers(3462);
INSERT INTO t_sparse_s3 SELECT 18, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 2, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 3, number % 2, '' FROM numbers(8192);
INSERT INTO t_sparse_s3 SELECT 4, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 5, number % 2, '' FROM numbers(8192);
INSERT INTO t_sparse_s3 SELECT 6, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 7, number % 2, '' FROM numbers(8192);
INSERT INTO t_sparse_s3 SELECT 8, number % 2, '' FROM numbers(24576);
INSERT INTO t_sparse_s3 SELECT 9, number % 2, '' FROM numbers(8192);
INSERT INTO t_sparse_short_circuit select number, if (number % 21 = 0, number % 10 + 1, 0) FROM numbers(100000);
INSERT INTO t_sparse_sort_limit SELECT '2020-10-10', number % 10, number FROM numbers(100000);
INSERT INTO t_sparse_sort_limit SELECT '2020-10-11', number % 10, number FROM numbers(100000);
INSERT INTO t_src VALUES (1, 4);
insert into t_str values ('2020-02-02');
INSERT INTO t_subcolumns_local VALUES ([1, 2, 3], 'aaa', ('bbb', 'ccc'));
INSERT INTO t_subcolumns_sizes FORMAT JSONEachRow {"id": 1, "arr": [1, 2, 3], "n": null, "d": {"k1": "v1", "k2": [{"k3": 1, "k4": "v2"}, {"k3": 3}]}} INSERT INTO t_subcolumns_sizes FORMAT JSONEachRow {"id": 2, "arr": [0], "n": "foo", "d": {"k1": "v3", "k2": [{"k4": "v4"}, {"k3": "v5", "k5": 5}]}} OPTIMIZE TABLE t_subcolumns_sizes FINAL;
INSERT INTO t_summing_lc VALUES (1, 1, '2020-01-01'), (2, 1, '2020-01-02'), (1, 5, '2020-01-01'), (2, 5, '2020-01-02');
INSERT INTO t_transform_or SELECT uniqState(''), '0';
INSERT INTO t_ttl_modify_column VALUES (now());
INSERT INTO t_ttl_modify_column VALUES (now(), 23);
INSERT INTO t_tup VALUES (('foo', 1)) (('bar', 2)) (('baz', 42));
INSERT INTO t_tuple_element VALUES ((1, 'a'), (2, 'b'));
INSERT INTO t_tuple_null VALUES ((10)), ((20));
INSERT INTO t_tuple_numeric FORMAT JSONEachRow {"t":{"1":{"2":2,"3":3},"4":4}} SELECT toTypeName(t) FROM t_tuple_numeric LIMIT 1;
INSERT INTO t_tuple_numeric VALUES (((2, 3), 4));
insert into t_tuple_sparse values (0, 0);
INSERT INTO t_uncompressed_cache SELECT number, number FROM numbers(200);
INSERT INTO t_update_empty_nested SELECT 1, range(number % 10) FROM numbers(100000);
INSERT INTO t_uuid SELECT generateUUIDv4();
INSERT INTO t_uuid VALUES ('61f0c404-5cb3-11e7-907b-a6006ad3dba0'), ('992f6910-42b2-43cd-98bc-c812fbf9b683'), ('417ddc5d-e556-4d27-95dd-a34d84e46a50');
INSERT INTO t_uuid VALUES ('61f0c404-5cb3-11e7-907b-a6006ad3dba0');
INSERT INTO t_uuid VALUES (1, '417ddc5de5564d2795dda34d84e46a50', 'Example 1');
INSERT INTO t_uuid VALUES (2, '417ddc5d-e556-4d27-95dd-a34d84e46a51', 'Example 2');
INSERT INTO t_vertical_merges SELECT [], 1;
INSERT INTO t_vertical_merges SELECT NULL, 1;
INSERT INTO t_with_dots VALUES (1, [0, 0], 2, [1, 1, 3]);
INSERT INTO tab (id) VALUES (1);
INSERT INTO tab (k) VALUES (0);
insert into tab select 0, number % 3, 2 - intDiv(number, 3), (number % 3 + 1) * 10 from numbers(6);
insert into tab select 0, number % 3, 2 - intDiv(number, 3), (number % 3 + 1) * 100 from numbers(6);
insert into tab select cityHash64(number) from numbers(1000);
insert into tab select n from (SELECT number AS n FROM numbers(20)) nums semi left join (select number * 10 as n from numbers(2)) js2 using(n) settings max_block_size = 5;
insert into tab select number from numbers(2);
insert into tab select number from numbers(4);
insert into tab select number, number from numbers(10);
insert into tab select number, number from numbers(1000);
insert into tab select number, number from numbers(20);
insert into tab select number, number, number, number from numbers(5);
INSERT INTO tab SELECT rowNumberInBlock(), groupArray(s) FROM tab_x GROUP BY k%10;
insert into tab select toDateTime('2022-02-02') + number from numbers(4);
INSERT INTO tab VALUES ('') ('12345') ('341Jons54326ton') ('A2222222') ('Fairdale') ('Faredale') ('Jon1s2o3n') ('Jonson') ('Jonston') ('M\acDonald22321') ('MacDonald') ('S3344mith0000') ('Smith');
insert into tab values ('1', 'a'), ('2', 'b');
insert into tab values ('2018-01-21','2018-01-21 15:12:13','test');
insert into tab values ('2020-02-02 01:01:01');
insert into tab values ('61f0c404-5cb3-11e7-907b-a6006ad3dba0', 1), ('61f0c404-5cb3-11e7-907b-a6006ad3dba0', 2);
insert into tab values ('a'), ('bb'), ('a'), ('cc');
INSERT INTO tab VALUES ('AA') ('Aa');
INSERT INTO tab VALUES ('abc') ('aäoöuü') ('München');
INSERT INTO tab VALUES ('abcdef', ['c']), ('ghijkl', ['h', 'k']), ('mnopqr', ['n']);
INSERT INTO tab VALUES ('abcdefgh', 2, -2), ('12345678', 3, -3);
INSERT INTO tab VALUES ('Also no punycode') ('London-') ('Mnchen-3ya') ('No punycode') ('Rtting-3ya') ('XYZ no punycode');
INSERT INTO tab VALUES ('haystack', 'pattern\\');
INSERT INTO tab VALUES ('straße.münchen.de') ('') ('münchen');
INSERT INTO tab VALUES ('xxx..yyy..'), ('..........'), ('..xx..yyy.'), ('..........'), ('xxx.......');
INSERT INTO tab VALUES ((2, 2), 4);
insert into tab values (-1, -1, -1, -1, -1, -1, -1, -1, '61f0c404-5cb3-11e7-907b-a6006ad3dba0', 'a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', [1, 2, 3], (-1, -2), '2020-01-01', '2020-01-01 01:01:01', '2020-01-01 01:01:01', '123.456', 'a');
INSERT INTO tab VALUES (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, '61f0c404-5cb3-11e7-907b-a6006ad3dba0', 'a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', [1, 2, 3], (-1, -2), '2020-01-01', '2020-01-01 01:01:01', '2020-01-01 01:01:01', '123.456', '78.9101', 'a');
INSERT INTO tab VALUES (0, 'a');
INSERT INTO tab values (0, [2.2, 2.3]) (1, [3.1, 3.2, 3.3]);
INSERT INTO tab values (0, [2.2, 2.3]) (1, [3.1, 3.2]);
insert into tab values (1, 'aaaxxxaa\0xxx', 'x');
INSERT INTO tab VALUES (1, 'Hello ClickHouse'), (2, 'Hello World'), (3, 'Good Weather'), (4, 'Say Hello'), (5, 'OLAP Database'), (6, 'World Champion');
INSERT INTO tab VALUES (1, 'このコー');
insert into tab values (1, 1), (2, 2);
INSERT INTO tab VALUES (1, []);
INSERT INTO tab VALUES (1,1),(1,2),(1,3),(1,4),(1,5);
INSERT INTO tab VALUES (101, 'Alick a01'), (102, 'Blick a02'), (103, 'Click a03'), (104, 'Dlick a04'), (105, 'Elick a05'), (106, 'Alick a06'), (107, 'Blick a07'), (108, 'Click a08'), (109, 'Dlick a09'), (110, 'Elick a10'), (111, 'Alick b01'), (112, 'Blick b02'), (113, 'Click b03'), (114, 'Dlick b04'), (115, 'Elick b05'), (116, 'Alick b06'), (117, 'Blick b07'), (118, 'Click b08'), (119, 'Dlick b09'), (120, 'Elick b10');
INSERT INTO tab VALUES (101, 'Alick a01'), (102, 'Blick a02'), (103, 'Click a03'), (104, 'Dlick a04'), (105, 'Elick a05'), (106, 'Alick a06'), (107, 'Blick a07'), (108, 'Click a08'), (109, 'Dlick a09'), (110, 'Elick b10'), (111, 'Alick b01'), (112, 'Blick b02'), (113, 'Click b03'), (114, 'Dlick b04'), (115, 'Elick b05'), (116, 'Alick b06'), (117, 'Blick b07'), (118, 'Click b08'), (119, 'Dlick b09'), (120, 'Elick b10');
INSERT INTO tab VALUES (101, 'Alick 好'), (102, 'clickhouse你好'), (103, 'Click 你'), (104, 'Dlick 你a好'), (105, 'Elick 好好你你'), (106, 'Alick 好a好a你a你');
INSERT INTO tab VALUES (101, {'Alick':'Alick a01'}), (102, {'Blick':'Blick a02'}), (103, {'Click':'Click a03'}), (104, {'Dlick':'Dlick a04'}), (105, {'Elick':'Elick a05'}), (106, {'Alick':'Alick a06'}), (107, {'Blick':'Blick a07'}), (108, {'Click':'Click a08'}), (109, {'Dlick':'Dlick a09'}), (110, {'Elick':'Elick a10'}), (111, {'Alick':'Alick b01'}), (112, {'Blick':'Blick b02'}), (113, {'Click':'Click b03'}), (114, {'Dlick':'Dlick b04'}), (115, {'Elick':'Elick b05'}), (116, {'Alick':'Alick b06'}), (117, {'Blick':'Blick b07'}), (118, {'Click':'Click b08'}), (119, {'Dlick':'Dlick b09'}), (120, {'Elick':'Elick b10'});
INSERT INTO tab VALUES (123, 12345, 1234567890, 1234567890000000000, 123456789000000000000000000000000000000, 123456789000000000000000000000000000000000000000000000000000000000000000000000, 123, 12345, 1234567890, 1234567890000000000, 123456789000000000000000000000000000000, 123456789000000000000000000000000000000000000000000000000000000000000000000000, '61f0c404-5cb3-11e7-907b-a6006ad3dba0', 'a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', [1, 2, 3], (-1, -2), '2020-01-01', '2020-01-01 01:01:01', '2020-01-01 01:01:01', '123.456', '78.9101', 'a');
insert into tab values (2, 'aaaaa\0x', 'x');
INSERT INTO tab values (2, [2.2, 2.3, 2.4]) (3, [3.1, 3.2, 3.3]);
INSERT INTO tab VALUES (2,6),(2,7),(2,8),(2,9),(2,0);
INSERT INTO tab VALUES (201, 'rick c01'), (202, 'mick c02'), (203, 'nick c03');
INSERT INTO tab VALUES (42, 'Asia/Singapore') (43, 'Asia/Tokyo');
INSERT INTO tab VALUES (42, 'Asia/Singapore');
INSERT INTO tab VALUES (['a', 'b']);
insert into tab values(1, 1);
insert into tab values(1, 2);
insert into tab values(2, 1);
insert into tab(machine_id, name, timestamp) select 1, 'a_name', '2022-11-24 12:00:00';
INSERT INTO tab1 SELECT number, number, 1 from numbers(4);
insert into tab1 values (1, 2);
insert into tab1_copy values (2, 3);
INSERT INTO tab2 SELECT number + 2, number + 2 from numbers(4);
insert into tab2 select toDate('2020-02-02') + number, number, number from numbers(4);
insert into tab2 select toString(number), number, toString(number), toString(number), 0 from numbers(1e6);
insert into tab2 values (2, 3);
insert into tab2 values (6, 4);
insert into tab2 values (998, 999);
insert into tab3 select number, number, number, number from numbers(5);
insert into tab3 values (100, 4);
insert into tab3 values (1998, 1999);
insert into tab3 values (2, 3);
insert into tab3 values (5, 4);
insert into tab4 select number, number, number, number from numbers(5);
insert into tab5 select number, number, number, number from numbers(5);
INSERT INTO tab_00481 SELECT today() as date, number as value, '' as s, toFixedString('', 16) as m from system.numbers limit 42;
insert into tab_00484 select today(), number, 'abc' from system.numbers limit 81920;
insert into tab_00484 select today(), number, toFixedString('', 128) from system.numbers limit 10;
insert into tab_00484 select today(), number, toFixedString('', 128) from system.numbers limit 47;
insert into tab_00484 select today(), number, toFixedString('', 128) from system.numbers limit 8192;
insert into tab_00577 values ('2018-01-01', 0, 0);
insert into tab_00577 values ('2018-01-01', 2, 2), ('2018-01-01', 1, 1);
INSERT INTO tab_00610 VALUES ('2018-01-01', 1), ('2018-01-01', 2), ('2018-02-01', 3);
insert into tab_00612 values ( -1, 1, 0 );
insert into tab_00612 values (1, [1]);
insert into tab_00612 values (2, [2]);
INSERT INTO tab_00625 SELECT   today(),   number + 8190,   [toUInt16(number)],   [number + 8190] FROM system.numbers LIMIT 10;
INSERT INTO tab_00625 SELECT   today(),   number,   [toUInt16(number)],   [number] FROM system.numbers LIMIT 8190;
insert into tab_00650 values (1, [1, 2, 1, 1, 2, 1], ['a', 'a', 'b', 'a', 'b', 'b']);
insert into tab_00650 values (1, [1, Null, 2, 1, 1, 2, 1, Null, Null], ['a', 'a', 'a', 'b', 'a', 'b', 'b', 'b', 'a']);
insert into tab_00712_1 values (1, 2);
insert into tab_00712_2 values (1, 2), (1, 4);
insert into tab_00717 values ('a_1', 'b_1'), ('a_2', 'b_2');
insert into tab_00718 values ('a', 1);
INSERT INTO tab_annoy VALUES (0, (4.6, 2.3)), (1, (2.0, 3.2)), (2, (4.2, 3.4)), (3, (5.3, 2.9)), (4, (2.4, 5.2)), (5, (5.3, 2.3)), (6, (1.0, 9.3)), (7, (5.5, 4.7)), (8, (6.4, 3.5)), (9, (5.3, 2.5)), (10, (6.4, 3.4)), (11, (6.4, 3.2));
INSERT INTO tab_annoy VALUES (0, [1.0, 0.0]), (1, [1.1, 0.0]), (2, [1.2, 0.0]), (3, [1.3, 0.0]), (4, [1.4, 0.0]), (5, [0.0, 2.0]), (6, [0.0, 2.1]), (7, [0.0, 2.2]), (8, [0.0, 2.3]), (9, [0.0, 2.4]);
INSERT INTO tab_annoy VALUES (0, [1.0, 0.0]), (1, [1.1, 0.0]), (2, [1.2, 0.0]), (3, [1.3, 0.0]), (4, [1.4, 0.0]), (5, [1.5, 0.0]), (6, [0.0, 2.0]), (7, [0.0, 2.1]), (8, [0.0, 2.2]), (9, [0.0, 2.3]), (10, [0.0, 2.4]), (11, [0.0, 2.5]);
insert into tab_lc select number, toString(number % 10) from numbers(20000000);
INSERT INTO tab_usearch VALUES (0, (4.6, 2.3)), (1, (2.0, 3.2)), (2, (4.2, 3.4)), (3, (5.3, 2.9)), (4, (2.4, 5.2)), (5, (5.3, 2.3)), (6, (1.0, 9.3)), (7, (5.5, 4.7)), (8, (6.4, 3.5)), (9, (5.3, 2.5)), (10, (6.4, 3.4)), (11, (6.4, 3.2));
INSERT INTO tab_usearch VALUES (0, [1.0, 0.0]), (1, [1.1, 0.0]), (2, [1.2, 0.0]), (3, [1.3, 0.0]), (4, [1.4, 0.0]), (5, [0.0, 2.0]), (6, [0.0, 2.1]), (7, [0.0, 2.2]), (8, [0.0, 2.3]), (9, [0.0, 2.4]);
INSERT INTO tab_usearch VALUES (0, [1.0, 0.0]), (1, [1.1, 0.0]), (2, [1.2, 0.0]), (3, [1.3, 0.0]), (4, [1.4, 0.0]), (5, [1.5, 0.0]), (6, [0.0, 2.0]), (7, [0.0, 2.1]), (8, [0.0, 2.2]), (9, [0.0, 2.3]), (10, [0.0, 2.4]), (11, [0.0, 2.5]);
INSERT INTO tab_x VALUES (101, 'Alick a01'), (102, 'Blick a02'), (103, 'Click a03'), (104, 'Dlick a04'), (105, 'Elick a05'), (106, 'Alick a06'), (107, 'Blick a07'), (108, 'Click a08'), (109, 'Dlick a09'), (110, 'Elick a10'), (111, 'Alick b01'), (112, 'Blick b02'), (113, 'Click b03'), (114, 'Dlick b04'), (115, 'Elick b05'), (116, 'Alick b06'), (117, 'Blick b07'), (118, 'Click b08'), (119, 'Dlick b09'), (120, 'Elick b10');
INSERT INTO TABLE a SELECT number FROM system.numbers LIMIT 10;
insert into table APPLICATION values ('ApplicationA', 'BaseA'), ('ApplicationB', 'BaseB') , ('ApplicationC', 'BaseC');
insert into table DATABASE_IO values ('AppA', 'BaseA', '2020-01-01 00:00:00', 1000);
insert into table flows values (15169, 83948), (12322, 98989), (60068, 99990), (15169, 89898), (15169, 83948), (15169, 89898), (15169, 83948), (15169, 89898), (15169, 83948), (15169, 89898), (15169, 83948), (15169, 89898);
insert into table function null() select 1, 'str';
insert into table function file("data1622.json", "TSV", "value String") VALUES ('{"a":1}');
insert into table function file('/dev/null', 'JSON', 'number UInt64') select * from numbers(10);
insert into table function file('/dev/null', 'ORC', 'number UInt64') select * from numbers(10);
INSERT INTO TABLE FUNCTION file('01721_file/test/data.TSV', 'TSV', 'id UInt32') VALUES (1);
insert into table function file('data.avro', 'Parquet', 'x UInt64') select * from numbers(10);
insert into table function file('data.native.zst') select * from test settings engine_file_truncate_on_insert=1;
insert into table function file('data_02250.jsonl') select NULL as x settings engine_file_truncate_on_insert=1;
insert into table function file(concat(currentDatabase(), '/test2/data.Parquet'), 'Parquet', 'number UInt64') select * from numbers(10) settings engine_file_truncate_on_insert=1;
insert into table function file(concat(currentDatabase(), '/test2/data.Parquet'), 'Parquet', 'number UInt64') select * from numbers(10, 10);
insert into table function file(concat(currentDatabase(), '/test4/data.Parquet.gz'), 'Parquet', 'number UInt64') select * from numbers(10) settings engine_file_truncate_on_insert=1;
insert into table function file(concat(currentDatabase(), '/test4/data.Parquet.gz'), 'Parquet', 'number UInt64') select * from numbers(10, 10);
insert into table function hdfs('hdfs://localhost:12222/test_02458_2.tsv', 'TSV', 'column1 UInt32, column2 UInt32, column3 UInt32') select 4, 5, 6 settings hdfs_truncate_on_insert=1;
insert into table function hdfs('hdfs://localhost:12222/test_2.tsv', 'TSV', 'column1 UInt32, column2 UInt32, column3 UInt32') select 4, 5, 6 settings hdfs_truncate_on_insert=1;
insert into table function hdfs('hdfs://localhost:12222/test_3.tsv', 'TSV', 'column1 UInt32, column2 UInt32, column3 UInt32') select 7, 8, 9 settings hdfs_truncate_on_insert=1;
INSERT INTO TABLE FUNCTION remote('127.0.0.2', currentDatabase(), 'simple') VALUES (1);
INSERT INTO TABLE FUNCTION remote('127.0.0.2', currentDatabase(), 'simple') VALUES (2);
INSERT INTO TABLE or_bug VALUES (0), (1);
INSERT INTO TABLE product_fp32_fp32 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE product_fp32_fp64 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE product_fp64_fp64 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE product_int32_uint64 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE product_uint64_uint64 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE product_uint8_fp64 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE product_uint8_uint8 (x, y) values ([1, 2], [3, 4]);
INSERT INTO TABLE t_json_2 FORMAT JSONEachRow {"id": 1, "data": {"k1" : [1, 2, 3.3]}};
INSERT INTO TABLE t_json_2 FORMAT JSONEachRow {"id": 1, "data": {"k1" : [{"k2" : 11}, {"k3" : 22}]}} {"id": 2, "data": {"k1" : [{"k3" : 33}, {"k4" : 44}, {"k3" : 55, "k4" : 66}]}};
INSERT INTO TABLE t_json_2 FORMAT JSONEachRow {"id": 2, "data": {"k1" : ["a", 4, "b"]}};
INSERT INTO TABLE t_json_null FORMAT JSONEachRow {"id": 1, "data": {"k1" : [{"k2" : 11}, {"k3" : 22}]}} {"id": 2, "data": {"k1" : [{"k3" : 33}, {"k4" : 44}, {"k3" : 55, "k4" : 66}]}};
INSERT INTO TABLE tab VALUES ('hello', 'shark'), ('world', 'eagle');
INSERT INTO TABLE table_with_version VALUES(1, '1', 1, 1);
INSERT INTO TABLE table_with_version VALUES(1, '1', 2, 1);
INSERT INTO TABLE table_with_version VALUES(3, '3', 65555, -1);
INSERT INTO TABLE table_with_version VALUES(3, '3', 65555, 1);
INSERT INTO TABLE table_with_version_replicated_1 VALUES(1, '1', 1, 1);
INSERT INTO TABLE table_with_version_replicated_1 VALUES(1, '1', 2, 1);
INSERT INTO TABLE table_with_version_replicated_1 VALUES(3, '3', 65555, -1);
INSERT INTO TABLE table_with_version_replicated_1 VALUES(3, '3', 65555, 1);
INSERT INTO TABLE test1(year, uv) select '2021',uniqThetaState(toInt64(1));
INSERT INTO TABLE test1(year, uv) select '2021',uniqThetaState(toInt64(2));
INSERT INTO TABLE test1(year, uv) select '2021',uniqThetaState(toInt64(3));
INSERT INTO TABLE test1(year, uv) select '2021',uniqThetaState(toInt64(4));
INSERT INTO TABLE test1(year, uv) select '2022',uniqThetaState(toInt64(1));
INSERT INTO TABLE test1(year, uv) select '2022',uniqThetaState(toInt64(3));
INSERT INTO TABLE test2(year, uv) select '2021',1;
INSERT INTO TABLE test2(year, uv) select '2021',2;
INSERT INTO TABLE test2(year, uv) select '2021',3;
INSERT INTO TABLE test2(year, uv) select '2021',4;
INSERT INTO TABLE test2(year, uv) select '2022',1;
INSERT INTO TABLE test2(year, uv) select '2022',3;
INSERT INTO TABLE test_02187 VALUES ('nothing', 1);
INSERT INTO TABLE test_02187 VALUES ('something', 1);
insert into table1 (dt, id, arr) values ('2019-01-14', 1, ['aaa']);
INSERT INTO table1 SELECT number FROM numbers(21);
INSERT INTO table1 SELECT number FROM numbers_mt(1, 10);
INSERT INTO table1 SELECT number, number FROM numbers(10);
INSERT INTO table1 SELECT number-205, number FROM numbers(10);
INSERT INTO table1 SELECT number-205, number FROM numbers(400, 10);
INSERT INTO table1 VALUES ('', '00000000-0000-0000-0000-000000000000');
INSERT INTO table1 VALUES ('', '417ddc5d-e556-4d27-95dd-a34d84e46a50');
insert into table1 values ('1');
INSERT INTO table1 VALUES ('a', '2018-01-01') ('b', '2018-01-01') ('c', '2018-01-01');
INSERT INTO table1 VALUES ('notEmpty', '417ddc5d-e556-4d27-95dd-a34d84e46a50');
INSERT INTO table1 VALUES (1, 2), (1, 4);
INSERT INTO table1 VALUES('', '');
insert into table1 values('a1','b1','2019-02-05 16:50:00'),('a1','b1','2019-02-05 16:55:00');
INSERT INTO table1 VALUES('aasq', 'xxz');
INSERT INTO table1 VALUES('qqq', 'aaa');
INSERT INTO table1 VALUES('qwerty', 'string');
INSERT INTO table1 VALUES('zxcqwer', '');
INSERT INTO table1 VALUES(-1, -1, 2, 1);
INSERT INTO table1 VALUES(-10.0 ,0.0, 10.0, 0.0);
INSERT INTO table1 VALUES(-2, -3, -1, -2);
INSERT INTO table1 VALUES(-84, -91, -83, -90);
INSERT INTO table1 VALUES(-84, 1, -83, 2);
INSERT INTO table1 VALUES(-84, 181, -83, 182);
INSERT INTO table1 VALUES(-87, 0, -85, 3);
INSERT INTO table1 VALUES(-88, 90, -86, 91);
INSERT INTO table1 VALUES(-89, 1, -88, 2);
INSERT INTO table1 VALUES(-90, 181, -89, 182);
INSERT INTO table1 VALUES(0);
INSERT INTO table1 VALUES(0, 2, 1, 3);
INSERT INTO table1 VALUES(1);
INSERT INTO table1 VALUES(10);
INSERT INTO table1 VALUES(11);
INSERT INTO table1 VALUES(12);
INSERT INTO table1 VALUES(13);
INSERT INTO table1 VALUES(14);
INSERT INTO table1 VALUES(15);
INSERT INTO table1 VALUES(2);
INSERT INTO table1 VALUES(3);
INSERT INTO table1 VALUES(4);
INSERT INTO table1 VALUES(5);
INSERT INTO table1 VALUES(55.72076200, 37.59813500, 14);
INSERT INTO table1 VALUES(55.72076200, 37.59813500, 15);
INSERT INTO table1 VALUES(55.72076201, 37.59813500, 15);
INSERT INTO table1 VALUES(55.76324100, 37.66018300, 15);
INSERT INTO table1 VALUES(55.77922738, 37.63098076, 15);
INSERT INTO table1 VALUES(6);
INSERT INTO table1 VALUES(7);
INSERT INTO table1 VALUES(8);
INSERT INTO table1 VALUES(9);
INSERT INTO table1__fuzz_19 SELECT number - 205, number FROM numbers(10);
INSERT INTO table1__fuzz_19 SELECT number - 205, number FROM numbers(400, 10);
insert into table2 (dt, id, arr) values ('2019-01-14', 1, ['aaa','bbb','ccc']);
INSERT INTO table2 SELECT number * 2, number * 20 FROM numbers(11);
INSERT INTO table2 SELECT number * 2, number * 20 FROM numbers(6);
INSERT INTO table2 SELECT number FROM numbers_mt(11, 10);
INSERT INTO table2 SELECT number-205, number FROM numbers(10);
INSERT INTO table2 SELECT number-205, number FROM numbers(400, 10);
INSERT INTO table2 VALUES ('D', 'd', '2018-01-01') ('B', 'b', '2018-01-01') ('C', 'c', '2018-01-01');
insert into table2 values('b1','2019-02-05 16:50:00'),('b1','2019-02-05 16:55:00');
INSERT INTO table3 SELECT number * 30, number * 300 FROM numbers(10);
INSERT INTO table3 SELECT number-205, number FROM numbers(10);
INSERT INTO table3 SELECT number-205, number FROM numbers(400, 10);
INSERT INTO table4 SELECT number, number, toString(number) FROM numbers(1000);
INSERT INTO table5 SELECT number * 5, number * 50, number * 500 FROM numbers(10);
INSERT INTO table_01 SELECT toDate('2019-10-01'), number FROM system.numbers LIMIT 1000;
insert into table_01323_many_parts select number from numbers(100000);
insert into table_02152 values ('a_1', 'b_1') ('a_2', 'b_2') ('a_1', 'b_3') ('a_2', 'b_2');
INSERT INTO table_02513 SELECT number+11*13*1000 FROM numbers(20);
INSERT INTO table_02916 VALUES (1234, 'abcd');
insert into table_1 values (1, 'a'), (2, 'bb'), (3, 'ccc'), (4, 'dddd');
insert into table_2 values (4, 'dddd'), (5, 'eeeee'), (6, 'ffffff'), (7, 'ggggggg');
INSERT INTO table_a VALUES (1, 'foo', 'foo'), (2, 'foo', 'foo'), (3, 'bar', 'bar');
INSERT INTO table_b VALUES (1, 'bar', 'bar'), (2, 'bar', 'bar'), (3, 'test', 'test'), (4, NULL, '');
INSERT INTO table_csv_01375 SELECT number as n, toString(n) as s FROM numbers(10);
INSERT INTO table_float VALUES (1.2, 1) (1.3, 2) (1.4, 3) (1.5, 4);
INSERT INTO table_for_alter VALUES (1, '1');
INSERT INTO table_for_alter VALUES (2, '2');
INSERT INTO table_for_alter VALUES (3, '3');
INSERT INTO table_for_alter VALUES(toDate('2019-10-01'), 'a', 1, 'aa', 1, 1, 1);
INSERT INTO table_for_alter VALUES(toDate('2019-10-02'), 'b', 2, 'bb', 2, 2, 2, 1, 2);
INSERT INTO table_for_rename (date, key, value1, value2) SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1) from numbers(20,10);
INSERT INTO table_for_rename (date, key, value1, value2) SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1) from numbers(9);
INSERT INTO table_for_rename (date, key, value4, value5) SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1) from numbers(10, 10);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(10, 10);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(20,10);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(9);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(10, 10);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(9);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number + 2) from numbers(20, 10);
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number) from numbers(9);
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(10, 10);
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(20,10);
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(9);
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(10, 10);
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(9);
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number + 2) from numbers(20, 10);
INSERT INTO table_for_rename_nested (date, key, n.x, n.y, value1) SELECT toDate('2019-10-01'), number, [number + 1, number + 2, number + 3], ['a', 'b', 'c'], [[toString(number)]] FROM numbers(10);
INSERT INTO table_for_rename_nested (date, key, n.x, n.y, value1) SELECT toDate('2019-10-01'), number, [number + 1, number + 2, number + 3], ['a', 'b', 'c'], toString(number) FROM numbers(10);
INSERT INTO table_for_rename_pk SELECT toDate('2019-10-01') + number % 3, number, number, number, toString(number), toString(number) from numbers(9);
INSERT INTO table_for_rename_with_primary_key SELECT toDate('2019-10-01') + number % 3, number, number, number, toString(number), toString(number) from numbers(9);
INSERT INTO table_for_reset_setting VALUES (1, '1');
INSERT INTO table_for_reset_setting VALUES (2, '2');
INSERT INTO table_for_synchronous_mutations1 select number, number from numbers(100000);
INSERT INTO table_for_synchronous_mutations_no_replication select number, number from numbers(100000);
INSERT INTO table_for_ttl SELECT now() - INTERVAL 2 DAY, 3, toString(number) from numbers(2000, 1000);
INSERT INTO table_for_ttl SELECT now() - INTERVAL 2 YEAR, 1, toString(number) from numbers(1000);
INSERT INTO table_for_ttl SELECT now(), 4, toString(number) from numbers(3000, 1000);
INSERT INTO table_function_dictionary_source_table VALUES (0, 0);
INSERT INTO table_function_dictionary_source_table VALUES (1, 1);
INSERT INTO table_gcd SELECT * FROM table_lz4;
INSERT INTO table_gcd_codec_date SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_date32 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_datetime SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_datetime64 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_decimal128 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_decimal256 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_decimal32 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_decimal64 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_int128 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_int16 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_int256 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_int32 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_int64 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_int8 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_one_hundred_ones SELECT 1 FROM numbers(100);
INSERT INTO table_gcd_codec_one_hundred_zeros SELECT 0 FROM numbers(100);
INSERT INTO table_gcd_codec_only_zeros VALUES (0), (0), (0);
INSERT INTO table_gcd_codec_uint128 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_uint16 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_uint256 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_uint32 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_uint64 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_gcd_codec_uint8 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO table_log_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');
INSERT INTO table_lz4 SELECT * FROM generateRandom() LIMIT 50;
insert into table_map select map('k1', [number, number + 2, number * 2]) from numbers(6);
insert into table_map select map('k2', [number, number + 2, number * 2]) from numbers(6);
insert into table_map select map('key1', number, 'key2', number * 2) from numbers(1111, 3);
insert into table_map select map(number, number), number, number, [number, number, number], [number*2, number*3, number*4] from numbers(1000, 3);
insert into table_map select map(number, number+5), number from numbers(1111,4);
INSERT INTO table_map SELECT number, map('key1', number, 'key2', number * 2) FROM numbers(1111, 3);
INSERT INTO table_map SELECT number, map('key3', number, 'key2', number + 1, 'key4', number + 2) FROM numbers(100, 4);
insert into table_map values ('2020-01-01', map(1, 0, 2, -1));
insert into table_map values ('2020-01-01', map(1, 0, 2, 1));
insert into table_map values ({'name':'zhangsan', 'age':'10'}, 'name', ['name', 'age'], ['zhangsan', '10']), ({'name':'lisi', 'gender':'female'},'age',['name', 'gender'], ['lisi', 'female']);
insert into table_map values ({'name':'zhangsan', 'gender':'male'}), ({'name':'lisi', 'gender':'female'});
insert into table_map values ({'name':'zhangsan', 'gender':'male'}, 'name'), ({'name':'lisi', 'gender':'female'}, 'gender');
insert into table_map values(map('k1', [1,2,3], 'k2', [4,5,6])), (map('k0', [], 'k1', [100,20,90]));
INSERT INTO table_map_with_key_integer SELECT '2020-01-01', map(-1, 'a', 0, 'b', toInt128('1234567898765432123456789'), 'c', toInt128('-1234567898765432123456789'), 'd');
INSERT INTO table_map_with_key_integer VALUES ('2020-01-01', map('00001192-0000-4000-8000-000000000001', 1, '00001192-0000-4000-7000-000000000001', 2));
INSERT INTO table_map_with_key_integer VALUES ('2020-01-01', map('2020-01-01', 1, '2020-01-02', 2, '1970-01-02', 3));
INSERT INTO table_map_with_key_integer VALUES ('2020-01-01', map(-1, 1, 2147483647, 2, -2147483648, 3));
INSERT INTO table_map_with_key_integer VALUES ('2020-01-01', map(127, 1, 0, 1, -1, 1)) ('2020-01-01', map());
INSERT INTO table_merge_tree_02525 VALUES (1, 'a'), (2, 'b');
INSERT INTO table_merge_tree_02525 VALUES (3, 'c');
INSERT INTO table_MySQLWire SELECT number FROM numbers(10);
INSERT INTO table_one SELECT intDiv(number, 10), number  FROM numbers(100);
INSERT INTO table_rename_with_default (date, key, value1) SELECT toDateTime(toDate('2019-10-01') + number % 3, 'Asia/Istanbul'), number, toString(number) from numbers(9);
INSERT INTO table_rename_with_ttl SELECT toDate('2018-10-01') + number % 3, toString(number) from numbers(9);
INSERT INTO table_rename_with_ttl SELECT toDateTime(toDate('2019-10-01') + number % 3, 'Asia/Istanbul'), toDateTime(toDate('2018-10-01') + number % 3, 'Asia/Istanbul'), toString(number), toString(number) from numbers(9);
INSERT INTO table_set VALUES (0), (1), (2);
INSERT INTO table_stripe_log_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');
INSERT INTO table_tiny_log_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');
insert into table_to_merge_a values (1,'a');
insert into table_to_merge_a values (1,'b');
insert into table_to_merge_a values (1,'c');
insert into table_to_merge_b values (2,'a');
insert into table_to_merge_b values (2,'b');
insert into table_to_merge_c values (3,'a');
insert into table_to_merge_c values (3,'b');
insert into table_to_merge_c values (3,'c');
INSERT INTO table_tsv_01375 SELECT number as n, toString(n) as s FROM numbers(10);
INSERT INTO table_with_column_ttl VALUES (now() - INTERVAL 10 MONTH, 3, 27);
INSERT INTO table_with_column_ttl VALUES (now() - INTERVAL 4 MONTH, 2, 45);
INSERT INTO table_with_compact_parts SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number) from numbers(9);
INSERT INTO table_with_complex_default FORMAT JSONEachRow {"i":0, "n": 0} SELECT * FROM table_with_complex_default;
INSERT INTO table_with_defaults_on_aliases (col1) VALUES (1);
INSERT INTO table_with_defaults_on_aliases (col1) VALUES (2);
INSERT INTO table_with_defaults_on_aliases (col1) VALUES (3);
INSERT INTO table_with_dot_column select '2020-01-01', 'Hello', 'World';
INSERT INTO table_with_dot_column select '2024-01-01', 'Hello', 'World';
INSERT INTO table_with_enum_column_for_csv_insert FORMAT CSV 102,2 SELECT * FROM table_with_enum_column_for_csv_insert;
INSERT INTO table_with_enum_column_for_json_insert FORMAT JSONEachRow {"Id":102,"Value":2} SELECT * FROM table_with_enum_column_for_json_insert;
INSERT INTO table_with_enum_column_for_tsv_insert FORMAT TSV 102  2 INSERT INTO table_with_enum_column_for_tsv_insert FORMAT TabSeparatedRaw 103 1 SELECT * FROM table_with_enum_column_for_tsv_insert ORDER BY Id;
INSERT INTO table_with_function_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
INSERT INTO table_with_lc_key VALUES(1, 'hello', 'world');
INSERT INTO table_with_multi_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
INSERT INTO table_with_pk_clear SELECT number, number * number, toString(number), toString(number * number) FROM numbers(1000);
INSERT INTO table_with_single_pk SELECT number, toString(number % 10) FROM numbers(10000000);
INSERT INTO table_with_string_key VALUES(1, 'hello', 'world');
INSERT INTO table_with_version VALUES (1, '1', 1, -1);
INSERT INTO table_with_version VALUES (2, '2', 2, -1);
INSERT INTO table_with_version_replicated_1 VALUES (1, '1', 1, -1);
INSERT INTO table_with_version_replicated_1 VALUES (2, '2', 2, -1);
INSERT INTO table_without_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
INSERT INTO tableFile_00968 SELECT number FROM system.numbers LIMIT 10;
insert into tableIn values(1);
insert into tableIn values(2);
INSERT INTO tableMergeTree_00968 SELECT number FROM system.numbers LIMIT 100;
INSERT INTO tags(id, seqs) VALUES ('id1', [1,2,3]), ('id2', [0,2,3]), ('id1', [1,3]);
INSERT INTO target SELECT * FROM numbers(10000);
insert into tb values ('2017-12-15', 1, 1);
INSERT INTO tb1 VALUES (1, [10, 20, 30, 10, 20, 30, 10, 20, 30, 10, 20, 30, 10, 20, 30, 10, 20, 30, 10, 20, 30]), (2, [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), (3, [6, 3, 4]);
INSERT INTO tb2 VALUES (14, [139, 87, 110, 68, 54, 50, 51, 53, 133, 86, 141, 97, 156, 94, 149, 95, 140, 77, 61, 50, 54, 47, 133, 72, 152, 94, 148, 105, 162, 101, 160, 87, 63, 53, 55, 54, 151, 103, 189, 108, 183, 113, 175, 113, 178, 90, 71, 62, 62, 65, 165, 109, 181, 115, 182, 121, 178, 114, 170]);
INSERT INTO tb2 VALUES (3,[10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34]);
insert into tba select number%500, 20220822 from numbers(1e6);
insert into tbl select number / 4, number, 0 from numbers(16);
INSERT INTO tbl SELECT number, number * 2, number * 3, number * 4, number * 5 FROM system.numbers LIMIT 10;
INSERT INTO tbl VALUES ('0562380c-d1f3-4091-83d5-8c972f534317');
insert into tbl values ('123', 123);
insert into tbl values ('2021-04-01 00:01:02', 1, '123', 4), ('2021-04-01 01:01:02', 1, '12', 4), ('2021-04-01 02:11:02', 2, '345', 4), ('2021-04-01 04:31:02', 2, '2', 4), ('2021-04-02 00:01:02', 1, '1234', 4), ('2021-04-02 00:01:02', 2, '123', 4), ('2021-04-02 00:01:02', 3, '12', 4), ('2021-04-02 00:01:02', 4, '1', 4);
INSERT INTO tbl VALUES (1, 3), (2, 2), (1, 4), (1, 1);
insert into tbl2 values (1);
INSERT INTO tdm VALUES (now());
INSERT INTO tdm2 VALUES (toUnixTimestamp('2000-01-01 13:12:12')), (toUnixTimestamp('2000-01-01 14:12:12')), (toUnixTimestamp('2000-01-01 15:12:12'));
INSERT INTO tdm__fuzz_23 FORMAT Values (1);
INSERT INTO temp (id, field1, field2, field3, field4, field5, field6, field7, field8, event_at, order_id, identity) VALUES ('1011','1d83904a-c31d-4a6c-bbf0-217656b46444','1d83904a-c31d-4a6c-bbf0-217656b46444',-200,0,'FOO','BAR','','1d83904a-c31d-4a6c-bbf0-217656b46444','2022-12-18 03:14:56','','dispatcher'),('10112222334444','1d83904a-c31d-4a6c-bbf0-217656b46444','1d83904a-c31d-4a6c-bbf0-217656b46444',12300,0,'FOO','BAR','','1d83904a-c31d-4a6c-bbf0-217656b46444','2022-12-17 23:37:18','1d83904a-c31d-4a6c-bbf0-217656b46444','other');
INSERT INTO temp VALUES (32, 32), (64, 64), (128, 128), (256, 256);
INSERT INTO temp_tab SELECT number FROM system.numbers LIMIT 1;
INSERT INTO temporary_table VALUES (1), (2), (3);
insert into tesd_dedupl values (1, 1);
INSERT INTO test   SELECT number, argMaxState(number::String, '2023-04-12 16:23:01'::DateTime)   FROM numbers(9)   GROUP BY number;
INSERT INTO test ("0") SELECT 'Hello, world!';
INSERT INTO test ("0") VALUES ('Hello, world!');
INSERT INTO test ("\\") VALUES ('Hello, world!');
INSERT INTO test (*) VALUES ('d1', 1, 0), ('d2', 1, 0), ('d6', 1, 0), ('d4', 1, 0), ('d6', 2, 1), ('d3', 1, 0), ('d1', 2, 1), ('d5', 1, 0), ('d4', 2, 1), ('d1', 3, 0), ('d1', 4, 1), ('d4', 3, 0), ('d1', 5, 0);
INSERT INTO test (*) VALUES ('d4', 1, 0), ('d6', 2, 1), ('d3', 1, 0), ('d1', 2, 1), ('d5', 1, 0), ('d4', 2, 1), ('d1', 3, 1), ('d1', 4, 1), ('d4', 3, 0), ('d1', 5, 0), ('d2', 2, 1), ('d2', 3, 0), ('d3', 2, 1), ('d3', 3, 0);
INSERT INTO test (*) VALUES ('d6', 1, 0), ('d4', 1, 0), ('d6', 2, 1), ('d3', 1, 0), ('d1', 2, 1), ('d5', 1, 0), ('d4', 2, 1);
INSERT INTO test (a, b, c, p.at1, p.at2) VALUES (now(), 1, 2, ['foo', 'bar'], ['baz', 'qux']);
insert into test (a,b) values (1,null), (2,3), (4, 5), (6,null);
insert into test (data) select 1;
insert into test (dt, id, val) values ('2017-01-01', 1, 0);
insert into test (dt, id, val) values ('2017-01-01', 1, 10);
insert into test (dt, id, val) values ('2017-01-01', 1, null);
INSERT INTO test (num) VALUES (1), (2), (10), (15), (23);
INSERT INTO test (x) VALUES (1), (2), (3);
INSERT INTO test (x) VALUES (1);
INSERT INTO test (x, y) VALUES (1, 1), (2, 2), (3, 3);
INSERT INTO test (x, y, z) VALUES (1, 1, 'a'), (2, 2, 'b'), (3, 3, 'c');
INSERT INTO test FORMAT CSV 1,RU INSERT INTO test FORMAT CSV 1, SELECT * FROM test ORDER BY code;
INSERT INTO test FORMAT JSONEachRow {"i": 123, "d": "2022-05-03"};
INSERT INTO test FORMAT JSONEachRow {"i": 456, "d": "2022-05-03 01:02:03"};
INSERT INTO test FORMAT Values (1, today());
insert into test select '1', '00000000-0000-0000-0000-000000000000';
INSERT INTO test SELECT '1', '11', '111' FROM numbers(3);
insert into test select '2', '00000000-0000-0000-0000-000000000000';
INSERT INTO test SELECT '2', '22', '22' FROM numbers(3);
insert into test select '3', '00000000-0000-0000-0000-000000000000';
insert into test select '4', '00000000-0000-0000-0000-000000000000';
insert into test select '5', '00000000-0000-0000-0000-000000000000';
INSERT INTO test SELECT 'case1', number%3, 1 FROM numbers(9);
INSERT INTO test SELECT 'case1', number%3, 2 FROM numbers(9);
INSERT INTO test SELECT 'case2', number%3, 1 FROM numbers(9) ;
INSERT INTO test SELECT 'case2', number%3, 1 FROM numbers(9);
INSERT INTO test SELECT 'case2', number%3, 2 FROM numbers(9);
INSERT INTO test SELECT 'case3', number%3, 1 FROM numbers(9) SETTINGS insert_deduplication_token = 'case3test1';
INSERT INTO test SELECT 'case3', number%3, 2 FROM numbers(9) SETTINGS insert_deduplication_token = 'case3test2';
INSERT INTO test SELECT 'case4', number%3, 1 FROM numbers(9) SETTINGS insert_deduplication_token = 'case4test1' ;
INSERT INTO test SELECT 'case4', number%3, 1 FROM numbers(9) SETTINGS insert_deduplication_token = 'case4test1';
INSERT INTO test SELECT 'case4', number%3, 2 FROM numbers(9) SETTINGS insert_deduplication_token = 'case4test2';
insert into test select (number % 2 ? NULL : 'World')::LowCardinality(Nullable(String)) from numbers(2);
INSERT INTO test SELECT (number, number) FROM numbers(1000000);
insert into test select * from file(02458_data.jsoncompacteachrow);
insert into test select * from file(02458_data.jsonl);
insert into test select * from generateRandom() limit 10;
insert into test select * from generateRandom(42) limit 1;
insert into test select * from hdfsCluster('test_cluster_two_shards_localhost', 'hdfs://localhost:12222/test_02536.jsonl') settings use_structure_from_insertion_table_in_table_functions=0;
insert into test select * from numbers(10) settings engine_file_truncate_on_insert=1;
insert into test select * from numbers(10);
insert into test select * from numbers(10, 10);
INSERT INTO test SELECT * FROM numbers(1000000);
insert into test select * from s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/a.tsv');
insert into test select * from urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/a.tsv', 'TSV');
insert into test select *, _file, _path from file(02483_data.LineAsString);
insert into test select *, today() from numbers(100);
insert into test select 0 from numbers(10);
INSERT INTO test SELECT 1, 'test';
insert into test select 1;
insert into test select 2;
insert into test select arrayJoin(range(10000));
insert into test select c1 from input() format CSV 1,2;
insert into test select intDiv(number,100) from numbers(10000000);
insert into test select number % 2 ? NULL : 42 as x from numbers(2);
insert into test select number == 3 ? 'some value' : null from numbers(5);
INSERT INTO test SELECT number AS key, sipHash64(number) AS val FROM numbers(512);
INSERT INTO test SELECT number DIV 1024, number % 1024 FROM numbers(1048576);
INSERT INTO test SELECT number DIV 32, number % 32 FROM numbers(1024);
INSERT INTO test SELECT number FROM numbers(10,100);
INSERT INTO test SELECT number FROM numbers(100);
insert into test select number from numbers(5);
insert into test select number from numbers(6);
INSERT INTO test SELECT number, 'test' FROM numbers(1, 100);
INSERT INTO test SELECT number, argMaxState(number::String, '2023-04-12 16:23:01'::DateTime) FROM numbers(990) GROUP BY number;
insert into test select number, number from numbers(1e3);
INSERT INTO test select number, number from numbers(5);
INSERT INTO test select number, number from numbers(5,2);
insert into test select number, number, '2022-01-01 00:00:00' from numbers(1000000);
INSERT INTO test SELECT number, number, toString(number), number from numbers(4);
INSERT INTO test SELECT number, randomString(1000) FROM numbers(0, 10000);
INSERT INTO test SELECT number, randomString(1000) FROM numbers(10000, 10000);
INSERT INTO test SELECT number, randomString(1000) FROM numbers(20000, 10000);
INSERT INTO test SELECT number, toString(number) FROM numbers(100);
insert into test select number, toString(number) from numbers(1000000);
INSERT INTO test SELECT number, tuple(number, arrayMap(x -> tuple(number + 1, number + 2), range(number % 10))) FROM numbers(100000);
insert into test select toDate('2023-01-05') AS day, number from numbers(10);
INSERT INTO test SELECT toDate('2023-04-17'), 1;
INSERT INTO test SELECT toDate('2023-04-19'), 0;
INSERT INTO test SELECT toDate('2023-04-20'), 0;
INSERT INTO test SELECT toString(intDiv(number, 8)) FROM numbers(100);
insert into test select uniqState(number) as x, number as y from numbers(10) group by number order by x, y;
insert into test select uniqStateForEachMapForEachMap(map(1, [map(1, [number, number])])) from numbers(10);
insert into test select uniqStateForEachResample(30, 75, 30)([number, number + 1], 30) from numbers(10);
insert into test select uniqStateMap(map(1, number)) from numbers(10);
insert into test select uniqStateMapForEachResample(30, 75, 30)([map(1, number)], 30) from numbers(10);
insert into test select x + 1, y from file(02458_data.jsonl);
insert into test select x from file(02458_data.jsonl);
insert into test select x, 1 from file(02458_data.jsoncompacteachrow);
insert into test select x, 1 from file(02458_data.jsonl);
insert into test select x, y from file(02458_data.jsonl);
insert into test select y as x from file(02458_data.jsonl);
insert into test select y from file(02458_data.jsonl);
INSERT INTO test VALUES ('1', 'NEW', array('a', 'b'), now());
INSERT INTO test values ('1.1.1.1');
INSERT INTO test VALUES ('2000-01-02 03:04:05.123'), ('2001-02-03 04:05:06.789');
insert into test values ('2017-04-01', '1396-01-12') ,('2017-04-02', '1396-01-13');
INSERT INTO test VALUES ('2017-09-10', [1, 2, 3, 4, 5, 6, 7, NULL]);
INSERT INTO test VALUES ('2018-01-01');
insert into test values ('2020-01-01', 1, '');
insert into test values ('2020-01-02', 1, '');
INSERT INTO test values ('2020-05-13 16:38:45', 1);
INSERT INTO test VALUES ('2020-10-15 00:00:00');
INSERT INTO test VALUES ('2020-10-15 12:00:00');
INSERT INTO test VALUES ('2020-10-16 00:00:00');
insert into test values ('a', 'x') ('a', 'y') ('b', 'x') ('b', 'y');
INSERT INTO test VALUES ('goodbye', 'test');
insert into test values ('hello world', 1662336000241);
INSERT INTO test VALUES ('hello'), ('world'), ('xyz'), (NULL);
INSERT INTO test VALUES ('hello', 'test');
INSERT INTO test VALUES ('Hello, world!');
insert into test values ('printer1', '2006-02-07 06:28:15');
insert into test values ('val1'), ('val2'), ('val3');
INSERT INTO test VALUES ('x', 'Hello');
INSERT INTO test VALUES ('y', 'World');
INSERT INTO test VALUES (-1, -1, -1, -1);
INSERT INTO test VALUES (0), (1), (2);
insert into test values (0);
INSERT INTO test VALUES (1), (2), (3);
INSERT INTO test VALUES (1);
INSERT INTO test VALUES (1, 'a');
insert into test values (1, 10, 100), (10, 1, 10), (100, 100, 1);
INSERT INTO test VALUES (1, 2, -0.0001, 1.5, 0.5) (-2, 0, 2.5, -4, -5) (4, 5, 5, 0, 7);
INSERT INTO test VALUES (1, 3, 3), (1, 4, 3), (2, 5, 4), (2, 2, 4);
INSERT INTO test VALUES (1,0,1),(1,0,2),(1,0,3),(1,0,4),(1,0,5),(1,0,6),(1,1,7),(0,0,7);
INSERT INTO test VALUES (1.12345111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111);
INSERT INTO test VALUES (111, 'abc');
INSERT INTO test VALUES (2), (3);
INSERT INTO test VALUES (2, 'a');
INSERT INTO test VALUES (3, 'a');
INSERT INTO test VALUES (4);
INSERT INTO test VALUES (4, 'a');
INSERT INTO test VALUES (5), (6);
INSERT INTO test VALUES (5, 'a');
INSERT INTO test VALUES (6, 'a');
INSERT INTO test VALUES (7, 'a');
INSERT INTO test VALUES ([1, -3, 0, 1], [1.0, 0.4, -0.1], [1, 3, 1]);
insert into test values (nan);
INSERT INTO test values (toIPv4('8.8.8.8'));
insert into test values('1'), ('1.1'), ('1.2'), ('1.12');
INSERT INTO test VALUES('2020-01-01 00:00:00', '2020-01-01 00:01:00', '2020-01-01 00:02:00.11', '2020-01-01 00:03:00', '2020-01-01 00:04:00.22', '2020-01-01 00:05:00', '2020-01-01 00:06:00', '2020-01-01 00:06:00');
INSERT INTO test VALUES(1), (0), (null);
INSERT INTO test VALUES(1, 2)(0, 3)(1, 4)(0, 5);
insert into test values(1,1,1),(2,2,2);
insert into test values(1.0 , 2.0, 3.0);
insert into test values(null, 1),('', 2),('s', 1);
INSERT INTO test VALUES(toDate('2023-10-09'));
INSERT INTO test WITH number * 2 AS num2 SELECT number, num2 FROM system.numbers LIMIT 3;
insert into test(arr) values ([['a'], ['b', 'c']]);
INSERT INTO test(c1, c2, c3) VALUES ('', '', '1'), ('', '', '2'),('v1', 'v2', '3'),('v1', 'v2', '4'),('v1', 'v2', '5');
INSERT INTO test(id, track, codec) VALUES(1, 0, 'h264');
INSERT INTO test(id, track, codec, content) VALUES(2, 0, 'h264', 'CONTENT');
INSERT INTO test(id,a) VALUES (1,1),(2,2),(3,3);
INSERT INTO test(id,a) VALUES (4,4),(5,5),(6,6);
INSERT INTO test(id,a) VALUES (7,7),(8,8),(9,9);
INSERT INTO test(start,end) VALUES (1,3),(2,7),(3,999),(4,7),(5,8);
INSERT INTO test01603(f64) SELECT 1 / (number + 1) FROM system.numbers LIMIT 1000;
INSERT INTO test02008 VALUES (tuple(3.3, 5.5, 6.6));
INSERT INTO test02008 VALUES (tuple(tuple(1, 2), tuple(3, 4)));
INSERT INTO test02008 VALUES (tuple(tuple(5, 6), tuple(7, 8)));
INSERT INTO test02313 SELECT number % 2 + 1 AS a, number % 2 AS b, number FROM numbers(10);
INSERT INTO test02315 SELECT number % 2 as a, number as b FROM numbers(10);
INSERT INTO test02416 SELECT number % 2 as a, number as b FROM numbers(10);
INSERT INTO test02910 (i, jString) SELECT 1, '{"a":"123"}';
INSERT INTO test02910_second SELECT number, number, '2023-10-28 11:11:11.11111', ['a'] FROM numbers(10);
INSERT INTO test02910_second SELECT number, number, '2023-10-28 11:11:11.11111', ['b'] FROM numbers(10);
INSERT INTO test02910_second SELECT number, number, '2023-10-28 11:11:11.11111', ['c', 'd'] FROM numbers(10);
INSERT INTO test02910_second SELECT number, number, '2023-10-28 11:11:11.11111', [] FROM numbers(10);
INSERT INTO test1 (`pt`, `brand_name`, `total_indirect_order_cnt`, `total_indirect_gmv`) VALUES ('20230625', 'LINING', 2232, 1008710), ('20230625', 'adidas', 125, 58820), ('20230625', 'Nike', 1291, 1033020), ('20230626', 'Nike', 1145, 938926), ('20230626', 'LINING', 1904, 853336), ('20230626', 'adidas', 133, 62546), ('20220626', 'LINING', 3747, 1855203), ('20220626', 'Nike', 2295, 1742665), ('20220626', 'adidas', 302, 122388);
INSERT INTO test1 SELECT * FROM numbers(10000);
insert into test1 select * from numbers(11, 20);
insert into test1 select number, number + 100 from numbers(10);
INSERT INTO test1 SELECT toString(number) FROM numbers(10000);
insert into test1 values ('2020-09-01 00:01:02', 1), ('2020-09-01 20:01:03', 2), ('2020-09-02 00:01:03', 3);
INSERT INTO test1 VALUES ('id0', now(), 3, false) SELECT last_value(value) OVER (PARTITION BY id ORDER BY time ASC) as last_value FROM test1 WHERE (key = 3);
insert into test1 values (1);
INSERT INTO test1 VALUES (1, 2), (3, 4);
INSERT INTO test1 VALUES (1, [1, 2, 3]);
INSERT INTO test1 VALUES (123, 123), (12321, -30), (321, -32);
insert into test1 values (53), (1777), (53284);
INSERT INTO test1601_detach_permanently_atomic.test_name_reuse SELECT * FROM numbers(100);
INSERT INTO test1601_detach_permanently_lazy.test_name_reuse SELECT * FROM numbers(100);
INSERT INTO test1601_detach_permanently_ordinary.test_name_reuse SELECT * FROM numbers(100);
INSERT INTO test1_00395 VALUES ('a'), ('b'), ('c'), (NULL);
INSERT INTO test1_00395 VALUES (1, 1, 'a', 'a', [1], [1], ['a'], ['a'], '2000-01-01');
INSERT INTO test1_00395 VALUES (1, 1, 'a', 'a', [1], [1], ['a'], [NULL], '2000-01-01');
INSERT INTO test1_00395 VALUES (1, 1, 'a', 'a', [1], [NULL], ['a'], ['a'], '2000-01-01');
INSERT INTO test1_00395 VALUES (1, 1, 'a', NULL, [1], [1], ['a'], ['a'], '2000-01-01');
INSERT INTO test1_00395 VALUES (1, NULL, 'a', 'a', [1], [1], ['a'], ['a'], '2000-01-01');
INSERT INTO test1_00395(col1) VALUES ([1+1]);
INSERT INTO test1_00395(col1) VALUES('a'),('bc'),('def'),('ghij'),(NULL);
INSERT INTO test1_00395(col1) VALUES('a'),('bc'),('def'),('ghij');
INSERT INTO test1_00395(col1) VALUES(1),(2),(3),(4),(NULL);
INSERT INTO test1_00395(col1) VALUES(1),(2),(3),(4);
INSERT INTO test1_00395(col1) VALUES(['a','bc','def',NULL]);
INSERT INTO test1_00395(col1) VALUES(['a','bc',NULL,'ghij']);
INSERT INTO test1_00395(col1) VALUES(['a',NULL,'def',NULL]);
INSERT INTO test1_00395(col1) VALUES([2,3,7,NULL]);
INSERT INTO test1_00395(col1) VALUES([2,3,NULL,4]);
INSERT INTO test1_00395(col1) VALUES([2,NULL,7,NULL]);
INSERT INTO test1_00395(col1) VALUES([NULL,'bc','def','ghij']);
INSERT INTO test1_00395(col1) VALUES([NULL,3,7,4]);
INSERT INTO test1_00395(col1) VALUES([NULL,NULL,NULL,NULL]);
INSERT INTO test1_00395(col1,col2) VALUES (2,7)(6,9)(5,1)(4,3)(8,2);
INSERT INTO test1_00395(col1,col2) VALUES (2,7)(NULL,6)(9,NULL)(NULL,NULL)(5,1)(42,42);
INSERT INTO test1_00395(col1,col2) VALUES('A', 'ABCDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES('A', 'BACDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES('A', 'BCADEFGH');
INSERT INTO test1_00395(col1,col2) VALUES('A', 'BCDAEFGH');
INSERT INTO test1_00395(col1,col2) VALUES('B', 'BCDEAFGH');
INSERT INTO test1_00395(col1,col2) VALUES('B', 'BCDEFAGH');
INSERT INTO test1_00395(col1,col2) VALUES('B', 'BCDEFGAH');
INSERT INTO test1_00395(col1,col2) VALUES('B', 'BCDEFGHA');
INSERT INTO test1_00395(col1,col2) VALUES('C', 'ACBDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES('C', 'ACDBEFGH');
INSERT INTO test1_00395(col1,col2) VALUES('C', 'ACDEBFGH');
INSERT INTO test1_00395(col1,col2) VALUES('C', 'ACDEFBGH');
INSERT INTO test1_00395(col1,col2) VALUES(0, 'ABCDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES(0, 'BACDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'ACBDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'BCADEFGH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'BCDAEFGH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'BCDEAFGH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'BCDEFAGH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'BCDEFGAH');
INSERT INTO test1_00395(col1,col2) VALUES(1, 'BCDEFGHA');
INSERT INTO test1_00395(col1,col2) VALUES(['a','bc','def',NULL], 'a');
INSERT INTO test1_00395(col1,col2) VALUES(['a','bc','def',NULL], 1);
INSERT INTO test1_00395(col1,col2) VALUES(['a','bc',NULL,'ghij'], 'ghij');
INSERT INTO test1_00395(col1,col2) VALUES(['a','bc',NULL,'ghij'],4);
INSERT INTO test1_00395(col1,col2) VALUES(['a',NULL,'def','ghij'], 'def');
INSERT INTO test1_00395(col1,col2) VALUES(['a',NULL,'def','ghij'], 3);
INSERT INTO test1_00395(col1,col2) VALUES([0], 'ABCDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES([0], 'BACDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'ACBDEFGH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'BCADEFGH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'BCDAEFGH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'BCDEAFGH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'BCDEFAGH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'BCDEFGAH');
INSERT INTO test1_00395(col1,col2) VALUES([1], 'BCDEFGHA');
INSERT INTO test1_00395(col1,col2) VALUES([2,3,7,NULL], 1);
INSERT INTO test1_00395(col1,col2) VALUES([2,3,7,NULL], 2);
INSERT INTO test1_00395(col1,col2) VALUES([2,3,NULL,4],4);
INSERT INTO test1_00395(col1,col2) VALUES([2,3,NULL,4],5);
INSERT INTO test1_00395(col1,col2) VALUES([2,NULL,7,NULL], 3);
INSERT INTO test1_00395(col1,col2) VALUES([2,NULL,7,NULL], 7);
INSERT INTO test1_00395(col1,col2) VALUES([NULL,'bc','def','ghij'], 'bc');
INSERT INTO test1_00395(col1,col2) VALUES([NULL,'bc','def','ghij'], 2);
INSERT INTO test1_00395(col1,col2) VALUES([NULL,3,7,4], 2);
INSERT INTO test1_00395(col1,col2) VALUES([NULL,3,7,4], 3);
INSERT INTO test1_00395(col1,col2) VALUES([NULL,NULL,NULL,NULL], NULL);
INSERT INTO test1_00395(col1,col2) VALUES([NULL,NULL,NULL,NULL],3);
INSERT INTO test1_00395(col1,col2) VALUES([NULL,NULL,NULL,NULL],NULL);
INSERT INTO test1_00395(col1,col2) VALUES([NULL], 'ACDBEFGH');
INSERT INTO test1_00395(col1,col2) VALUES([NULL], 'ACDEBFGH');
INSERT INTO test1_00395(col1,col2) VALUES([NULL], 'ACDEFBGH');
INSERT INTO test1_00395(col1,col2) VALUES(NULL, 'ACDBEFGH');
INSERT INTO test1_00395(col1,col2) VALUES(NULL, 'ACDEBFGH');
INSERT INTO test1_00395(col1,col2) VALUES(NULL, 'ACDEFBGH');
INSERT INTO test1_00395(col1,col2) VALUES(NULL, 'ACDEFGBH');
INSERT INTO test1_00395(col1,col2) VALUES(NULL, 'ACDEFGHB');
INSERT INTO test1_00395(col1,col2,col3) VALUES (toInt8(1),toUInt16(2),toFloat32(3))(NULL,toUInt16(1),toFloat32(2))(toInt8(1),NULL,toFloat32(2))(toInt8(1),toUInt16(2),NULL);
INSERT INTO test1_00395(col1,col2,col3) VALUES('A', 0, 'ABCDEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('A', 0, 'BACDEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('A', 1, 'BCADEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('A', 1, 'BCDAEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('B', 1, 'BCDEAFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('B', 1, 'BCDEFAGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('B', 1, 'BCDEFGAH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('B', 1, 'BCDEFGHA');
INSERT INTO test1_00395(col1,col2,col3) VALUES('C', 1, 'ACBDEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('C', NULL, 'ACDBEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('C', NULL, 'ACDEBFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES('C', NULL, 'ACDEFBGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(0, 2, 'ABCDEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(0, 3, 'BACDEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 2, 'BCDAEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 2, 'BCDEFGAH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 3, 'BCDEAFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 3, 'BCDEFGHA');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 5, 'ACBDEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 5, 'BCADEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(1, 5, 'BCDEFAGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(NULL, 1, 'ACDEFGBH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(NULL, 2, 'ACDBEFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(NULL, 3, 'ACDEBFGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(NULL, 3, 'ACDEFBGH');
INSERT INTO test1_00395(col1,col2,col3) VALUES(NULL, NULL, 'ACDEFGHB');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(0, 2, 1, 'ABCDEFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(0, 3, NULL, 'BACDEFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 2, 1, 'BCDEFGAH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 2, NULL, 'BCDAEFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 3, 1, 'BCDEAFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 3, NULL, 'BCDEFGHA');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 5, 1, 'ACBDEFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 5, 1, 'BCADEFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(1, 5, NULL, 'BCDEFAGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(NULL, 2, NULL, 'ACDBEFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(NULL, 3, 1, 'ACDEBFGH');
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES(NULL, 3, NULL, 'ACDEFBGH');
INSERT INTO test1_00395(cond1,then1,cond2,then2,then3) VALUES(1,1,1,42,99)(0,7,1,99,42)(NULL,6,2,99,NULL);
INSERT INTO test1_00671(start,end) VALUES (1,3),(3,5);
INSERT INTO test1_00843 VALUES (1);
insert into test1_00863 (id, code) select number, toString(number) FROM numbers(100000);
insert into test1__fuzz_37 values ('2020-10-10');
INSERT INTO test2 (`pt`, `brand_name`, `exposure_uv`, `click_uv`) VALUES ('20230625', 'Nike', 2012913, 612831), ('20230625', 'adidas', 480277, 96176), ('20230625', 'LINING', 2474234, 627814), ('20230626', 'Nike', 1934666, 610770), ('20230626', 'adidas', 469904, 91117), ('20230626', 'LINING', 2285142, 599765), ('20220626', 'Nike', 2979656, 937166), ('20220626', 'adidas', 704751, 124250), ('20220626', 'LINING', 3163884, 1010221);
insert into test2 select * from numbers(11, 20);
insert into test2 select *, today() from numbers(100);
INSERT INTO test2 SELECT toString(number) FROM numbers(10000);
INSERT INTO test2 VALUES (1, 'test');
insert into test2 values (1, 10, 100), (10, 1, 10), (100, 100, 1);
INSERT INTO test2 VALUES (123, 5600), (321, 5601);
INSERT INTO test2 VALUES(1, 2);
INSERT INTO test2(col1,col2) SELECT col1,col2 FROM test1_00395;
INSERT INTO test2_00671(start,end) VALUES (3,5),(1,3);
insert into test2_00863 (id, code, test1_id, test3_id) select number, toString(number), number, number FROM numbers(100000);
INSERT INTO test3 SELECT toDecimal64(number, 3) FROM numbers(10000);
INSERT INTO test3 VALUES(1, 2);
insert into test3_00863 (id, code) select number, toString(number) FROM numbers(100000);
INSERT INTO test4 VALUES(toDate('2023-10-09'));
INSERT INTO test5 VALUES(1, 2);
INSERT INTO test5346 VALUES('1',toDateTime('2020-01-01 00:00:00'),toDateTime('2020-01-01 00:00:00'));
insert into test54378 values ('2018-04-19', '2018-04-19', '2018-04-19');
INSERT INTO test54378 values ('2018-04-19', '2018-04-19', '2018-04-19');
INSERT INTO test6 VALUES(1, 2);
INSERT INTO test_00209 SELECT 1 AS x GROUP BY 1 WITH TOTALS SETTINGS extremes = 1;
INSERT INTO test_00209 SELECT 1 AS x GROUP BY 1 WITH TOTALS;
INSERT INTO test_00209 SELECT 1 AS x SETTINGS extremes = 1;
INSERT INTO test_00209 SELECT 1 AS x;
INSERT INTO test_00562 VALUES('test_string', 1);
INSERT INTO test_00563 (dt,site_id, site_key) VALUES ('2018-1-29', 100, 'key');
INSERT INTO Test_00584 VALUES ('2000-01-01', 'hello', 'A', 123);
INSERT INTO test_00597 VALUES('2000-01-01', 1, 'test string 1', 1);
INSERT INTO test_00597 VALUES('2000-01-01', 2, 'test string 2', 2);
insert into test_00609 values (1);
INSERT INTO test_00615 (dt,id, key,data) VALUES ('2000-01-01', 100, 'key', 100500);
INSERT INTO test_00616 VALUES ('2018-03-21', 1, 1), ('2018-03-21', 1, 2);
INSERT INTO test_00645 VALUES ('2018-06-08T01:02:03.000Z');
insert into test_00670 values(0);
INSERT INTO test_00681 VALUES (123);
insert into test_00687 values ('stest'), ('stest');
INSERT INTO test_00688 VALUES (1), (2), (1), (3);
INSERT INTO test_00707 FORMAT CSV 123.456,789.012,345678,Hello SET format_csv_delimiter = ';';
INSERT INTO test_00707 FORMAT CSV 123.456:789.012:345678:Hello SET format_csv_delimiter = '|';
INSERT INTO test_00707 FORMAT CSV 123.456;
INSERT INTO test_00707 FORMAT CSV 123.456|789.012|345678|Hello SELECT * FROM test_00707;
INSERT INTO test_00724 VALUES (toDateTime('2000-01-01 01:02:03'), toDate('2000-01-01'));
INSERT INTO test_00744 VALUES (1);
INSERT INTO test_00808 VALUES('2000-01-01', 1, 'test string 1', 1, 1);
INSERT INTO test_00808 VALUES('2000-01-01', 2, 'test string 2', 2, 1);
INSERT INTO test_00818 (field, not_field) VALUES ('123', '456');
INSERT INTO test_00861 FORMAT CSV "1","1","1","1" ;
INSERT INTO test_00861 FORMAT CSV "2","-1","-1","-1" ;
INSERT INTO test_00861 FORMAT CSV "3","1.0","1.0","1.0" ;
INSERT INTO test_00861 FORMAT CSV "4","-0.1","-0.1","-0.1" ;
INSERT INTO test_00861 FORMAT CSV "5","0.010","0.010","0.010" ;
INSERT INTO test_00961 VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO test_00974 VALUES ('2019-07-23', 1, 1), ('2019-07-23', 1, 2);
INSERT INTO test_00974 VALUES ('2019-07-23', 2, 1), ('2019-07-23', 2, 2);
INSERT INTO test_01035_avg (u64) SELECT number FROM system.numbers LIMIT 1000000;
insert into test_01054_overflow.ints values (1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into test_01054_overflow.ints values (10, 10, 10, 10, 10, 10, 10, 10, 10);
insert into test_01054_overflow.ints values (11, 11, 11, 11, 11, 11, 11, 11, 11);
insert into test_01054_overflow.ints values (12, 12, 12, 12, 12, 12, 12, 12, 12);
insert into test_01054_overflow.ints values (13, 13, 13, 13, 13, 13, 13, 13, 13);
insert into test_01054_overflow.ints values (14, 14, 14, 14, 14, 14, 14, 14, 14);
insert into test_01054_overflow.ints values (15, 15, 15, 15, 15, 15, 15, 15, 15);
insert into test_01054_overflow.ints values (16, 16, 16, 16, 16, 16, 16, 16, 16);
insert into test_01054_overflow.ints values (17, 17, 17, 17, 17, 17, 17, 17, 17);
insert into test_01054_overflow.ints values (18, 18, 18, 18, 18, 18, 18, 18, 18);
insert into test_01054_overflow.ints values (19, 19, 19, 19, 19, 19, 19, 19, 19);
insert into test_01054_overflow.ints values (2, 2, 2, 2, 2, 2, 2, 2, 2);
insert into test_01054_overflow.ints values (20, 20, 20, 20, 20, 20, 20, 20, 20);
insert into test_01054_overflow.ints values (3, 3, 3, 3, 3, 3, 3, 3, 3);
insert into test_01054_overflow.ints values (4, 4, 4, 4, 4, 4, 4, 4, 4);
insert into test_01054_overflow.ints values (5, 5, 5, 5, 5, 5, 5, 5, 5);
insert into test_01054_overflow.ints values (6, 6, 6, 6, 6, 6, 6, 6, 6);
insert into test_01054_overflow.ints values (7, 7, 7, 7, 7, 7, 7, 7, 7);
insert into test_01054_overflow.ints values (8, 8, 8, 8, 8, 8, 8, 8, 8);
insert into test_01054_overflow.ints values (9, 9, 9, 9, 9, 9, 9, 9, 9);
INSERT INTO test_01073_crlf_end_of_line VALUES (1, 'hello'), (2, 'world');
insert into test_01081 select * from system.numbers limit 10;
INSERT INTO test_01155_atomic.src(s) VALUES ('after moving tables');
INSERT INTO test_01191._ VALUES (42, 'test');
INSERT INTO test_01307 (id, val) select number as id, toString(number) as val from numbers(4);
INSERT INTO test_01343 VALUES ('Hello, world');
INSERT INTO test_01344 VALUES ('Hello, world');
insert into test_01383.dimension values (1,'name_1'),(2,'name_1'),(3,'name_3'),(4, 'name_4');
insert into test_01383.fact values (1,2,10),(2,2,10),(3,3,10),(4,3,10);
INSERT INTO test_01392.tableClick(clickId, conversionId, value) VALUES ('Click 1', 'Conversion 1', 14);
INSERT INTO test_01392.tableClick(clickId, conversionId, value) VALUES ('Click 2', 'Conversion 1', 15);
INSERT INTO test_01392.tableClick(clickId, conversionId, value) VALUES ('Click 3', 'Conversion 1', 16);
INSERT INTO test_01392.tableConversion(conversionId, value) VALUES ('Conversion 1', 1);
INSERT INTO test_01457.tf_remote VALUES (0);
INSERT INTO test_01457.tf_remote_explicit_structure VALUES ('42');
insert into test_01640 values (1, '2021-01-01','some');
INSERT INTO test_01676.dict_data VALUES (2,20), (3,30), (4,40), (5,50);
INSERT INTO test_01676.table (x) VALUES (2);
INSERT INTO test_01676.table (x) VALUES (toInt64(4));
INSERT INTO test_01676.table VALUES (toUInt64(3), toUInt64(15));
INSERT INTO test_01778 SELECT toString('xxx'), today() FROM numbers(100);
INSERT INTO test_01778 SELECT toString(intDiv(number,8000)), today() FROM numbers(100000);
INSERT INTO test_01915_db.test_source_table_1 VALUES (0, 'Value0');
INSERT INTO test_01915_db.test_source_table_2 VALUES (0, 'Value1');
insert into test_02152 select 1, 'Hello', [1,2,3], tuple(2, 'World', [4,5,6]);
insert into test_02245 select 1 settings s3_truncate_on_insert=1;
insert into test_02245_2 select 1, 2 settings s3_truncate_on_insert=1;
insert into test_02245_s3_nested_arrow1 values (1, (2, 'a'));
insert into test_02245_s3_nested_arrow2 values (1, (2, (3, 'a')));
insert into test_02245_s3_nested_orc1 values (1, (2, 'a'));
insert into test_02245_s3_nested_orc2 values (1, (2, (3, 'a')));
insert into test_02245_s3_nested_parquet1 values (1, (2, 'a'));
insert into test_02245_s3_nested_parquet2 values (1, (2, (3, 'a')));
insert into test_02249 select * from input() format JSONEachRow {"x" : 1, "y" : "string1"}, {"y" : "string2", "x" : 2};
insert into test_02250 select * from file('data_02250.jsonl');
insert into test_02302 select 0 settings s3_create_new_file_on_insert = true;
insert into test_02302 select 1 settings s3_create_new_file_on_insert = true;
insert into test_02302 select 2 settings s3_create_new_file_on_insert = true;
insert into test_02302 select number from numbers(10) settings s3_truncate_on_insert=1;
insert into test_02312 values ((1,2)), ((2,3)), ((3,4));
insert into test_02312 values ([[(1), (2), (3)]]);
insert into test_02377 values(1, 's') (2, 'x') (3, 'y');
insert into test_02381 select number, number * 10 from system.numbers limit 1000000;
insert into test_02381_compact values (1, 'Hello');
insert into test_02381_compact values (2, 'World');
insert into test_02381_compress select number, number * 10 from system.numbers limit 1000000;
insert into test_02480_support_wildcard_write values (1, 'a'), (22, 'b'), (333, 'c');
insert into test_02480_support_wildcard_write2 values (4, 'd'), (55, 'f'), (666, 'g');
insert into test_02481_mismatch_files values (1, 'a'), (22, 'b'), (333, 'c');
INSERT INTO test_02504 values (1, 1) (2, 2), (3, 3);
INSERT INTO test_02559 SELECT number, number FROM numbers(10);
INSERT INTO test_02559 VALUES (1, 'Hello, world!');
INSERT INTO test_02559 VALUES (2, 'Goodbye.', 3);
INSERT INTO test_02559 VALUES (3, 'So long, and thanks for all the fish.', 42, 0);
INSERT INTO test_02559__fuzz_20 SELECT number, number FROM numbers(10);
INSERT INTO test_02771.t SELECT number FROM numbers(10);
INSERT into test_23634 values ('s','s','s'), (null,'s1','s1'), (null,null,'s2'), (null,null,null);
INSERT INTO test_2554_log SELECT 1;
INSERT INTO test_2554_stripelog SELECT 1;
INSERT INTO test_2554_tinylog SELECT 1;
INSERT INTO test_a (OldColumn, EventTime) VALUES('1', now());
INSERT INTO test_a (OldColumn, NewColumn, EventTime) VALUES('2', '2a', now());
INSERT INTO test_a SELECT number%10 as id, number%2 as company, count() as total FROM numbers(100) GROUP BY id,company;
insert into test_agg_proj_02302 select intDiv(number, 2), -intDiv(number,3) - 1 from numbers(100);
INSERT INTO test_aggregation VALUES ([1,2,3,4,5,6]), ([]), ([1,2,3]);
INSERT INTO test_aggregation VALUES ([1,2,3,4]), ([]), ([1,2,3]);
INSERT INTO test_alter_attach_01901S VALUES (1, '2020-01-01');
INSERT INTO test_alter_decimal VALUES (1, toDecimal32(5, 5));
INSERT INTO test_alter_decimal VALUES (2, toDecimal32(6, 6));
INSERT INTO test_alter_decimal VALUES (3, toDecimal32(7, 7));
INSERT INTO test_alter_on_mutation select toDate('2020-01-05'), number, toString(number) from system.numbers limit 100, 100;
INSERT INTO test_alter_on_mutation select toDate('2020-01-05'), number, toString(number) from system.numbers limit 100;
INSERT INTO test_alter_on_mutation select toDate('2020-01-06'), number, toString(number) from system.numbers limit 100, 100;
INSERT INTO test_alter_on_mutation select toDate('2020-01-06'), number, toString(number) from system.numbers limit 100;
INSERT INTO test_alter_on_mutation select toDate('2020-01-07'), number, toString(number) from system.numbers limit 100, 100;
INSERT INTO test_alter_on_mutation select toDate('2020-01-07'), number, toString(number) from system.numbers limit 100;
INSERT INTO test_apply_deleted_mask SELECT number, number::String FROM numbers(5);
INSERT INTO test_apply_deleted_mask SELECT number, number::String FROM numbers(5, 1);
insert into test_array values (['a']);
insert into test_array_joins (id,arr_1, arr_2, arr_3, arr_4) SELECT number,array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3)) from numbers(1000);
INSERT INTO test_array_ops(arr) values ([10, -20]);
INSERT INTO test_array_ops(arr) values ([]);
INSERT INTO test_array_ops(arr) values ([null, 10, -20]);
INSERT INTO test_b (OldColumn, NewColumn, EventTime) VALUES('1', '1a', now());
INSERT INTO test_b (OldColumn, NewColumn, EventTime) VALUES('2', '2a', now());
INSERT INTO test_base_condition values ('2000-01-02 09:00:01',1,'A','1');
INSERT INTO test_base_condition values ('2000-01-02 09:00:01',2,'D','4');
INSERT INTO test_base_condition values ('2000-01-02 09:00:01',3,'B','10');
INSERT INTO test_base_condition values ('2000-01-02 09:00:02',1,'B','2');
INSERT INTO test_base_condition values ('2000-01-02 09:00:02',2,'C','3');
INSERT INTO test_base_condition values ('2000-01-02 09:00:02',3,'B','2');
INSERT INTO test_base_condition values ('2000-01-02 09:00:03',1,'C','3');
INSERT INTO test_base_condition values ('2000-01-02 09:00:03',2,'B','2');
INSERT INTO test_base_condition values ('2000-01-02 09:00:03',3,'D','3');
INSERT INTO test_base_condition values ('2000-01-02 09:00:04',1,'D','4');
INSERT INTO test_base_condition values ('2000-01-02 09:00:04',2,'A','1');
INSERT INTO test_base_condition values ('2000-01-02 09:00:04',3,'C','4');
INSERT INTO test_bf_indexOf VALUES (1, ['value1', 'value2']);
INSERT INTO test_bf_indexOf VALUES (2, ['value3']);
INSERT INTO test_bit_shift_left_string_integer VALUES('Hello','Hello',-1)('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hello','Hello',41),('Hello','Hello',42),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);
INSERT INTO test_bit_shift_right_string_integer VALUES('Hello','Hello',-1)('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hello','Hello',41),('Hello','Hello',42),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);
INSERT INTO test_block_mismatch VALUES (1, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch VALUES (1, toDateTime('2023-02-02 12:12:12'));
INSERT INTO test_block_mismatch VALUES (2, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch_sk1 VALUES (1, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch_sk1 VALUES (1, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch_sk1 VALUES (1, toDateTime('2023-02-02 12:12:12'));
INSERT INTO test_block_mismatch_sk1 VALUES (2, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch_sk2 VALUES (1, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch_sk2 VALUES (1, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_mismatch_sk2 VALUES (1, toDateTime('2023-02-02 12:12:12'));
INSERT INTO test_block_mismatch_sk2 VALUES (2, toDateTime('2023-01-01 12:12:12'));
INSERT INTO test_block_numbers SELECT max(max_block_number) AS m FROM system.parts WHERE database=currentDatabase() AND table='dst' AND active AND name LIKE '1_%';
INSERT INTO test_bloom_filter_index SELECT number, number, number FROM numbers(10000);
insert into test_bm VALUES (1,1),(2,2),(3,3),(4,4);
INSERT INTO test_buffer.buf VALUES (1, '2019-03-01 10:00:00', 0.5), (2, '2019-03-02 10:00:00', 0.15), (1, '2019-03-03 10:00:00', 0.25);
INSERT INTO test_buffer_table SELECT number FROM numbers(1000);
insert into test_byte_size_array values(1, [], [], [], [], [], [], []);
insert into test_byte_size_array values(2, [1], [-1], [256], [1.1], [1.1], ['2020-01-01'], ['61f0c404-5cb3-11e7-907b-a6006ad3dba0']);
insert into test_byte_size_array values(3, [1,1], [-1,-1], [256,256], [1.1,1.1], [1.1,1.1], ['2020-01-01','2020-01-01'], ['61f0c404-5cb3-11e7-907b-a6006ad3dba0','61f0c404-5cb3-11e7-907b-a6006ad3dba0']);
insert into test_byte_size_array values(4, [1,1,1], [-1,-1,-1], [256,256,256], [1.1,1.1,1.1], [1.1,1.1,1.1], ['2020-01-01','2020-01-01','2020-01-01'], ['61f0c404-5cb3-11e7-907b-a6006ad3dba0','61f0c404-5cb3-11e7-907b-a6006ad3dba0','61f0c404-5cb3-11e7-907b-a6006ad3dba0']);
insert into test_byte_size_complex_array values(1, [], [[]], [], [[]]);
insert into test_byte_size_complex_array values(2, [1,2], [[], [1,2]], [''], [[], ['']]);
insert into test_byte_size_complex_array values(3, [0,256], [[], [1,2], [0,256]], ['','a'], [[], [''], ['','a']]);
insert into test_byte_size_complex_array values(4, [256,65536], [[], [1,2], [0,256], [256,65536]], ['','a','abced'], [[], [''], ['','a'], ['','a','abced']]);
insert into test_byte_size_more_complex values(1, []);
insert into test_byte_size_more_complex values(2, [tuple(NULL, [])]);
insert into test_byte_size_more_complex values(3, [tuple('a', [])]);
insert into test_byte_size_more_complex values(4, [tuple('a', [tuple(NULL, 'a')])]);
insert into test_byte_size_more_complex values(5, [tuple('a', [tuple(NULL, 'a'), tuple(NULL, 'a')])]);
insert into test_byte_size_more_complex values(6, [tuple(NULL, []), tuple('a', []), tuple('a', [tuple(NULL, 'a')]), tuple('a', [tuple(NULL, 'a'), tuple(NULL, 'a')])]);
insert into test_byte_size_number0 values(1, 8, 16, 32, 64, 256, -8, -16, -32, -64, -128, -256, 32.32, 64.64);
insert into test_byte_size_number0 values(2, 8, 16, 32, 64, 256, -8, -16, -32, -64, -128, -256, 32.32, 64.64);
insert into test_byte_size_number1 values(1, '2020-01-01', '2020-01-01 01:02:03', '2020-02-02 01:02:03', 'a', 'ck', 32.32, 64.64, 128.128, 256.256, generateUUIDv4());
insert into test_byte_size_number1 values(2, '2020-01-01', '2020-01-01 01:02:03', '2020-02-02 01:02:03', 'a', 'ck', 32.32, 64.64, 128.128, 256.256, generateUUIDv4());
insert into test_byte_size_other values(1, NULL, NULL, tuple(1, NULL), '');
insert into test_byte_size_other values(2, 1, 'a', tuple(1, 'a'), 'a');
insert into test_byte_size_other values(3, 256, 'abcde', tuple(256, 'abcde'), 'abcde');
insert into test_byte_size_string values(1, '', 'a', '', 'abcde');
insert into test_byte_size_string values(2, 'abced', '', 'abcde', '');
INSERT INTO test_collate VALUES (1, 'Ё'), (1, 'ё'), (1, 'а'), (1, null), (2, 'А'), (2, 'я'), (2, 'Я'), (2, null);
INSERT INTO test_collate VALUES (1, 'Ё'), (1, 'ё'), (1, 'а'), (2, 'А'), (2, 'я'), (2, 'Я');
INSERT INTO test_collate_null VALUES (1, 'Ё'), (1, 'ё'), (1, 'а'), (2, 'А'), (2, 'я'), (2, 'Я'), (1, null), (2, null);
insert into test_collation values ('A', 'A');
insert into test_collation values ('a', 'a');
insert into test_collation values ('B', 'B');
insert into test_collation values ('b', 'b');
insert into test_collation values ('C', 'C');
insert into test_collation values ('c', 'c');
INSERT INTO test_count values ('2019-12-12');
INSERT INTO test_data SELECT   IPv4NumToString(IPv4CIDRToRange(IPv4StringToNum('255.255.255.255'), toUInt8(number)).1) || '/' || toString(number) AS cidr FROM system.numbers LIMIT 33;
INSERT INTO test_data VALUES ('val1', NULL, 'val3');
insert into test_date values ('2021-01-01'), (NULL), ('2021-02-01'), ('2021-03-01');
INSERT INTO test_datetime (time) VALUES (toDate(18012));
INSERT INTO test_datetime VALUES ('2020-10-15 00:00:00'), (1602709200123);
INSERT INTO test_datetime VALUES ('2020-10-15 00:00:00');
insert into test_datetime values ('2021-01-01 00:00:00'), (NULL), ('2021-02-01 01:00:00'), ('2021-03-01 02:00:00');
INSERT INTO test_default_using_alias(what) VALUES ('Click');
INSERT INTO test_degs_to_rads VALUES (-1);
INSERT INTO test_degs_to_rads VALUES (-180);
INSERT INTO test_degs_to_rads VALUES (-180.6);
INSERT INTO test_degs_to_rads VALUES (-360);
INSERT INTO test_degs_to_rads VALUES (0);
INSERT INTO test_degs_to_rads VALUES (1);
INSERT INTO test_degs_to_rads VALUES (180);
INSERT INTO test_degs_to_rads VALUES (180.5);
INSERT INTO test_degs_to_rads VALUES (360);
INSERT INTO test_dictionary_source VALUES ('Key', 'Value');
INSERT INTO test_dictionary_source_table VALUES (1, '1'), (2, '2'), (3, '3');
INSERT INTO test_dictionary_source_table VALUES (4, '4');
INSERT INTO test_dist_02536 SELECT number FROM numbers(5) SETTINGS prefer_localhost_replica=0;
insert into test_distance values ('привет как дела?... Херсон'), ('привет как дела клип - TUT.BY'), ('привет'), ('пап привет как дела - TUT.BY'), ('привет братан как дела - TUT.BY'), ('http://metric.ru/'), ('http://autometric.ru/'), ('http://top.bigmir.net/'), ('http://metris.ru/'), ('http://metrika.ru/'), ('');
INSERT INTO test_distributed SELECT randomString(100) AS text, randomString(100) AS text2 FROM system.numbers LIMIT 1;
insert into test_entry_distance values ('привет как дела?... Херсон'), ('привет как дела клип - TUT.BY'), ('привет'), ('пап привет как дела - TUT.BY'), ('привет братан как дела - TUT.BY'), ('http://metric.ru/'), ('http://autometric.ru/'), ('http://top.bigmir.net/'), ('http://metris.ru/'), ('http://metrika.ru/'), ('');
insert into test_enum values (1), (NULL);
INSERT INTO test_extract (str) WITH range(8) as range_arr, arrayMap(x-> concat(toString(x),'Id'), range_arr) as key, arrayMap(x -> rand() % 8, range_arr) as val, arrayStringConcat(arrayMap((x,y) -> concat(x,'=',toString(y)), key, val),',') as str SELECT str FROM numbers(500000);
INSERT INTO test_fetch VALUES(1, 1), (2, 1), (3, 4), (3, 3), (5, 4), (0, 6), (5, 7);
INSERT INTO test_filter SELECT number, number+1, (number/2 + 1) % 2 FROM numbers(15);
INSERT INTO test_fixed_string_nested_json (data) VALUES ('{"a" : {"b" : {"c" : 1, "d" : "str"}}}');
INSERT INTO test_float FORMAT TabSeparated 1.075e+06 SELECT * FROM test_float;
insert into test_float64 values ('0.1'), (NULL), (1.1), ('2.2');
INSERT INTO test_generic_events_all VALUES( 42, 42 );
INSERT INTO test_grace_hash SELECT number, number % 100 = 0 FROM numbers(100000);
INSERT INTO test_graphite (key) VALUES (0);
insert into test_group_by_with_rollup_order values(1,1,'a');
insert into test_group_by_with_rollup_order values(2,2,'a');
insert into test_group_by_with_rollup_order values(3,3,'b');
insert into test_group_by_with_rollup_order values(4,4,'b');
INSERT INTO test_grouping_sets_predicate SELECT   toDate('2023-01-05') AS day_,   'hello, world' FROM numbers (10);
INSERT INTO test_hierarchy_source_table VALUES (1, 0);
insert into test_in values ('a');
insert into test_in_tuple_1 values (1, 1, [1, 2], [1, 2]);
insert into test_in_tuple_2 values (2, 1, [1, 2], [1, 2]);
INSERT INTO test_index SELECT * FROM numbers(10);
insert into test_index values('2020-10-30');
INSERT INTO test_input SELECT toInt32(number % 1000) AS id FROM numbers(100,3);
insert into test_ins_arr select toDate('2017-10-02'), [number, 42] from system.numbers limit 10000;
insert into test_ins_arr_arr select toDate('2017-10-02'), [[number],[number + 1, number + 2]] from system.numbers limit 10000;
insert into test_ins_arr_arr_arr select toDate('2017-10-02'), [[[number]],[[number + 1], [number + 2, number + 3]]] from system.numbers limit 10000;
insert into test_ins_arr_arr_null select toDate('2017-10-02'), [[1, Null, number], [3, Null, number]] from system.numbers limit 10000;
insert into test_ins_arr_null select toDate('2017-10-02'), [if(number % 2, number, Null), number, Null] from system.numbers limit 10000;
insert into test_ins_null select toDate('2017-10-02'), if(number % 2, number, Null) from system.numbers limit 10000;
INSERT INTO test_insert_t1 SELECT '2019-09-01',toString(number),toString(rand()),toString(rand()) FROM system.numbers WHERE number > 10 limit 1000000;
INSERT INTO test_insert_t2 SELECT '2019-09-01',toString(number) FROM system.numbers WHERE number >=0 limit 200;
INSERT INTO test_insert_t2 SELECT '2019-09-01',toString(number) FROM system.numbers WHERE number >=100000 limit 200;
INSERT INTO test_insert_t2 SELECT '2019-09-01',toString(number) FROM system.numbers WHERE number >=300000 limit 200;
INSERT INTO test_insert_t2 SELECT '2019-09-01',toString(number) FROM system.numbers WHERE number >=500000 limit 200;
INSERT INTO test_insert_t2 SELECT '2019-09-01',toString(number) FROM system.numbers WHERE number >=700000 limit 200;
INSERT INTO test_insert_t2 SELECT '2019-09-01',toString(number) FROM system.numbers WHERE number >=900000 limit 200;
INSERT INTO test_insert_t3 SELECT '2019-09-01', uid, name, city FROM ( SELECT dt, uid, name, city FROM test_insert_t1 WHERE dt = '2019-09-01') t1 GLOBAL SEMI LEFT JOIN (SELECT uid FROM test_insert_t2 WHERE dt = '2019-09-01') t2 ON t1.uid=t2.uid;
INSERT INTO test_inserts SELECT sleep(1), number FROM numbers(10) SETTINGS max_insert_delayed_streams_for_parallel_write = 100, max_insert_block_size = 1, min_insert_block_size_rows = 1;
INSERT INTO test_jit_nonnull VALUES (0), (1);
INSERT INTO test_jit_nullable VALUES (0), (1), (NULL);
insert into test_join values ('2019-01-01', 1, 'a');
insert into test_join values ('2019-01-01', 1, null);
insert into test_join values ('2019-01-01', 2, 'b');
insert into test_join values ('2019-01-01', 3, 'c');
INSERT INTO test_joinGet VALUES ('ab', '1', 0.1), ('ab', '2', 0.2), ('cd', '3', 0.3);
INSERT INTO test_joinGet VALUES (2, 'a'), (6, 'b'), (10, 'c'), (null, 'd');
INSERT INTO test_lc VALUES ('ab', '1', 0.1), ('ab', '2', 0.2), ('cd', '3', 0.3);
INSERT INTO test_local SELECT '2000-08-01', number as value from numbers(50000);
INSERT INTO test_local_1 VALUES ('2018-08-01',100);
INSERT INTO test_local_2 VALUES ('2018-08-01',200);
INSERT INTO test_log (crypto_name, trade_date) VALUES ('abc', '2021-01-01'), ('def', '2022-02-02');
INSERT INTO test_log VALUES (64, 'Value1', ['Value2', 'Value3', NULL]);
INSERT INTO test_lookup_table VALUES(0, 0);
INSERT INTO test_lookup_table VALUES(1, 0);
INSERT INTO test_lookup_table VALUES(2, 0);
INSERT INTO test_lookup_table VALUES(3, 1);
INSERT INTO test_lookup_table VALUES(4, 0);
INSERT INTO test_lookup_table VALUES(5, 1);
INSERT INTO test_lookup_table VALUES(6, 0);
INSERT INTO test_lookup_table VALUES(7, 2);
INSERT INTO test_lookup_table VALUES(8, 1);
INSERT INTO test_lookup_table VALUES(9, 0);
INSERT INTO test_low_cardinality_int (data) VALUES ('{"a": 11, "b": 2222, "c": 33333333, "d": 4444444444444444}');
INSERT INTO test_low_cardinality_string (data) VALUES ('{"a": "hi", "b": "hello", "c": "hola", "d": "see you, bye, bye"}');
INSERT INTO test_low_cardinality_uuid (data) VALUES ('{"a": "2d49dc6e-ddce-4cd0-afb8-790956df54c4", "b": "2d49dc6e-ddce-4cd0-afb8-790956df54c3", "c": "2d49dc6e-ddce-4cd0-afb8-790956df54c1", "d": "2d49dc6e-ddce-4cd0-afb8-790956df54c1"}');
INSERT INTO test_map VALUES ({'K0':'V0'});
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_1 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_10 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_11 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_2 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_3 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_4 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_5 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_6 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_7 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_8 VALUES (1, 'Hello');
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_9 VALUES (1, 'Hello');
INSERT INTO test_max_parallel_replicas_lr select number as timestamp from system.numbers limit 100;
INSERT INTO test_move_partition_src SELECT number % 2, number FROM system.numbers LIMIT 10000000;
INSERT INTO test_move_partition_throttling SELECT number FROM numbers(1e6);
INSERT INTO test_mtree VALUES ('Hello, world');
INSERT INTO test_nested VALUES('123', 'asd', [1,2]);
INSERT INTO test_nested_default(`id`, `with_dot.array`) VALUES('id', ['str1', 'str2']);
INSERT INTO test_not_found_column_nothing(col001) SELECT number FROM numbers(11);
INSERT INTO test_null_as_default SELECT 'HELLO' UNION ALL SELECT NULL;
INSERT INTO test_null_as_default SELECT 1, NULL UNION ALL SELECT 2, NULL;
INSERT INTO test_null_as_default SELECT NULL;
INSERT INTO test_null_as_default(a) SELECT 'HELLO' UNION ALL SELECT NULL;
INSERT INTO test_null_as_default(a, c) SELECT 1, NULL UNION ALL SELECT 2, NULL;
INSERT INTO test_null_as_default__fuzz_46 SELECT 1, NULL UNION ALL SELECT 2, NULL;
insert into test_null_filter select number, number from numbers(10000000);
INSERT INTO test_nullable_float_issue7347 VALUES (1,NULL);
INSERT INTO test_order_by SELECT now() + toIntervalSecond(number), number % 4 FROM numbers(10000);
insert into test_parallel_index select number from numbers(10);
INSERT INTO test_parallel_replicas_settings SELECT * FROM numbers(10);
INSERT INTO test_parallel_replicas_unavailable_shards SELECT * FROM numbers(10);
INSERT INTO test_prewhere_column_type VALUES ('', 2);
INSERT INTO test_prewhere_default_column VALUES( 42, 42 );
insert into test_quantile select medianTimingState(.2)(number) from (select * from numbers(1000) order by number desc);
INSERT INTO test_r1 ("\\") VALUES ('\\');
INSERT INTO test_r1 SELECT * FROM test;
INSERT INTO test_rads_to_degs VALUES (-0.017453292519943295);
INSERT INTO test_rads_to_degs VALUES (-3.141592653589793);
INSERT INTO test_rads_to_degs VALUES (-3.152064629101759);
INSERT INTO test_rads_to_degs VALUES (-6.283185307179586);
INSERT INTO test_rads_to_degs VALUES (0.017453292519943295);
INSERT INTO test_rads_to_degs VALUES (3.141592653589793);
INSERT INTO test_rads_to_degs VALUES (3.1503192998497647);
INSERT INTO test_rads_to_degs VALUES (6.283185307179586);
INSERT INTO test_rads_to_degs VALUES(-10);
INSERT INTO test_rads_to_degs VALUES(0);
INSERT INTO test_rads_to_degs VALUES(1);
INSERT INTO test_rads_to_degs VALUES(10);
INSERT INTO test_rewrite_uniq_to_count values ('1', '1', '1'), ('1', '1', '1');
INSERT INTO test_rewrite_uniq_to_count values ('2', '2', '2'), ('2', '2', '2');
INSERT INTO test_rewrite_uniq_to_count values ('3', '3', '3'), ('3', '3', '3');
INSERT INTO test_rlp SELECT number, number FROM numbers(15);
insert into test_rows_compact_part select 0,arrayJoin(range(10000)) ;
insert into test_rows_compact_part select 1,arrayJoin(range(10000));
insert into test_rows_compact_part__fuzz_11 select 1;
insert into test_rows_wide_part select 0,arrayJoin(range(10000)) ;
insert into test_rows_wide_part select 1,arrayJoin(range(10000));
INSERT INTO test_s64_local VALUES ('2018-08-01', -1);
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',1,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',10,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',11,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',11,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',11,'C');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',11,'D');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',12,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',2,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',3,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',4,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',5,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:01',6,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',1,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',10,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',2,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',3,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',4,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',5,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:02',6,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:03',1,'C');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:03',10,'C');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:03',2,'D');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:03',4,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:03',5,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:03',6,'A');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:04',1,'D');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:04',10,'D');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:04',2,'C');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:04',4,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:04',5,'C');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:04',6,'B');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:05',4,'C');
INSERT INTO test_sequenceNextNode values ('2000-01-02 09:00:05',6,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',1,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',10,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',11,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',11,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',11,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',11,'D');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',2,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',3,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',4,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',5,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:01',6,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',1,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',10,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',10,NULL);
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',2,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',3,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',4,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',5,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:02',6,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:03',1,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:03',10,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:03',2,'D');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:03',4,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:03',5,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:03',6,'A');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:04',1,'D');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:04',10,'D');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:04',2,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:04',4,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:04',5,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:04',6,'B');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:05',4,'C');
INSERT INTO test_sequenceNextNode_Nullable values ('2000-01-02 09:00:05',6,'C');
INSERT INTO test_set VALUES (1), (NULL);
INSERT INTO test_set2 VALUES (1), (NULL);
INSERT INTO test_skip_idx SELECT number FROM system.numbers LIMIT 5 OFFSET 1;
insert into test_smt select id, sumMap(k), sumMapState(k) from (select 2 as id, arrayJoin([([0], [1]), ([0, 25], [-1, toInt64(1)])]) as k) group by id, rowNumberInAllBlocks();
INSERT INTO test_startsWith (a) values ('a'), ('abcd'), ('bbb'), (''), ('abc');
INSERT INTO test_string VALUES ('hello', 'hello', 'hello', 'hello') ('hello', 'hellow', 'hello', 'hellow') ('clickhouse', '012345', 'clickhouse', '012345');
INSERT INTO test_string(c1, c2) VALUES ('1', ''), ('2', '');
INSERT INTO test_tab VALUES (1, 'Hello World', 'l', 'xx') (2, 'Hello World', 'll', 'x') (3, 'Hello World', 'not_found', 'x') (4, 'Hello World', '[eo]', 'x') (5, 'Hello World', '.', 'x')  SELECT '** replaceAll() **';
INSERT INTO test_table (EventDate, UTCEventTime) VALUES ('2014-01-02', '2014-01-02 03:04:06');
INSERT INTO test_table (f1, f2, pk) VALUES (1,1,1), (1,1,2), (2,1,1), (2,1,2);
INSERT INTO test_table FORMAT JSONCompactEachRow ["first", 1, "2", null] ["second", 2, null, 6];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNames ["v1", "v2", "invalid_column"]["first", 1, 32]["second", 2, "64"];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNames ["v1", "v2", "v3", "v4"]["first", 1, "2", null] ["second", 2, null, 6];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNames ["v1", "v2", "v3", "v4"]["first", 1, "2", null]["second", 2, null, 6];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNamesAndTypes ["v1", "v2", "invalid_column"]["String", "UInt8", "UInt8"]["first", 1, 32]["second", 2, "64"];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNamesAndTypes ["v1", "v2", "v3", "v4"]["String","UInt8","UInt16","UInt8"]["first", 1, "2", null] ["second", 2, null, 6];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNamesAndTypes ["v1", "v2", "v3", "v4"]["String","UInt8","UInt16","UInt8"]["first", 1, "2", null]["second", 2, null, 6];
INSERT INTO test_table FORMAT JSONCompactEachRowWithNamesAndTypes ["v4", "v2", "v3"]["UInt8", "UInt8", "UInt16"][1, 2, 3] INSERT INTO test_table FORMAT JSONCompactEachRowWithNames ["v4", "v2", "v3"][1, 2, 3] SELECT * FROM test_table FORMAT JSONCompactEachRowWithNamesAndTypes;
INSERT INTO test_table FORMAT JSONCompactStringsEachRow ["first", "1", "2", "3"] ["second", "2", "3", "6"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRow ["first", "1", "2", "ᴺᵁᴸᴸ"] ["second", "2", "null", "6"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNames ["v1", "v2", "invalid_column"]["first", "1", "32"]["second", "2", "64"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNames ["v1", "v2", "v3", "v4"]["first", "1", "2", "3"]["second", "2", "3", "6"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNames ["v1", "v2", "v3", "v4"]["first", "1", "2", "null"] ["second", "2", "null", "6"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNamesAndTypes ["v1", "v2", "invalid_column"]["String", "UInt8", "UInt8"]["first", "1", "32"]["second", "2", "64"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNamesAndTypes ["v1", "v2", "v3", "v4"]["String","UInt8","UInt16","UInt8"]["first", "1", "2", "3"]["second", "2", "3", "6"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNamesAndTypes ["v1", "v2", "v3", "v4"]["String","UInt8","UInt16","UInt8"]["first", "1", "2", "null"] ["second", "2", "null", "6"];
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNamesAndTypes ["v4", "v2", "v3"]["UInt8", "UInt8", "UInt16"]["1", "2", "3"] INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNames ["v4", "v2", "v3"]["1", "2", "3"] SELECT * FROM test_table FORMAT JSONCompactStringsEachRowWithNamesAndTypes;
insert into test_table select * from ( select 'test_value_1'  from numbers_mt(250000)   union all  select 'test_value_2'  from numbers_mt(2000000) ) order by rand();
INSERT INTO test_table SELECT * FROM generateRandom('a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3, \'UTC\'), UUID)', 1, 10, 2) LIMIT 10;
INSERT INTO test_table SELECT 0, '0';
INSERT INTO test_table SELECT 0, 'Value_0';
INSERT INTO test_table SELECT 0, 0, groupArrayArrayState([toUInt64(1)]);
INSERT INTO test_table SELECT 5, '5';
INSERT INTO test_table SELECT id, value FROM test_table_data;
INSERT INTO test_table SELECT number % 3, number, if (number % 2 == 0, number, NULL) FROM system.numbers LIMIT 120;
INSERT INTO test_table SELECT number + 1, number + 1 FROM numbers(15);
INSERT INTO test_table SELECT number + 8, number + 8 FROM numbers(8);
INSERT INTO test_table SELECT number, concat('some string ', CAST(number, 'String')) FROM numbers(1000000);
INSERT INTO test_table SELECT number, number FROM numbers(10);
INSERT INTO test_table SELECT number, number FROM numbers(32);
INSERT INTO test_table SELECT number, number, number FROM numbers(10);
INSERT INTO test_table SELECT number, toString(number * number) FROM system.numbers LIMIT 100;
INSERT INTO test_table SELECT number, toString(number) FROM numbers(10);
INSERT INTO test_table SELECT number, toString(number) FROM system.numbers LIMIT 100;
INSERT INTO test_table SELECT number, toString(number), toString(number), toString(number) FROM numbers(10);
INSERT INTO test_table VALUES ('2020-04-20', 'Hello', 123);
insert into test_table values ('a', 'b'), ('a', null), (null, 'b');
INSERT INTO test_table VALUES ('a', 'b');
INSERT INTO test_table VALUES ('Test');
INSERT INTO test_table VALUES (-10.75, 95.57);
INSERT INTO test_table VALUES (0);
INSERT INTO test_table VALUES (0, '0000:0000:0000:0000:0000:ffff:1.12.12.12');
INSERT INTO test_table VALUES (0, '127.0.0.1', '127.0.0.1');
INSERT INTO test_table VALUES (0, 'Value');
INSERT INTO test_table VALUES (0, 'Value', [1, 2, 3], [[1, 2, 3]]), (0, 'Value', [4, 5, 6], [[1, 2, 3], [4, 5, 6]]);
INSERT INTO test_table VALUES (0, 'Value_0'), (1, 'Value_1'), (2, 'Value_2');
INSERT INTO test_table VALUES (0, 'Value_0');
INSERT INTO test_table VALUES (0, 'Value_0', [1,2,3]);
INSERT INTO test_table VALUES (0, (('value_0_level_1', 'value_1_level_1'), 'value_1_level_0'));
INSERT INTO test_table VALUES (0, 0), (0, 1), (1, 0), (1, 1);
INSERT INTO test_table VALUES (0, [1, 2, 3], [1, 2, 3, 4]);
INSERT INTO test_table VALUES (0, [[('value_0_level_1', 'value_1_level_1')]], ['value_1_level_0']);
INSERT INTO test_table VALUES (0, [[1]], ['1']);
INSERT INTO test_table VALUES (0, toDate32('2019-05-05'));
INSERT INTO test_table VALUES (0, tuple(0));
INSERT INTO test_table VALUES (1);
INSERT INTO test_table VALUES (1, '0000:0000:0000:0000:0000:ffff:123.123.123.123');
INSERT INTO test_table VALUES (1, '22.5'), (2, Null);
INSERT INTO test_table VALUES (1, 'a'), (2, 'b'), (3, 'c');
INSERT INTO test_table VALUES (1, 'Value_1');
INSERT INTO test_table VALUES (1, 0, 100, '2022-12-26 11:38:34'), (1, 101, 200, '2022-12-26 11:38:34'), (2, 0, 999, '2022-12-26 11:38:34'), (2, 1000, 10000, '2022-12-26 11:38:34');
INSERT INTO test_table VALUES (1, 1);
INSERT INTO test_table VALUES (12000, 36, 77.94);
INSERT INTO test_table VALUES (2, '0000:0000:0000:0000:0000:ffff:192.168.100.228');
INSERT INTO test_table VALUES (3,'some_val');
INSERT INTO test_table VALUES (76, 57);
INSERT INTO test_table VALUES(0, 'value_0');
INSERT INTO test_table(timestamp, value) SELECT toDateTime('2020-01-01 12:00:00'), 1 FROM numbers(10);
INSERT INTO test_table(timestamp, value) SELECT toDateTime('2020-01-02 12:00:00'), 1 FROM numbers(10);
INSERT INTO test_table(timestamp, value) SELECT toDateTime('2020-01-03 12:00:00'), 1 FROM numbers(10);
INSERT INTO test_table_1 VALUES (0, 'Value', 0);
INSERT INTO test_table_1 VALUES (2);
INSERT INTO test_table_2 FORMAT JSONCompactEachRow [16, [15, 16, null], ["first", "second", "third"]];
INSERT INTO test_table_2 FORMAT JSONCompactEachRowWithNames ["v1", "n.id", "n.name"][16, [15, 16, null], ["first", "second", "third"]];
INSERT INTO test_table_2 FORMAT JSONCompactStringsEachRow ["16", "[15, 16, 17]", "['first', 'second', 'third']"];
INSERT INTO test_table_2 FORMAT JSONCompactStringsEachRowWithNames ["v1", "n.id", "n.name"]["16", "[15, 16, 17]", "['first', 'second', 'third']"];
INSERT INTO test_table_2 SELECT * FROM generateRandom('a Array(Int8), b UInt32, c Nullable(String), d Decimal32(4), e Nullable(Enum16(\'h\' = 1, \'w\' = 5 , \'o\' = -200)), f Float64, g Tuple(Date, DateTime(\'UTC\'), DateTime64(3, \'UTC\'), UUID), h FixedString(2)', 10, 5, 3) LIMIT 10;
INSERT INTO test_table_2 VALUES (0, 'Value', 0);
INSERT INTO test_table_2 VALUES (2);
insert into test_table__fuzz_3 select * from generateRandom() limit 10;
INSERT INTO test_table_compound VALUES (0, tuple(0, 'Value'));
INSERT INTO test_table_data VALUES (0, 'Value');
INSERT INTO test_table_data VALUES (1, 'Value_1'), (2, 'Value_2');
INSERT INTO test_table_data VALUES (2, 'Value_2'), (3, 'Value_3');
INSERT INTO test_table_float_values SELECT number % 3, number, number FROM system.numbers LIMIT 120;
INSERT INTO test_table_float_values SELECT number % 3, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
INSERT INTO test_table_float_values SELECT number % 3, number, number, number % 3 FROM system.numbers LIMIT 120;
INSERT INTO test_table_for_in VALUES (0), (1);
INSERT INTO test_table_ipv4 VALUES ('1.1.1.1', '1.1.1.1'), ('', '');
INSERT INTO test_table_ipv4_materialized(ip) VALUES ('1.1.1.1'), ('');
INSERT INTO test_table_ipv6 VALUES ('fe80::9801:43ff:fe1f:7690', 'fe80::9801:43ff:fe1f:7690'), ('1.1.1.1', '1.1.1.1'), ('', '');
INSERT INTO test_table_ipv6_materialized(ip) VALUES ('fe80::9801:43ff:fe1f:7690'), ('1.1.1.1'), ('');
INSERT INTO test_table_join SELECT * from test_table_join;
INSERT INTO test_table_join VALUES (0, 'JoinValue');
INSERT INTO test_table_join VALUES (0, 'Value');
INSERT INTO test_table_join VALUES (1, 'q');
INSERT INTO test_table_join_1 VALUES (0, 'Join_1_Value', 'Join_1_Value');
INSERT INTO test_table_join_1 VALUES (0, 'Join_1_Value_0');
INSERT INTO test_table_join_1 VALUES (0, 'Value'), (1, 'Value_1');
INSERT INTO test_table_join_1 VALUES (0, 'Value_0');
INSERT INTO test_table_join_1 VALUES (0, 1), (1, 1);
INSERT INTO test_table_join_1 VALUES (0, 2);
INSERT INTO test_table_join_1 VALUES (1, 'a');
INSERT INTO test_table_join_1 VALUES (1, 'Join_1_Value_1');
INSERT INTO test_table_join_1 VALUES (2, 'Join_1_Value_2');
INSERT INTO test_table_join_1 VALUES (3, 'Join_1_Value_3');
INSERT INTO test_table_join_2 VALUES (0, 'Join_2_Value', 'Join_2_Value');
INSERT INTO test_table_join_2 VALUES (0, 'Join_2_Value_0');
INSERT INTO test_table_join_2 VALUES (0, 'Value'), (1, 'Value_1');
INSERT INTO test_table_join_2 VALUES (0, 'Value_1');
INSERT INTO test_table_join_2 VALUES (0, 1), (1, 1);
INSERT INTO test_table_join_2 VALUES (1, 'b');
INSERT INTO test_table_join_2 VALUES (1, 'Join_2_Value_1');
INSERT INTO test_table_join_2 VALUES (1, 2);
INSERT INTO test_table_join_2 VALUES (2, 'Join_2_Value_2');
INSERT INTO test_table_join_2 VALUES (3, 'Join_2_Value_3');
INSERT INTO test_table_join_3 VALUES (0, 'Join_3_Value', 'Join_3_Value');
INSERT INTO test_table_join_3 VALUES (0, 'Join_3_Value_0');
INSERT INTO test_table_join_3 VALUES (1, 'c');
INSERT INTO test_table_join_3 VALUES (1, 'Join_3_Value_1');
INSERT INTO test_table_join_3 VALUES (2, 'Join_3_Value_2');
INSERT INTO test_table_join_3 VALUES (4, 'Join_3_Value_4');
INSERT INTO test_table_null_specifics VALUES (0, 1, 1, NULL);
INSERT INTO test_table_null_specifics VALUES (0, 1, 1, NULL, 1);
INSERT INTO test_table_null_specifics VALUES (0, 1, 1, NULL, 1, 1);
INSERT INTO test_table_null_specifics VALUES (0, 2, NULL, NULL);
INSERT INTO test_table_null_specifics VALUES (0, 2, NULL, NULL, 1);
INSERT INTO test_table_null_specifics VALUES (0, 2, NULL, NULL, 1, 2);
INSERT INTO test_table_null_specifics VALUES (0, 2, NULL, NULL, 2, NULL);
INSERT INTO test_table_null_specifics VALUES (0, 3, 3, NULL);
INSERT INTO test_table_null_specifics VALUES (0, 3, 3, NULL, 1);
INSERT INTO test_table_null_specifics VALUES (0, 3, 3, NULL, 1, 3);
INSERT INTO test_table_null_specifics VALUES (0, 3, 3, NULL, 3, 3);
INSERT INTO test_table_nullable VALUES (0, 0), (0, 1), (1, 0), (1, 1), (0, NULL), (1, NULL);
INSERT INTO test_table_nullable_float_values SELECT number % 3, number, number FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_float_values SELECT number % 3, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_float_values SELECT number % 3, number, number, number % 3 FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_signed_values SELECT number % 3, number, number, number, number FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_signed_values SELECT number % 3, number, number, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_signed_values SELECT number % 3, number, number, number, number, number % 3 FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_unsigned_values SELECT number % 3, number, number, number, number FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_unsigned_values SELECT number % 3, number, number, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
INSERT INTO test_table_nullable_unsigned_values SELECT number % 3, number, number, number, number, number % 3 FROM system.numbers LIMIT 120;
INSERT INTO test_table_signed_values SELECT number % 3, number, number, number, number FROM system.numbers LIMIT 120;
INSERT INTO test_table_signed_values SELECT number % 3, number, number, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
INSERT INTO test_table_signed_values SELECT number % 3, number, number, number, number, number % 3 FROM system.numbers LIMIT 120;
INSERT INTO test_table_tuple VALUES (0, ('value_0_level_0', 'value_1_level_0'));
INSERT INTO test_table_unsigned_values SELECT number % 3, number, number, number, number FROM system.numbers LIMIT 120;
INSERT INTO test_table_unsigned_values SELECT number % 3, number, number, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
INSERT INTO test_table_unsigned_values SELECT number % 3, number, number, number, number, number % 3 FROM system.numbers LIMIT 120;
INSERT INTO test_tb VALUES (1, '1'), (2, '2'), (3, '3');
insert into test_tbl values('1', '2020-11-11'), ('1', '2021-01-01');
INSERT INTO test_tiny_log VALUES (64, 'Value1', ['Value2', 'Value3', NULL]);
INSERT INTO test_ttl_group_by01763(key, ts, value) SELECT number%5 as key, now() -  interval 2 month + number, 0 FROM numbers(1000);
INSERT INTO test_ttl_group_by01763(key, ts, value) SELECT number%5 as key, now() -  interval 2 month + number, 1 FROM numbers(100000);
INSERT INTO test_ttl_group_by01763(key, ts, value) SELECT number%5 as key, now() -  interval 2 month + number, 3 FROM numbers(1000);
INSERT INTO test_ttl_group_by01763(key, ts, value) SELECT number%5 as key, now() - interval 10 minute + number, 0 FROM numbers(1000);
INSERT INTO test_ttl_group_by01763(key, ts, value) SELECT number%5 as key, now() - interval 10 minute + number, 1 FROM numbers(100000);
INSERT INTO test_ttl_group_by01763(key, ts, value) SELECT number%5 as key, now() - interval 10 minute + number, 3 FROM numbers(1000);
insert into test_tuple values ('2020-09-01 00:01:02', 1, 2), ('2020-09-01 00:01:03', 2, 3), ('2020-09-02 00:01:03', 3, 4);
INSERT INTO test_tuple VALUES ((NULL, 1));
INSERT INTO test_tuple VALUES ((NULL, 2));
insert into test_tuple values (1, 1, 1);
INSERT INTO test_tuple_element VALUES (tuple(1,2)), (tuple(NULL, 3));
INSERT INTO test_tuple_filter VALUES (1,'A','2021-01-01'),(2,'B','2021-01-01'),(3,'C','2021-01-01'),(4,'D','2021-01-02'),(5,'E','2021-01-02');
INSERT INTO test_tuple_filter__fuzz_2 SELECT number, toString(number), toDate('2024-01-01') + number FROM numbers(10);
INSERT INTO test_tuple_nested_in_array VALUES ([(NULL, 1)]);
INSERT INTO test_tuple_nested_in_array VALUES ([(NULL, 2), (3, NULL), (NULL, 4)]);
INSERT INTO test_tuple_nested_in_array_nested_in_tuple VALUES ( (NULL, [(NULL, 1)]) );
INSERT INTO test_tuple_nested_in_array_nested_in_tuple VALUES ( (NULL, [(NULL, 2), (3, NULL), (NULL, 4)]) );
INSERT INTO test_tuple_nested_in_map VALUES (map('test', (NULL, 1)));
INSERT INTO test_tuple_nested_in_map_nested_in_tuple VALUES ( (NULL, map('test', (NULL, 1))) );
insert into test_two_args values (1, 2, 3), (2, 1, 3), (0, 3, 4);
insert into test_tz_hour select toDateTime('2021-06-01 00:00:00', 'UTC') + number * 600, 'x' from numbers(1e3);
INSERT INTO test_tz_setting VALUES ('2000-01-01 01:00:00');
INSERT INTO test_u64_local VALUES ('2018-08-01', 1);
insert into test_uint64 values ('0'), (NULL), (1), ('2');
INSERT INTO test_vertical_merge SELECT number, number + 5, number * 12 from numbers(1000);
INSERT INTO test_wide_nested SELECT number, [number,number + 1], ['aa','bb'], [number,number * 2] FROM numbers(5);
INSERT INTO test_wide_not_nested SELECT number, number, 'aa', number * 2 FROM numbers(5);
INSERT INTO test_xy(x, y) VALUES (1, 'a1'), (2, 'a2'), (3, 'a3');
insert into test_zkinsert (name, path) values ('testc', '/2-insert-testz//c/cd/');
insert into test_zkinsert (name, path, value) values ('testc', '/2-insert-testz//c/cd/dd//', 'y');
insert into test_zkinsert (name, path, value) values ('testz', '/2-insert-testx', 'y');
insert into test_zkinsert (name, value, path) values ('testb', 'z', '/2-insert-testx');
INSERT INTO testAggregatingMT (*) VALUES ('d1', 1, 1);
INSERT INTO testCleanupR1 (*) VALUES ('d1', 1, 0),('d2', 1, 0),('d3', 1, 0),('d4', 1, 0);
INSERT INTO testCleanupR1 (*) VALUES ('d1', 2, 1);
INSERT INTO testCleanupR1 (*) VALUES ('d3', 2, 1);
INSERT INTO testCollapsingMT (*) VALUES ('d1', 1, 1, 1);
INSERT INTO testing SELECT number, number, number, number, number%2 FROM numbers(5);
INSERT INTO testing SELECT randomString(5), randomString(5), randomString(5), randomString(5) FROM numbers(10);
INSERT INTO testJoinTable VALUES (1, '1'), (2, '2'), (3, '3');
INSERT INTO testMT (*) VALUES ('d1', 1, 1);
INSERT INTO testmt VALUES (1, '1'), (2, '2');
INSERT INTO testNullableStates SELECT   toDateTime('2020-01-01 00:00:00') + number AS ts,   toString(number % 999 - 5) AS id,   NULL AS string,   NULL AS float64,   NULL AS float32,   NULL AS decimal325,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL FROM numbers(500);
INSERT INTO testNullableStates SELECT   toDateTime('2020-01-01 00:00:00') + number AS ts,   toString(number % 999) AS id,   toString(number) AS string,   number / 333 AS float64,   number / 333 AS float32,   number / 333 AS decimal325,   toDate(ts),   ts,   ts,   number,   toInt32(number),   toInt16(number),   toInt8(number) FROM numbers(100000);
INSERT INTO testSettingsR1 (*) VALUES ('c1', 1, 1),('c2', 1, 0),('c3', 1, 1),('c4', 1, 0);
INSERT INTO testSummingMT (*) VALUES ('d1', 1, 1);
insert into TestTable (column, start, end) values('test', toDateTime('2020-07-20 09:00:00'), toDateTime('2020-07-20 20:00:00')),('test1', toDateTime('2020-07-20 09:00:00'), toDateTime('2020-07-20 20:00:00')),('test2', toDateTime('2020-07-20 09:00:00'), toDateTime('2020-07-20 20:00:00'));
INSERT INTO testTable VALUES ('A', 1),('B',2),('C',3);
INSERT INTO TESTTABLE values (0,'0',['1']), (1,'1',['1']);
INSERT INTO TESTTABLE4 VALUES (0,'1','1'), (1,'0','1');
insert into TestTbl values(1, '2022-10-20', 'first');
insert into TestTbl values(1, '2022-10-21', 'second');
INSERT INTO testVersionedCMT (*) VALUES ('d1', 1, 1, 1);
INSERT INTO testx VALUES (100000, 0);
INSERT INTO ties VALUES (1), (1), (2), (2), (2), (2) (3), (3);
INSERT INTO time_table VALUES (now() - 5, 5), (now() - 3, 3);
INSERT INTO time_table VALUES (now(), 101);
INSERT INTO times SELECT now();
INSERT INTO tj VALUES (2, -2, 20, 200, 2000, 20000), (3, -3, 30, 300, 3000, 30000), (4, -4, 40, 400, 4000, 40000), (5, -5, 50, 500, 5000, 50000), (6, -6, 60, 600, 6000, 60000);
INSERT INTO tlc VALUES (NULL), ('qwe');
INSERT INTO tmp (*) VALUES ('a') SELECT count() FROM (SELECT initialQueryID() FROM remote('127.0.0.{1..3}', currentDatabase(), 'tmp') GROUP BY queryID());
insert into tmp select * from numbers(1000);
INSERT INTO tmp SELECT * FROM system.numbers LIMIT 20;
insert into tmp values ('src_table_1'), ('src_table_3');
INSERT INTO tmp_table_01818 SELECT 2 as `id`, 'Database' as `advertiser_id`, * EXCEPT (`id`, `advertiser_id`) FROM generateRandom(   '`id` UInt32,   `advertiser_id` String,   `campaign_id` String,   `name` String,   `budget` Float64,   `budget_mode` String,   `landing_type` String,   `status` String,   `modify_time` String,   `campaign_type` String,   `campaign_create_time` DateTime,   `campaign_modify_time` DateTime,   `create_time` DateTime,   `update_time` DateTime', 10, 10, 10) LIMIT 100;
INSERT INTO tmp_table_01818 SELECT 3 as `id`, 'ClickHouse' as `advertiser_id`, * EXCEPT (`id`, `advertiser_id`) FROM generateRandom(   '`id` UInt32,   `advertiser_id` String,   `campaign_id` String,   `name` String,   `budget` Float64,   `budget_mode` String,   `landing_type` String,   `status` String,   `modify_time` String,   `campaign_type` String,   `campaign_create_time` DateTime,   `campaign_modify_time` DateTime,   `create_time` DateTime,   `update_time` DateTime', 10, 10, 10) LIMIT 100;
INSERT INTO tnul VALUES (NULL), ('qwe');
INSERT INTO to_uuid_test VALUES ('61f0c404-5cb3-11e7-907b-a6006ad3dba0');
INSERT INTO to_uuid_test VALUES ('61f0c404-5cb3-11e7-907b-a6006ad3dba0T');
INSERT INTO tokenbf_tab VALUES (1, 'Hello ClickHouse'), (2, 'Hello World'), (3, 'Good Weather'), (4, 'Say Hello'), (5, 'OLAP Database'), (6, 'World Champion');
INSERT INTO tokenbf_v1_hasany_test VALUES (1, ['this is a test', 'example.com']), (2, ['another test', 'another example']);
INSERT INTO toModifiedJulianDay_test VALUES ('1858-11-16'), ('1858-11-17'), ('2020-11-01');
INSERT INTO topk WITH number % 7 = 0 AS frequent SELECT toString(frequent ? number % 10 : number), frequent ? 999999999 : number FROM numbers(4000000);
INSERT INTO topXtest SELECT number FROM numbers(10);
INSERT INTO topXtest SELECT number FROM numbers(100);
INSERT INTO topXtest SELECT number FROM numbers(30);
INSERT INTO totimezone_op_mono VALUES (1, 'UTC', toDateTime('2020-09-01 00:00:00', 'UTC')), (2, 'UTC', toDateTime('2020-09-02 00:00:00', 'UTC'));
insert into tp (p, k, v1, v2) values ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
insert into tp select number%3, generateUUIDv4(), 1 from numbers(300);
insert into tp select number, number from numbers(3);
insert into tp select number, number from numbers(5);
insert into tp values (1), (2), (3), (4);
insert into tp values (1, 2, 3);
insert into tp2 select 'aaa', 2;
insert into tp2 select 'bbb', 1;
insert into tp_1 select number, number from numbers(3);
insert into tp_1 select number, number from numbers(4);
insert into tp_1 select number, number from numbers(5);
INSERT INTO trace_log values ('2020-10-06','2020-10-06 13:43:39','2020-10-06 13:43:39.208819',1601981019208819975,54441,'Real',20412,'2e8ddf40-48da-4641-8ccc-573dd487753f',[140316350688023,130685338,226362737,224904385,227758790,227742969,227761037,224450136,219847931,219844987,219854151,223212098,223208665,228194329,228227607,257889111,257890159,258775545,258767526,140316350645979,140316343425599],0);
insert into tracking_events_tmp select 2, '2020-07-09' from numbers(1555);
insert into tracking_events_tmp select 2, '2020-07-10' from numbers(1881);
insert into tracking_events_tmp select 2, '2020-07-11' from numbers(1623);
INSERT INTO transaction VALUES (1, 52.5, 1);
INSERT INTO transactions VALUES ('facebook.com'), ('meta.ua'), ('baidu.com');
INSERT INTO transform_null_in SELECT number, number * 2 FROM numbers(8192 * 10) SETTINGS transform_null_in = true;
insert into trend values ('2019-01-28', 1, '2019-01-29 10:00:00', 1003, 'phone') ('2019-01-28', 1, '2019-01-29 10:00:00', 1004, 'phone') ('2019-01-28', 1, '2019-01-28 10:00:00', 1002, 'phone');
insert into trend values ('2019-01-28', 1, '2019-01-29 10:00:00', 1004, 'phone') ('2019-01-28', 1, '2019-01-29 10:00:00', 1003, 'phone') ('2019-01-28', 1, '2019-01-28 10:00:00', 1002, 'phone');
insert into trepl values ('2018-09-19', 1, 1);
insert into trunc select * from numbers(20);
INSERT INTO truncate_test VALUES(1), (2), (3);
INSERT INTO truncate_test_log VALUES(1);
INSERT INTO truncate_test_materialized_depend VALUES('2000-01-01', 1);
INSERT INTO truncate_test_memory VALUES(1);
INSERT INTO truncate_test_merge_tree VALUES('2000-01-01', 1);
INSERT INTO truncate_test_set VALUES(0);
INSERT INTO truncate_test_stripe_log VALUES(1);
INSERT INTO truncate_test_tiny_log VALUES(1);
insert into ts VALUES (1, 10, 1), (1, 12, 2), (3, 5, 1), (3, 7, 3), (5, 1, 1), (5, 3, 1);
insert into ts VALUES (3, 5, 1), (3, 7, 1);
insert into ts VALUES (3, 7, 1), (5, 1, 1), (5, 3, 1);
insert into ts VALUES (5, 1, 1), (5, 3, 1);
insert into tst values ('2018-02-01 00:00:00', 1), ('2018-02-02 00:00:00', 2), ('2018-02-01 00:00:00', 3), ('2018-02-02 00:00:00', 4);
insert into tst values ('2018-02-01 00:00:00', 1), ('2018-02-02 00:00:00', 2);
insert into tsv(a) select number from numbers(10000000);
INSERT INTO tt SELECT * FROM numbers(10);
INSERT INTO tt1 VALUES (1);
INSERT INTO tt2 VALUES (2);
INSERT INTO tt3(a, c) VALUES (3, 4);
INSERT INTO tt4 VALUES (5);
INSERT INTO tt6 VALUES (1, 1, 1, 1, 'ok');
INSERT INTO tt_01373 SELECT number%13, number%17, 1 from numbers(1000000);
insert into tt_null values('x');
INSERT INTO ttl VALUES ('2000-01-01 01:02:03'), ('2000-02-03 04:05:06');
insert into ttl values (1, 'a') (2, 'b') (3, 'c') (4, 'd');
insert into ttl values (1, 'a', 'aa') (2, 'b', 'bb') (3, 'c', 'cc') (4, 'd', 'dd');
insert into ttl values (1, 1, 'a') (2, 1, 'a') (3, 1, 'a') (4, 1, 'a');
insert into ttl values (1, 1, 'a') (2, 1, 'b') (3, 1, 'c') (4, 1, 'd');
insert into ttl values (1, 2, 3, '2100-01-01');
insert into ttl values (toDate('2000-01-02'), 1, 'a') (toDate('2000-01-03'), 2, 'b') (toDate('2080-01-01'), 3, 'c') (toDate('2080-01-03'), 4, 'd');
insert into ttl values (toDateTime('2000-10-10 00:00:00'), 1), (toDateTime('2000-10-10 00:00:00'), 2) insert into ttl values (toDateTime('2100-10-10 00:00:00'), 3), (toDateTime('2100-10-10 00:00:00'), 4);
insert into ttl values (toDateTime('2000-10-10 00:00:00'), 1);
insert into ttl values (toDateTime('2000-10-10 00:00:00'), 2);
insert into ttl values (toDateTime('2100-10-10 00:00:00'), 3);
insert into ttl values (toDateTime('2100-10-10 00:00:00'), 4);
insert into ttl_00933_1 values (1, 1);
insert into ttl_00933_1 values (now() + 1000, 5, 6);
insert into ttl_00933_1 values (now(), 1, 2);
insert into ttl_00933_1 values (now(), 3, 4);
insert into ttl_00933_1 values (toDate('2000-10-10'), 1);
insert into ttl_00933_1 values (toDate('2100-10-10'), 2);
insert into ttl_00933_1 values (toDateTime('2000-10-10 00:00:00'), 1);
insert into ttl_00933_1 values (toDateTime('2000-10-10 00:00:00'), 2);
insert into ttl_00933_1 values (toDateTime('2000-10-10 00:00:00'), 3);
insert into ttl_00933_1 values (toDateTime('2100-10-10 00:00:00'), 3);
insert into ttl_00933_2 values (toDateTime('2000-10-10 00:00:00'), 1);
insert into ttl_00933_2 values (toDateTime('2000-10-10 00:00:00'), 1, 100);
insert into ttl_00933_2 values (toDateTime('2000-10-10 00:00:00'), 1, 5);
insert into ttl_00933_2 values (toDateTime('2000-10-10 00:00:00'), 2);
insert into ttl_00933_2 values (toDateTime('2000-10-10 00:00:00'), 2, 10);
insert into ttl_00933_2 values (toDateTime('2000-10-10 00:00:00'), 2, 200);
insert into ttl_00933_2 values (toDateTime('2100-10-10 00:00:00'), 3);
insert into ttl_00933_2 values (toDateTime('2100-10-10 00:00:00'), 3, 15);
insert into ttl_00933_2 values (toDateTime('2100-10-10 00:00:00'), 3, 300);
insert into ttl_00933_2 values (toDateTime('2100-10-10 00:00:00'), 4);
insert into ttl_00933_2 values (toDateTime('2100-10-10 00:00:00'), 4, 20);
insert into ttl_00933_2 values (toDateTime('2100-10-10 00:00:00'), 4, 400);
INSERT INTO ttl_group_by SELECT toDate('1970-10-10'), number, number FROM numbers(100);
INSERT INTO ttl_group_by SELECT toDate('2000-10-10'), number, number FROM numbers(100);
INSERT INTO ttl_group_by_bug(key, ts, value) SELECT number%5 as key, now() - interval 10 minute + number, 0 FROM numbers(1000);
INSERT INTO ttl_table VALUES(toDate('2020-10-01'), 144);
insert into ttl_test_02129 select number, '', '2021-01-01' from numbers(10);
insert into ttl_test_02129 select number, '', '2021-01-01', 1 from numbers(10);
INSERT INTO ttl_where SELECT toDate('1970-10-10'), number FROM numbers(10);
INSERT INTO ttl_with_default VALUES (now() - 1000, 1) (now() - 1000, 2) (now() + 1000, 3)(now() + 1000, 4);
INSERT INTO ttt01746 SELECT toDate('2021-02-14') + (number % 30) AS d, number AS n FROM numbers(1500000);
INSERT INTO ttt01778 values('1',1),('2',2),('3',3);
INSERT INTO ttttttt VALUES ('2023-02-20 00:00:00', 1, 2, 3);
INSERT INTO tuple VALUES (('2000-01-01', 123, 456));
INSERT INTO tuple VALUES ((concat('2000', '-01-01'), /* Hello */ 12+3, 45+6));
INSERT INTO tuple_01016 VALUES (('2018-01-01 00:00:00', 1));
INSERT INTO tuple_values VALUES ((1)), ((2,));
INSERT INTO tutorial VALUES ([(123, 456), (789, 234)], [(567, 890)]), ([], [(11, 22), (33, 44), (55, 66)]);
INSERT INTO tv(key,t,tv) VALUES (1,5,1.5),(1,6,1.51),(1,10,11.5),(1,11,11.51),(1,15,5.5),(1,16,5.6),(1,20,7.5);
INSERT INTO tv(key,t,tv) VALUES (2,5,2.5),(2,6,2.51),(2,10,12.5),(2,11,12.51),(2,15,6.5),(2,16,5.6),(2,20,8.5);
INSERT INTO tvs(k,t,tv) SELECT k, t, t FROM (SELECT toUInt32(number) AS k FROM numbers(1000)) keys CROSS JOIN (SELECT toUInt32(number * 3) as t FROM numbers(10000)) tv_times;
INSERT INTO two_00458 (x, y) VALUES ([1], [0]);
INSERT INTO two_00458 (x, y) VALUES ([4294967290], [4294967290]);
INSERT INTO two_00458 (x, y) VALUES ([4294967299], [4294967299]);
INSERT INTO two_00458 VALUES ('1');
INSERT INTO two_00458 VALUES (1);
INSERT INTO two_00458 VALUES (2147483650);
INSERT INTO two_rows_per_granule (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
INSERT INTO two_rows_per_granule (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-19', 8, 7000, 8000);
insert into txn_counters(n) values (1);
insert into txn_counters(n) values (2);
insert into txn_counters(n) values (3);
insert into txn_counters(n) values (4);
insert into txn_counters(n) values (5);
INSERT INTO type_json_dst SELECT * FROM type_json_src WHERE id = 5;
INSERT INTO type_json_dst SELECT * FROM type_json_src WHERE id > 1;
INSERT INTO type_json_dst SELECT * FROM type_json_src;
INSERT INTO type_json_dst SELECT data FROM type_json_src;
INSERT INTO type_json_dst VALUES (4, '{"arr": [{"k11": 5, "k22": 6}, {"k11": 7, "k33": 8}]}');
INSERT INTO type_json_src FORMAT JSONAsString {"k1": 2, "k10": [{"a": "1", "b": "2", "c": {"k11": "haha"}}]};
INSERT INTO type_json_src FORMAT JSONAsString {"k1": 1, "k10": [{"a": "1", "b": "2"}, {"a": "2", "b": "3"}]};
INSERT INTO type_json_src VALUES (1, '{"k1": 1, "k2": "foo"}');
INSERT INTO type_json_src VALUES (2, '{"k1": 2, "k2": "bar"}') (3, '{"k1": 3, "k3": "aaa"}');
INSERT INTO type_json_src VALUES (5, '{"arr": "not array"}');
INSERT INTO type_json_src VALUES (5, '{"arr": [{"k22": "str1"}]}') INSERT INTO type_json_dst SELECT * FROM type_json_src WHERE id = 5;
INSERT INTO type_names VALUES (3, toTypeName([1, 2]), toTypeName((256, -1, 3.14, 'str', [1, -1])), toTypeName([(1, [256]), (256, [1, 2])])), (4, toTypeName([1, -1]), toTypeName((256, -1, 3, 'str', [1, 2])), toTypeName([(256, []), (1, [])]));
INSERT INTO tztest (timeBerlin, timeLA) VALUES ('2019-05-06 12:00:00', '2019-05-06 12:00:00');
INSERT INTO u32 (x) VALUES (1);
INSERT INTO u32 (x) VALUES (4294967290);
INSERT INTO u64 (x) VALUES (1);
INSERT INTO u64 (x) VALUES (4294967290);
INSERT INTO u64 (x) VALUES (4294967299);
INSERT INTO u64 VALUES (1);
INSERT INTO u_00751 VALUES ('b');
insert into unhex_in_fix_string_table values(today(), '436C69636B486F757365', '436C69636B486F757365');
INSERT INTO unicode VALUES ('Ahoj', 'Tento kód můžete upravit a spustit');
INSERT INTO unicode VALUES ('Bonjour', 'Ce code est modifiable et exécutable !');
INSERT INTO unicode VALUES ('Chào bạn', 'Bạn có thể edit và run code trực tiếp!');
INSERT INTO unicode VALUES ('Ciao', 'Questo codice è modificabile ed eseguibile!');
INSERT INTO unicode VALUES ('Control characters \x1f\x1f\x1f\x1f with zero width', 'Invalid UTF-8 which eats pending characters \xf0, or invalid by itself \x80 with zero width');
INSERT INTO unicode VALUES ('Cześć', 'Ten kod można edytować oraz uruchomić!');
INSERT INTO unicode VALUES ('Hallo', 'Dieser Code kann bearbeitet und ausgeführt werden!');
INSERT INTO unicode VALUES ('Hej', 'Den här koden kan redigeras och köras!');
INSERT INTO unicode VALUES ('Hola', '¡Este código es editable y ejecutable!');
INSERT INTO unicode VALUES ('Olá', 'Este código é editável e executável!');
INSERT INTO unicode VALUES ('Russian ё and ё ', 'Zero bytes \0 \0 in middle');
INSERT INTO unicode VALUES ('Tabs \t Tabs', 'Non-first \t Tabs');
INSERT INTO unicode VALUES ('Здравствуйте', 'Этот код можно отредактировать и запустить!');
INSERT INTO unicode VALUES ('こんにちは', 'このコードは編集して実行出来ます！');
INSERT INTO unicode VALUES ('你好', '这段代码是可以编辑并且能够运行的！');
INSERT INTO unicode VALUES ('안녕하세요', '여기에서 코드를 수정하고 실행할 수 있습니다!');
INSERT INTO union1 VALUES (1, 2, 3, 4, 5);
INSERT INTO union1 VALUES (11,12,13,14,15);
INSERT INTO union2 VALUES (21,22,23,24,25);
INSERT INTO union3 VALUES (31,32,33,34,35);
INSERT INTO union_bug VALUES ('A', 1), ('B', 2);
INSERT INTO unsigned_types(a) VALUES (1);
INSERT INTO unsorted VALUES (1, 'a'), (5, 'b');
INSERT INTO unsorted VALUES (2, 'c'), (4, 'd');
INSERT INTO unsorted VALUES (3, 'e');
INSERT INTO unsorted_collapsing VALUES (1, 'a', -1), (2, 'b', 1);
INSERT INTO unsorted_collapsing VALUES (1, 'a', 1);
INSERT INTO unsorted_collapsing VALUES (2, 'b', -1), (3, 'c', 1);
INSERT INTO unsorted_replacing VALUES (1, 'a', 5), (5, 'b', 4);
INSERT INTO unsorted_replacing VALUES (2, 'c', 3), (4, 'd', 2);
INSERT INTO unsorted_replacing VALUES (3, 'e', 1);
INSERT INTO updates(x, y) VALUES (2, 'b2'), (3, 'b3');
INSERT INTO user VALUES (1,'U1')(2,'U2')(3,'U3');
INSERT INTO user_local (id, name, age) VALUES (1, 'aaa', 21);
INSERT INTO userid_set VALUES (1),(2),(3);
INSERT INTO userid_set VALUES (1, 'Mary'),(2, 'Jane'),(3, 'Mary'),(4, 'Jack');
INSERT INTO userid_set2 values (1,'John', '1990-01-01');
INSERT INTO userid_test VALUES (1),(2),(3),(4),(5);
INSERT INTO userid_test VALUES (1, 'Jack'),(2, 'Mary'),(3, 'Mary'),(4, 'John'),(5, 'Mary');
INSERT INTO users VALUES ('00000000-0000-0000-0000-000000000001');
INSERT INTO users VALUES ('00000000-0000-0000-0000-000000000002');
INSERT INTO users VALUES (111, 'JFK', 33);
INSERT INTO users VALUES (6666, 'KLM', 48);
INSERT INTO users VALUES (88888, 'AMS', 50);
INSERT INTO using1 VALUES (1, 1) (2, 2) (3, 3);
INSERT INTO using2 VALUES (4, 4) (2, 2) (3, 3);
INSERT INTO uuid (created_at, id) VALUES ('2018-01-01 01:02:03', '00000000-0000-03f8-9cb8-cb1b82fb3900');
INSERT INTO uuid VALUES ('2018-01-01 01:02:03', '00000000-0000-05f8-9cb8-cb1b82fb3900', '00000000-0000-06f8-9cb8-cb1b82fb3900');
INSERT INTO v1 ( id ) VALUES (1);
INSERT INTO v2 ( value ) VALUES (1);
INSERT INTO v_00751 VALUES ('b');
INSERT INTO valid_min_index_granularity_bytes_setting SELECT number, concat('xxxxxxxxxx', toString(number)) FROM numbers(1000,1000);
insert into values_01564 this is bad syntax values ('f');
insert into values_01564 values ('f');
insert into values_01564 values (11);
INSERT INTO values_template_fallback VALUES (+020), (+030), (+040);
INSERT INTO values_template_fallback VALUES (1 + 2), (3 + +04), (5 + 6);
INSERT INTO values_template_fallback VALUES (1 + x);
INSERT INTO values_template_nullable VALUES ((1), lower(replaceAll('Hella', 'a', 'o')), 1 + 2 + 3, arraySort(x -> assumeNotNull(x), [null, NULL::Nullable(UInt8)])),  ((2), lower(replaceAll('Warld', 'b', 'o')), 4 - 5 + 6, arraySort(x -> assumeNotNull(x), [+1, -1, Null])),  ((3), lower(replaceAll('Test', 'c', 'o')), 3 + 2 - 1, arraySort(x -> assumeNotNull(x), [1, nUlL, 3.14])),  ((4), lower(replaceAll(null, 'c', 'o')), 6 + 5 - null, arraySort(x -> assumeNotNull(x), [3, 2, 1]));
INSERT INTO vec1 VALUES (1, [3, 4, 5]), (2, [2, 4, 8]), (3, [7, 7, 7]);
INSERT INTO vec1 VALUES (1, [3, 4]), (2, [2]), (3, [3, 3, 3]), (4, NULL), (5, range(7, 27)), (6, range(3, 103));
INSERT INTO vec1d VALUES (1, [3, 4]), (2, [2]), (3, [3, 3, 3]), (4, NULL), (5, range(7, 27)), (6, range(3, 103));
INSERT INTO vec1f VALUES (1, [3, 4]), (2, [2]), (3, [3, 3, 3]), (4, NULL), (5, range(7, 27)), (6, range(3, 103));
INSERT INTO vec2 VALUES (1, [100, 200, 0]), (2, [888, 777, 666]), (3, range(1, 35, 1)), (4, range(3, 37, 1)), (5, range(1, 135, 1)), (6, range(3, 137, 1));
INSERT INTO vec2d VALUES (1, [100, 200, 0]), (2, [888, 777, 666]), (3, range(1, 35, 1)), (4, range(3, 37, 1)), (5, range(1, 135, 1)), (6, range(3, 137, 1));
INSERT INTO vec2f VALUES (1, [100, 200, 0]), (2, [888, 777, 666]), (3, range(1, 35, 1)), (4, range(3, 37, 1)), (5, range(1, 135, 1)), (6, range(3, 137, 1));
insert into versioned_collapsing values ('2018-09-19', 123, 1, 0);
INSERT INTO versioned_collapsing_merge_tree VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO versioned_collapsing_merge_tree VALUES (1, 1, 1, '2020-01-01'), (1, -1, 1, '2020-01-01'), (1, 1, 2, '2020-01-01');
INSERT INTO versioned_collapsing_merge_tree_with_sampling VALUES ('2000-01-01', 'Hello, world!', 123, 'xxx yyy', -123, 123456789);
INSERT INTO versioned_collapsing_table VALUES (toDate('2019-10-10'), 1, 1, 'Hello', -1, 1);
INSERT INTO Versions VALUES ('1.2.3.4'),('1.2'),('1.2.3'),('1');
INSERT INTO video_log SELECT   toUnixTimestamp('2022-07-22 01:00:00') + (rowNumberInAllBlocks() / 20000),   user_id_raw % 100000000 AS user_id,   100 AS device_id,   domain_raw % 100,   (bytes_raw % 1024) + 128,   (duration_raw % 300) + 100 FROM rng LIMIT 10;
INSERT INTO video_log SELECT   toUnixTimestamp('2022-07-22 01:00:00') + (rowNumberInAllBlocks() / 20000),   user_id_raw % 100000000 AS user_id,   device_id_raw % 200000000 AS device_id,   domain_raw % 100,   (bytes_raw % 1024) + 128,   (duration_raw % 300) + 100 FROM rng LIMIT 1728000;
INSERT INTO video_log SELECT  toUnixTimestamp('2022-07-22 01:00:00')  + (rowNumberInAllBlocks() / 20000),  user_id_raw % 100000000 AS user_id,  100 AS device_id,  domain_raw % 100,  (bytes_raw % 1024) + 128,  (duration_raw % 300) + 100 FROM rng LIMIT 10;
INSERT INTO video_log SELECT  toUnixTimestamp('2022-07-22 01:00:00')  + (rowNumberInAllBlocks() / 20000),  user_id_raw % 100000000 AS user_id,  device_id_raw % 200000000 AS device_id,  domain_raw % 100,  (bytes_raw % 1024) + 128,  (duration_raw % 300) + 100 FROM rng LIMIT 1728000;
INSERT INTO view VALUES (1, 'v');
INSERT INTO visits (`CounterID`,`StartDate`,`StartTime`,`Sign`,`GoalsID`) VALUES (1, toDate('2000-01-01'), toDateTime(toDate('2000-01-01')), 1, [1]);
INSERT INTO visits_dist (StartDate, Name) VALUES ('2020-01-01', 'hello');
INSERT INTO visits_dist (StartDate, Name) VALUES ('2020-01-02', 'hello2');
INSERT INTO weird_partitions_02245(d, id) SELECT   toDateTime('2021-12-31 22:30:00') AS d,   number FROM numbers(1000);
INSERT INTO weird_partitions_02245(d, id) SELECT   toDateTime('2022-01-01 00:30:00') AS d,   number FROM numbers(1000);
INSERT INTO weird_partitions_02245(d, id) SELECT   toDateTime('2022-01-31 22:30:00') AS d,   number FROM numbers(1000);
INSERT INTO weird_partitions_02245(d, id) SELECT   toDateTime('2023-01-31 22:30:00') AS d,   number FROM numbers(1000);
INSERT INTO welch_ttest VALUES (0.010268, 0), (0.000167, 0), (0.000167, 0), (0.159258, 1), (0.136278, 1), (0.122389, 1);
INSERT INTO welch_ttest VALUES (27.5, 0), (21.0, 0), (19.0, 0), (23.6, 0), (17.0, 0), (17.9, 0), (16.9, 0), (20.1, 0), (21.9, 0), (22.6, 0), (23.1, 0), (19.6, 0), (19.0, 0), (21.7, 0), (21.4, 0), (27.1, 1), (22.0, 1), (20.8, 1), (23.4, 1), (23.4, 1), (23.5, 1), (25.8, 1), (22.0, 1), (24.8, 1), (20.2, 1), (21.9, 1), (22.1, 1), (22.9, 1), (20.5, 1), (24.4, 1);
INSERT INTO welch_ttest VALUES (30.02, 0), (29.99, 0), (30.11, 0), (29.97, 0), (30.01, 0), (29.99, 0), (29.89, 1), (29.93, 1), (29.72, 1), (29.98, 1), (30.02, 1), (29.98, 1);
INSERT INTO welch_ttest__fuzz_7 VALUES (0.010268, 0), (0.000167, 0), (0.000167, 0), (0.159258, 1), (0.136278, 1), (0.122389, 1);
INSERT INTO where_qualified VALUES(1, 1);
INSERT INTO where_qualified VALUES(2, 0);
INSERT INTO wide_to_comp SELECT number, number, number FROM numbers(100000);
INSERT INTO wikistat1 SELECT toDateTime('2020-10-01 00:00:00'), 'hello', 'world', '/data/path', 10 from numbers(100);
INSERT INTO wikistat1 SELECT toDateTime('2020-10-01 00:00:00'), 'hello', 'world', '/data/path', 10 from numbers(99, 99);
INSERT INTO with_deduplication VALUES (42);
INSERT INTO with_deduplication VALUES (43);
INSERT INTO with_fill_date VALUES (toDate('2020-02-05'), 1);
INSERT INTO with_fill_date VALUES (toDate('2020-02-05'), toDate32('2020-02-05'));
INSERT INTO with_fill_date VALUES (toDate('2020-02-16'), 3);
INSERT INTO with_fill_date VALUES (toDate('2020-02-16'), toDate32('2020-02-16'));
INSERT INTO with_fill_date VALUES (toDate('2020-03-03'), 3);
INSERT INTO with_fill_date VALUES (toDate('2020-03-03'), toDate32('2020-03-03'));
INSERT INTO with_fill_date VALUES (toDate('2020-03-10'), 2);
INSERT INTO with_fill_date VALUES (toDate('2020-06-10'), toDate32('2020-06-10'));
INSERT INTO with_fill_date VALUES (toDateTime('2020-02-05 10:20:00', 'UTC'), toDateTime64('2020-02-05 10:20:00', 3, 'UTC'));
INSERT INTO with_fill_date VALUES (toDateTime('2020-03-08 11:01:00', 'UTC'), toDateTime64('2020-03-08 11:01:00', 3, 'UTC'));
insert into with_nullable values(0,'f'),(0,'usa');
insert into with_overflow select 1, 1 from numbers(256);
INSERT INTO without_deduplication VALUES (42);
INSERT INTO without_deduplication VALUES (43);
INSERT INTO without_fixed_size_columns VALUES ('a'), ('aa'), ('b'), ('cc');
INSERT INTO without_fixed_size_columns_replica1 VALUES ('a'), ('aa'), ('b'), ('cc');
insert into without_nullable values(0,'usa'),(0,'us2a');
INSERT INTO words SELECT * FROM generateRandom('i Int, word String',1,10) LIMIT 1 BY i LIMIT 10000;
INSERT INTO wrong_metadata VALUES (1, 2, 3);
INSERT INTO wrong_metadata VALUES (4, 5, 6);
INSERT INTO wrong_metadata_wide VALUES (1, 2, 3);
INSERT INTO wrong_metadata_wide VALUES (4, 5, 6);
insert into wt select 0, number from numbers(5);
insert into wups (a) values(['foo']);
insert into wups (a) values([]);
insert into X (id) values (1);
insert into X (id, x_a) values   (4, 'l5'), (4, 'l6'), (5, 'l7'), (8, 'l8'), (9, 'l9');
insert into X (id, x_a, x_b) values (1, 'l1', 1), (2, 'l2', 2), (2, 'l3', 3), (3, 'l4', 4);
insert into X (id, x_name) values (1, 'A'), (2, 'B'), (2, 'C'), (3, 'D'), (4, 'E'), (4, 'F'), (5, 'G'), (8, 'H'), (9, 'I');
insert into x values ('2022-10-01 10:10:10');
insert into x values (1);
insert into x values (1, 1), (1, 2), (1, 3), (2, 4), (2, 5), (2, 6);
insert into x values (1, 2, 3);
insert into x values (1, [2]);
insert into x values (10, 1), (20, 2), (30, 3), (40, 4);
INSERT INTO x VALUES (['Hello', 'World'], ['abc', 'def'], 'test');
INSERT INTO x VALUES (today(), now());
insert into xp select '2020-01-01', number , '' from numbers(100000);
INSERT INTO xp SELECT '2020-01-01', number, '' FROM numbers(100000);
insert into xp select null, 100;
insert into xp select number, number + 2 from numbers(10);
INSERT INTO XXXX FORMAT Values ('2020-09-01 00:01:02', 1), ('2020-09-01 20:01:03', 2), ('2020-09-02 00:01:03', 3);
insert into XXXX select number*60, 0 from numbers(100000);
INSERT INTO xxxx_null SELECT '2021-11-11 00:00:00';
insert into xyz values (1, 2, 3);
insert into Y (id) values (2);
insert into Y (id, y_a) values   (1, 'r1'), (1, 'r2'), (2, 'r3'), (3, 'r4'), (3, 'r5');
insert into Y (id, y_a, y_b) values (4, 'r6', 'nr6'), (6, 'r7', 'nr7'), (7, 'r8', 'nr8'), (9, 'r9', 'nr9');
insert into Y (id, y_name) values (1, 'a'), (1, 'b'), (2, 'c'), (3, 'd'), (3, 'e'), (4, 'f'), (6, 'g'), (7, 'h'), (9, 'i');
insert into y values (1,1);
INSERT INTO y_dist SELECT * FROM numbers(10) settings insert_shard_id = 1;
INSERT INTO y_dist SELECT * FROM numbers(10, 10) settings insert_shard_id = 2;
insert into z select number, '2021-10-24', intDiv (number, 10000), 1 from numbers(1000000);
insert into z_00725_3 values(1,1,1);
INSERT INTO zero_rows_per_granule (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
INSERT INTO zero_rows_per_granule (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-19', 8, 7000, 8000);
INSERT INTO zero_rows_per_granule (p, k, v1, v2, Sign) VALUES ('2018-05-15', 1, 1000, 2000, 1), ('2018-05-16', 2, 3000, 4000, 1), ('2018-05-17', 3, 5000, 6000, 1), ('2018-05-18', 4, 7000, 8000, 1);
INSERT INTO zero_rows_per_granule (p, k, v1, v2, Sign) VALUES ('2018-05-15', 5, 1000, 2000, 1), ('2018-05-16', 6, 3000, 4000, 1), ('2018-05-17', 7, 5000, 6000, 1), ('2018-05-19', 8, 7000, 8000, 1);
INSERT INTO zero_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 1, 1000, 2000, 1, 1), ('2018-05-16', 2, 3000, 4000, 1, 1), ('2018-05-17', 3, 5000, 6000, 1, 1), ('2018-05-18', 4, 7000, 8000, 1, 1);
INSERT INTO zero_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES ('2018-05-15', 5, 1000, 2000, 1, 1), ('2018-05-16', 6, 3000, 4000, 1, 1), ('2018-05-17', 7, 5000, 6000, 1, 1), ('2018-05-19', 8, 7000, 8000, 1, 1);
INSERT INTO zero_rows_per_granule1 (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
INSERT INTO zero_rows_per_granule2 (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-19', 8, 7000, 8000);
INSERT INTO zstd_1_00 SELECT * FROM words;
INSERT INTO zstd_1_24 SELECT * FROM words;
INSERT INTO zstd_9_00 SELECT * FROM words;
INSERT INTO zstd_9_24 SELECT * FROM words;
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.date_table VALUES(1, toDate('2019-05-05'), toDate('2019-05-20'), 0.33);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.date_table VALUES(1, toDate('2019-05-21'), toDate('2019-05-30'), 0.42);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.date_table VALUES(2, toDate('2019-05-21'), toDate('2019-05-30'), 0.46);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.datetime_table VALUES(1, toDateTime('2019-05-05 00:00:00'), toDateTime('2019-05-20 00:00:00'), 0.33);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.datetime_table VALUES(1, toDateTime('2019-05-21 00:00:00'), toDateTime('2019-05-30 00:00:00'), 0.42);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.datetime_table VALUES(2, toDateTime('2019-05-21 00:00:00'), toDateTime('2019-05-30 00:00:00'), 0.46);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.dicttbl VALUES (12, 'hello', '55:66:77');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.mt_buffer_00158 (x) SELECT number AS x FROM system.numbers LIMIT 1000000;
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.src VALUES (3);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.t_00751 VALUES ('2000-01-01', 'a', 'a') ('2000-01-02', 'b', 'b');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.t_00751 VALUES ('2000-01-03', 'a', 'a') ('2000-01-04', 'b', 'b');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_for_dict SELECT number, number % 17, toString(number * number), number / 2.0 from numbers(100);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_for_dict VALUES (1, 1.1);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_for_dict VALUES (1, 100, 'Hello world');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie SELECT  '255.255.255.255/' || toString(number) AS prefix,  toString(number) AS val FROM VALUES ('number UInt32', 5, 13, 24, 30);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie SELECT  'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/' || toString((number + 1) * 13 % 129) AS prefix,  toString((number + 1) * 13 % 129) AS val FROM system.numbers LIMIT 129;
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie SELECT  'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/' || toString(number) AS prefix,  toString(number) AS val FROM VALUES ('number UInt32', 5, 13, 24, 48, 49, 99, 127);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie VALUES ('101.79.55.22', 'JA'), ('127.0.0.1', 'RU'), ('2620:0:870::/48', 'US'), ('2a02:6b8:1::/48', 'UK'), ('2001:db8::/32', 'ZZ');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie VALUES ('101.79.55.22', 'JA');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie SELECT  '255.255.255.255/' || toString(number) AS prefix,  toUInt32(number) AS val FROM VALUES ('number UInt32', 5, 13, 24, 30);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('101.79.55.22', 11212, 'UK');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.0.0/16', 2);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.0.0/24', 3);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.0.0/8', 1);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.0.0/8', 1270, 'RU');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.0.1/32', 4);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.0.2', 1272, 'RU');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.127.0/32', 5);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.128.1/32', 6);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.255.0/32', 7);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.255.1/32', 8);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.0.255.255/32', 9);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.1.0.0/16', 10);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.1.1.0', 11);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.1.255.0/24', 12);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.254.0.0/15', 13);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.254.0.127', 14);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.0.0/16', 15);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.128.0/24', 16);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.128.1/32', 17);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.128.10/32', 18);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.128.128/25', 19);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.255.128/32', 20);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('127.255.255.255/32', 21);
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie VALUES ('202.79.32.2', 11211, 'NP');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.table_with_hierarchy VALUES (3, 2, 'Hamovniki'), (2, 1, 'Moscow'), (1, 10000, 'Russia') (7, 10000, 'Ulan-Ude');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.test_00571 VALUES('2018-02-16', 'a', 'a');
insert into {CLICKHOUSE_DATABASE:Identifier}.test_01051_d values (1, 'a');
insert into {CLICKHOUSE_DATABASE:Identifier}.test_table_01080 values(1,'test1');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.u_00751 VALUES ('a');
INSERT INTO {CLICKHOUSE_DATABASE:Identifier}.v_00751 VALUES ('a');