CREATE INDEX ON public.t1 (c1);
CREATE UNIQUE INDEX ON public.t1 (c1);
CREATE INDEX ON public.t1 (c1);
CREATE INDEX CONCURRENTLY ON public.t1 (c1);
CREATE INDEX i1 ON public.t1 (c1);
CREATE INDEX IF NOT EXISTS i1 ON public.t1 (c1);
CREATE INDEX ON ONLY public.t1 (c1);
CREATE INDEX ON public.t1 USING btree (c1);
CREATE INDEX i1 ON public.t1 ((c1 + c2));
CREATE INDEX i1 ON public.t1 (c1 COLLATE "en_US");
CREATE INDEX i1 ON public.t1 USING gist (c1 gist_hstore_ops);
CREATE INDEX i1 ON public.t1 (c1 ASC, c2 DESC);
CREATE INDEX i1 ON public.t1 ((c1 + c2) ASC NULLS LAST);
CREATE INDEX i1 ON public.t1 (c1 ASC NULLS FIRST, c2 DESC NULLS LAST);
CREATE INDEX i1 ON public.t1 USING gist (c1 public.gist_hstore_ops (siglen='2024'));
CREATE INDEX i1 ON public.t1 USING gist (c1 public.gist__int_ops (numranges='252'));
CREATE INDEX i1 ON public.t1 (c1 opclass (param='') ASC NULLS FIRST);
CREATE INDEX ON public.t1 (c1, c2) INCLUDE (c3, c4);
CREATE INDEX ON public.t1 (c1) WITH (fastupdate);
CREATE INDEX ON public.t1 (c1) WITH (fastupdate = false, autosummarize = true);
CREATE INDEX ON public.t1 (c1) TABLESPACE test_tablespace;
CREATE INDEX ON public.t1 (c1) WHERE c1 > 0;
CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS i1 ON ONLY public.t1 ((c1 * 2) ASC NULLS FIRST);
CREATE INDEX ON public.t1 (c1) INCLUDE (c2) WITH (fastupdate) TABLESPACE test_tablespace WHERE c1 > 0;

ALTER INDEX i1 RENAME TO i2;
ALTER INDEX IF EXISTS i1 RENAME TO i2;
ALTER INDEX i1 SET TABLESPACE test_tablespace;
ALTER INDEX IF EXISTS i1 SET TABLESPACE test_tablespace;
ALTER INDEX public.i1 ATTACH PARTITION public.i2;
ALTER INDEX i1 DEPENDS ON EXTENSION ext;
ALTER INDEX i2 NO DEPENDS ON EXTENSION ext;
ALTER INDEX i1 SET (fastupdate = false);
ALTER INDEX IF EXISTS i1 SET (fastupdate= true, autosummarize = false);
ALTER INDEX i1 RESET (autosummarize);
ALTER INDEX IF EXISTS i1 RESET (fastupdate, autosummarize);
ALTER INDEX i1 ALTER 1 SET STATISTICS 10;
ALTER INDEX i1 ALTER c1 SET STATISTICS 10;
ALTER INDEX i1 ALTER COLUMN 1 SET STATISTICS 10;
ALTER INDEX i1 ALTER COLUMN c1 SET STATISTICS 10;
ALTER INDEX IF EXISTS i1 ALTER 1 SET STATISTICS 25;
ALTER INDEX IF EXISTS i1 ALTER c1 SET STATISTICS 25;
ALTER INDEX IF EXISTS i1 ALTER COLUMN 1 SET STATISTICS -1;
ALTER INDEX IF EXISTS i1 ALTER COLUMN c1 SET STATISTICS -1;
ALTER INDEX ALL IN TABLESPACE test_tablespace SET TABLESPACE pg_default;
ALTER INDEX ALL IN TABLESPACE test_tablespace SET TABLESPACE pg_default NOWAIT;
ALTER INDEX ALL IN TABLESPACE test_tablespace OWNED BY usr1, usr2 SET TABLESPACE pg_default;
ALTER INDEX ALL IN TABLESPACE test_tablespace OWNED BY usr1, usr2 SET TABLESPACE pg_default NOWAIT;

DROP INDEX public.i1;
DROP INDEX public.i1, i2, i3;
DROP INDEX CONCURRENTLY public.i1;
DROP INDEX IF EXISTS public.i1;
DROP INDEX public.i1 CASCADE;
DROP INDEX public.i1 RESTRICT;
DROP INDEX CONCURRENTLY IF EXISTS public.i1, i2 CASCADE;

REINDEX INDEX public.i1;
REINDEX TABLE public.t1;
REINDEX SCHEMA public;
REINDEX DATABASE d;
REINDEX SYSTEM s;
REINDEX (VERBOSE) INDEX public.i1;
REINDEX (VERBOSE) TABLE public.t1;
REINDEX (VERBOSE) SCHEMA public;
REINDEX (VERBOSE) DATABASE d;
REINDEX (VERBOSE) SYSTEM s;
REINDEX INDEX CONCURRENTLY public.i1;
REINDEX TABLE CONCURRENTLY public.t1;
REINDEX SCHEMA CONCURRENTLY public;
REINDEX DATABASE CONCURRENTLY d;
REINDEX SYSTEM CONCURRENTLY s;
REINDEX (VERBOSE) INDEX CONCURRENTLY public.i1;
REINDEX (VERBOSE) TABLE CONCURRENTLY public.t1;
REINDEX (VERBOSE) SCHEMA CONCURRENTLY public;
REINDEX (VERBOSE) DATABASE CONCURRENTLY d;
REINDEX (VERBOSE) SYSTEM CONCURRENTLY s;